

================================================================
== Vitis HLS Report for 'merge_sort_batch0_80'
================================================================
* Date:           Sun Apr 23 22:15:36 2023

* Version:        2022.2 (Build 3670227 on Oct 13 2022)
* Project:        sort_seperate_bucket
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: virtexuplus
* Target device:  xcu280-fsvh2892-2L-e


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  3.355 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-------+-------+---------+
    |  Latency (cycles) |  Latency (absolute) |    Interval   | Pipeline|
    |   min   |   max   |    min   |    max   |  min  |  max  |   Type  |
    +---------+---------+----------+----------+-------+-------+---------+
    |    31252|    31252|  0.313 ms|  0.313 ms|  31252|  31252|       no|
    +---------+---------+----------+----------+-------+-------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------------+---------+---------+----------+-----------+-----------+-------+----------+
        |                   |  Latency (cycles) | Iteration|  Initiation Interval  |  Trip |          |
        |     Loop Name     |   min   |   max   |  Latency |  achieved |   target  | Count | Pipelined|
        +-------------------+---------+---------+----------+-----------+-----------+-------+----------+
        |- VITIS_LOOP_62_1  |    31250|    31250|         2|          1|          1|  31250|       yes|
        +-------------------+---------+---------+----------+-----------+-----------+-------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 2
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 2


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 2
* Pipeline : 1
  Pipeline-0 : II = 1, D = 2, States = { 1 2 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.55>
ST_1 : Operation 5 [1/1] (0.00ns)   --->   "%i = alloca i32 1"   --->   Operation 5 'alloca' 'i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%k = alloca i32 1"   --->   Operation 6 'alloca' 'k' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%j = alloca i32 1"   --->   Operation 7 'alloca' 'j' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.45ns)   --->   "%store_ln62 = store i32 0, i32 %j" [sort_seperate_bucket/multi_radix_hex_kmerge.c:62]   --->   Operation 8 'store' 'store_ln62' <Predicate = true> <Delay = 0.45>
ST_1 : Operation 9 [1/1] (0.41ns)   --->   "%store_ln62 = store i32 0, i32 %k" [sort_seperate_bucket/multi_radix_hex_kmerge.c:62]   --->   Operation 9 'store' 'store_ln62' <Predicate = true> <Delay = 0.41>
ST_1 : Operation 10 [1/1] (0.38ns)   --->   "%store_ln62 = store i15 0, i15 %i" [sort_seperate_bucket/multi_radix_hex_kmerge.c:62]   --->   Operation 10 'store' 'store_ln62' <Predicate = true> <Delay = 0.38>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%br_ln62 = br void %for.body.i" [sort_seperate_bucket/multi_radix_hex_kmerge.c:62]   --->   Operation 11 'br' 'br_ln62' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%i_174 = load i15 %i" [sort_seperate_bucket/multi_radix_hex_kmerge.c:62]   --->   Operation 12 'load' 'i_174' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%k_200 = load i32 %k" [sort_seperate_bucket/multi_radix_hex_kmerge.c:77]   --->   Operation 13 'load' 'k_200' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%j_202 = load i32 %j" [sort_seperate_bucket/multi_radix_hex_kmerge.c:81]   --->   Operation 14 'load' 'j_202' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.66ns)   --->   "%icmp_ln62 = icmp_eq  i15 %i_174, i15 31250" [sort_seperate_bucket/multi_radix_hex_kmerge.c:62]   --->   Operation 15 'icmp' 'icmp_ln62' <Predicate = true> <Delay = 0.66> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.66> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%empty = speclooptripcount i32 @_ssdm_op_SpecLoopTripCount, i64 31250, i64 31250, i64 31250"   --->   Operation 16 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.77ns)   --->   "%add_ln62 = add i15 %i_174, i15 1" [sort_seperate_bucket/multi_radix_hex_kmerge.c:62]   --->   Operation 17 'add' 'add_ln62' <Predicate = true> <Delay = 0.77> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%br_ln62 = br i1 %icmp_ln62, void %for.body.split.i, void %merge_sort_batch0.80.exit" [sort_seperate_bucket/multi_radix_hex_kmerge.c:62]   --->   Operation 18 'br' 'br_ln62' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%zext_ln62 = zext i15 %i_174" [sort_seperate_bucket/multi_radix_hex_kmerge.c:62]   --->   Operation 19 'zext' 'zext_ln62' <Predicate = (!icmp_ln62)> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%specpipeline_ln63 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 0, i32 0, void @empty_25" [sort_seperate_bucket/multi_radix_hex_kmerge.c:63]   --->   Operation 20 'specpipeline' 'specpipeline_ln63' <Predicate = (!icmp_ln62)> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%specloopname_ln60 = specloopname void @_ssdm_op_SpecLoopName, void @empty_7" [sort_seperate_bucket/multi_radix_hex_kmerge.c:60]   --->   Operation 21 'specloopname' 'specloopname_ln60' <Predicate = (!icmp_ln62)> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.85ns)   --->   "%icmp_ln64 = icmp_slt  i32 %j_202, i32 15625" [sort_seperate_bucket/multi_radix_hex_kmerge.c:64]   --->   Operation 22 'icmp' 'icmp_ln64' <Predicate = (!icmp_ln62)> <Delay = 0.85> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.85> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 23 [1/1] (0.85ns)   --->   "%icmp_ln64_15 = icmp_slt  i32 %k_200, i32 15625" [sort_seperate_bucket/multi_radix_hex_kmerge.c:64]   --->   Operation 23 'icmp' 'icmp_ln64_15' <Predicate = (!icmp_ln62)> <Delay = 0.85> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.85> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 24 [1/1] (0.12ns)   --->   "%and_ln64 = and i1 %icmp_ln64, i1 %icmp_ln64_15" [sort_seperate_bucket/multi_radix_hex_kmerge.c:64]   --->   Operation 24 'and' 'and_ln64' <Predicate = (!icmp_ln62)> <Delay = 0.12> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.12> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "%multi_radix_hex_kmerge_temp1_16_addr = getelementptr i32 %multi_radix_hex_kmerge_temp1_16, i64 0, i64 %zext_ln62" [sort_seperate_bucket/multi_radix_hex_kmerge.c:80]   --->   Operation 25 'getelementptr' 'multi_radix_hex_kmerge_temp1_16_addr' <Predicate = (!icmp_ln62)> <Delay = 0.00>
ST_1 : Operation 26 [1/1] (0.00ns)   --->   "%br_ln64 = br i1 %and_ln64, void %if.else16.i, void %if.then.i" [sort_seperate_bucket/multi_radix_hex_kmerge.c:64]   --->   Operation 26 'br' 'br_ln64' <Predicate = (!icmp_ln62)> <Delay = 0.00>
ST_1 : Operation 27 [1/1] (0.85ns)   --->   "%icmp_ln75 = icmp_eq  i32 %j_202, i32 15625" [sort_seperate_bucket/multi_radix_hex_kmerge.c:75]   --->   Operation 27 'icmp' 'icmp_ln75' <Predicate = (!icmp_ln62 & !and_ln64)> <Delay = 0.85> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.85> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 28 [1/1] (0.12ns)   --->   "%and_ln75 = and i1 %icmp_ln75, i1 %icmp_ln64_15" [sort_seperate_bucket/multi_radix_hex_kmerge.c:75]   --->   Operation 28 'and' 'and_ln75' <Predicate = (!icmp_ln62 & !and_ln64)> <Delay = 0.12> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.12> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 29 [1/1] (0.00ns)   --->   "%br_ln75 = br i1 %and_ln75, void %if.else26.i, void %if.then20.i" [sort_seperate_bucket/multi_radix_hex_kmerge.c:75]   --->   Operation 29 'br' 'br_ln75' <Predicate = (!icmp_ln62 & !and_ln64)> <Delay = 0.00>
ST_1 : Operation 30 [1/1] (0.00ns)   --->   "%zext_ln80 = zext i32 %j_202" [sort_seperate_bucket/multi_radix_hex_kmerge.c:80]   --->   Operation 30 'zext' 'zext_ln80' <Predicate = (!icmp_ln62 & !and_ln64 & !and_ln75)> <Delay = 0.00>
ST_1 : Operation 31 [1/1] (0.00ns)   --->   "%multi_radix_hex_kmerge_temp0_32_addr_1 = getelementptr i32 %multi_radix_hex_kmerge_temp0_32, i64 0, i64 %zext_ln80" [sort_seperate_bucket/multi_radix_hex_kmerge.c:80]   --->   Operation 31 'getelementptr' 'multi_radix_hex_kmerge_temp0_32_addr_1' <Predicate = (!icmp_ln62 & !and_ln64 & !and_ln75)> <Delay = 0.00>
ST_1 : Operation 32 [2/2] (1.24ns)   --->   "%multi_radix_hex_kmerge_temp0_32_load_1 = load i14 %multi_radix_hex_kmerge_temp0_32_addr_1" [sort_seperate_bucket/multi_radix_hex_kmerge.c:80]   --->   Operation 32 'load' 'multi_radix_hex_kmerge_temp0_32_load_1' <Predicate = (!icmp_ln62 & !and_ln64 & !and_ln75)> <Delay = 1.24> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.24> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 15625> <RAM>
ST_1 : Operation 33 [1/1] (0.88ns)   --->   "%j_204 = add i32 %j_202, i32 1" [sort_seperate_bucket/multi_radix_hex_kmerge.c:81]   --->   Operation 33 'add' 'j_204' <Predicate = (!icmp_ln62 & !and_ln64 & !and_ln75)> <Delay = 0.88> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.88> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 34 [1/1] (0.45ns)   --->   "%store_ln81 = store i32 %j_204, i32 %j" [sort_seperate_bucket/multi_radix_hex_kmerge.c:81]   --->   Operation 34 'store' 'store_ln81' <Predicate = (!icmp_ln62 & !and_ln64 & !and_ln75)> <Delay = 0.45>
ST_1 : Operation 35 [1/1] (0.00ns)   --->   "%zext_ln76 = zext i32 %k_200" [sort_seperate_bucket/multi_radix_hex_kmerge.c:76]   --->   Operation 35 'zext' 'zext_ln76' <Predicate = (!icmp_ln62 & !and_ln64 & and_ln75)> <Delay = 0.00>
ST_1 : Operation 36 [1/1] (0.00ns)   --->   "%multi_radix_hex_kmerge_temp0_33_addr_1 = getelementptr i32 %multi_radix_hex_kmerge_temp0_33, i64 0, i64 %zext_ln76" [sort_seperate_bucket/multi_radix_hex_kmerge.c:76]   --->   Operation 36 'getelementptr' 'multi_radix_hex_kmerge_temp0_33_addr_1' <Predicate = (!icmp_ln62 & !and_ln64 & and_ln75)> <Delay = 0.00>
ST_1 : Operation 37 [2/2] (1.24ns)   --->   "%multi_radix_hex_kmerge_temp0_33_load_1 = load i14 %multi_radix_hex_kmerge_temp0_33_addr_1" [sort_seperate_bucket/multi_radix_hex_kmerge.c:76]   --->   Operation 37 'load' 'multi_radix_hex_kmerge_temp0_33_load_1' <Predicate = (!icmp_ln62 & !and_ln64 & and_ln75)> <Delay = 1.24> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.24> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 15625> <RAM>
ST_1 : Operation 38 [1/1] (0.88ns)   --->   "%k_202 = add i32 %k_200, i32 1" [sort_seperate_bucket/multi_radix_hex_kmerge.c:77]   --->   Operation 38 'add' 'k_202' <Predicate = (!icmp_ln62 & !and_ln64 & and_ln75)> <Delay = 0.88> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.88> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 39 [1/1] (0.45ns)   --->   "%store_ln78 = store i32 15625, i32 %j" [sort_seperate_bucket/multi_radix_hex_kmerge.c:78]   --->   Operation 39 'store' 'store_ln78' <Predicate = (!icmp_ln62 & !and_ln64 & and_ln75)> <Delay = 0.45>
ST_1 : Operation 40 [1/1] (0.41ns)   --->   "%store_ln78 = store i32 %k_202, i32 %k" [sort_seperate_bucket/multi_radix_hex_kmerge.c:78]   --->   Operation 40 'store' 'store_ln78' <Predicate = (!icmp_ln62 & !and_ln64 & and_ln75)> <Delay = 0.41>
ST_1 : Operation 41 [1/1] (0.00ns)   --->   "%zext_ln65 = zext i32 %j_202" [sort_seperate_bucket/multi_radix_hex_kmerge.c:65]   --->   Operation 41 'zext' 'zext_ln65' <Predicate = (!icmp_ln62 & and_ln64)> <Delay = 0.00>
ST_1 : Operation 42 [1/1] (0.00ns)   --->   "%multi_radix_hex_kmerge_temp0_32_addr = getelementptr i32 %multi_radix_hex_kmerge_temp0_32, i64 0, i64 %zext_ln65" [sort_seperate_bucket/multi_radix_hex_kmerge.c:65]   --->   Operation 42 'getelementptr' 'multi_radix_hex_kmerge_temp0_32_addr' <Predicate = (!icmp_ln62 & and_ln64)> <Delay = 0.00>
ST_1 : Operation 43 [2/2] (1.24ns)   --->   "%multi_radix_hex_kmerge_temp0_32_load = load i14 %multi_radix_hex_kmerge_temp0_32_addr" [sort_seperate_bucket/multi_radix_hex_kmerge.c:65]   --->   Operation 43 'load' 'multi_radix_hex_kmerge_temp0_32_load' <Predicate = (!icmp_ln62 & and_ln64)> <Delay = 1.24> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.24> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 15625> <RAM>
ST_1 : Operation 44 [1/1] (0.00ns)   --->   "%zext_ln65_15 = zext i32 %k_200" [sort_seperate_bucket/multi_radix_hex_kmerge.c:65]   --->   Operation 44 'zext' 'zext_ln65_15' <Predicate = (!icmp_ln62 & and_ln64)> <Delay = 0.00>
ST_1 : Operation 45 [1/1] (0.00ns)   --->   "%multi_radix_hex_kmerge_temp0_33_addr = getelementptr i32 %multi_radix_hex_kmerge_temp0_33, i64 0, i64 %zext_ln65_15" [sort_seperate_bucket/multi_radix_hex_kmerge.c:65]   --->   Operation 45 'getelementptr' 'multi_radix_hex_kmerge_temp0_33_addr' <Predicate = (!icmp_ln62 & and_ln64)> <Delay = 0.00>
ST_1 : Operation 46 [2/2] (1.24ns)   --->   "%multi_radix_hex_kmerge_temp0_33_load = load i14 %multi_radix_hex_kmerge_temp0_33_addr" [sort_seperate_bucket/multi_radix_hex_kmerge.c:65]   --->   Operation 46 'load' 'multi_radix_hex_kmerge_temp0_33_load' <Predicate = (!icmp_ln62 & and_ln64)> <Delay = 1.24> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.24> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 15625> <RAM>
ST_1 : Operation 47 [1/1] (0.38ns)   --->   "%store_ln62 = store i15 %add_ln62, i15 %i" [sort_seperate_bucket/multi_radix_hex_kmerge.c:62]   --->   Operation 47 'store' 'store_ln62' <Predicate = (!icmp_ln62)> <Delay = 0.38>
ST_1 : Operation 48 [1/1] (0.00ns)   --->   "%br_ln62 = br void %for.body.i" [sort_seperate_bucket/multi_radix_hex_kmerge.c:62]   --->   Operation 48 'br' 'br_ln62' <Predicate = (!icmp_ln62)> <Delay = 0.00>
ST_1 : Operation 67 [1/1] (0.00ns)   --->   "%ret_ln62 = ret" [sort_seperate_bucket/multi_radix_hex_kmerge.c:62]   --->   Operation 67 'ret' 'ret_ln62' <Predicate = (icmp_ln62)> <Delay = 0.00>

State 2 <SV = 1> <Delay = 3.35>
ST_2 : Operation 49 [1/2] (1.24ns)   --->   "%multi_radix_hex_kmerge_temp0_32_load_1 = load i14 %multi_radix_hex_kmerge_temp0_32_addr_1" [sort_seperate_bucket/multi_radix_hex_kmerge.c:80]   --->   Operation 49 'load' 'multi_radix_hex_kmerge_temp0_32_load_1' <Predicate = (!and_ln64 & !and_ln75)> <Delay = 1.24> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.24> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 15625> <RAM>
ST_2 : Operation 50 [1/1] (1.24ns)   --->   "%store_ln80 = store i32 %multi_radix_hex_kmerge_temp0_32_load_1, i15 %multi_radix_hex_kmerge_temp1_16_addr" [sort_seperate_bucket/multi_radix_hex_kmerge.c:80]   --->   Operation 50 'store' 'store_ln80' <Predicate = (!and_ln64 & !and_ln75)> <Delay = 1.24> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.24> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 31250> <RAM>
ST_2 : Operation 51 [1/1] (0.00ns)   --->   "%br_ln0 = br void %for.inc.i"   --->   Operation 51 'br' 'br_ln0' <Predicate = (!and_ln64 & !and_ln75)> <Delay = 0.00>
ST_2 : Operation 52 [1/2] (1.24ns)   --->   "%multi_radix_hex_kmerge_temp0_33_load_1 = load i14 %multi_radix_hex_kmerge_temp0_33_addr_1" [sort_seperate_bucket/multi_radix_hex_kmerge.c:76]   --->   Operation 52 'load' 'multi_radix_hex_kmerge_temp0_33_load_1' <Predicate = (!and_ln64 & and_ln75)> <Delay = 1.24> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.24> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 15625> <RAM>
ST_2 : Operation 53 [1/1] (1.24ns)   --->   "%store_ln76 = store i32 %multi_radix_hex_kmerge_temp0_33_load_1, i15 %multi_radix_hex_kmerge_temp1_16_addr" [sort_seperate_bucket/multi_radix_hex_kmerge.c:76]   --->   Operation 53 'store' 'store_ln76' <Predicate = (!and_ln64 & and_ln75)> <Delay = 1.24> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.24> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 31250> <RAM>
ST_2 : Operation 54 [1/1] (0.00ns)   --->   "%br_ln78 = br void %for.inc.i" [sort_seperate_bucket/multi_radix_hex_kmerge.c:78]   --->   Operation 54 'br' 'br_ln78' <Predicate = (!and_ln64 & and_ln75)> <Delay = 0.00>
ST_2 : Operation 55 [1/2] (1.24ns)   --->   "%multi_radix_hex_kmerge_temp0_32_load = load i14 %multi_radix_hex_kmerge_temp0_32_addr" [sort_seperate_bucket/multi_radix_hex_kmerge.c:65]   --->   Operation 55 'load' 'multi_radix_hex_kmerge_temp0_32_load' <Predicate = (and_ln64)> <Delay = 1.24> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.24> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 15625> <RAM>
ST_2 : Operation 56 [1/2] (1.24ns)   --->   "%multi_radix_hex_kmerge_temp0_33_load = load i14 %multi_radix_hex_kmerge_temp0_33_addr" [sort_seperate_bucket/multi_radix_hex_kmerge.c:65]   --->   Operation 56 'load' 'multi_radix_hex_kmerge_temp0_33_load' <Predicate = (and_ln64)> <Delay = 1.24> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.24> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 15625> <RAM>
ST_2 : Operation 57 [1/1] (0.85ns)   --->   "%icmp_ln65 = icmp_slt  i32 %multi_radix_hex_kmerge_temp0_32_load, i32 %multi_radix_hex_kmerge_temp0_33_load" [sort_seperate_bucket/multi_radix_hex_kmerge.c:65]   --->   Operation 57 'icmp' 'icmp_ln65' <Predicate = (and_ln64)> <Delay = 0.85> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.85> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 58 [1/1] (0.00ns)   --->   "%br_ln65 = br i1 %icmp_ln65, void %if.else.i, void %if.then6.i" [sort_seperate_bucket/multi_radix_hex_kmerge.c:65]   --->   Operation 58 'br' 'br_ln65' <Predicate = (and_ln64)> <Delay = 0.00>
ST_2 : Operation 59 [1/1] (1.24ns)   --->   "%store_ln70 = store i32 %multi_radix_hex_kmerge_temp0_33_load, i15 %multi_radix_hex_kmerge_temp1_16_addr" [sort_seperate_bucket/multi_radix_hex_kmerge.c:70]   --->   Operation 59 'store' 'store_ln70' <Predicate = (and_ln64 & !icmp_ln65)> <Delay = 1.24> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.24> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 31250> <RAM>
ST_2 : Operation 60 [1/1] (0.88ns)   --->   "%k_201 = add i32 %k_200, i32 1" [sort_seperate_bucket/multi_radix_hex_kmerge.c:71]   --->   Operation 60 'add' 'k_201' <Predicate = (and_ln64 & !icmp_ln65)> <Delay = 0.88> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.88> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 61 [1/1] (0.41ns)   --->   "%store_ln71 = store i32 %k_201, i32 %k" [sort_seperate_bucket/multi_radix_hex_kmerge.c:71]   --->   Operation 61 'store' 'store_ln71' <Predicate = (and_ln64 & !icmp_ln65)> <Delay = 0.41>
ST_2 : Operation 62 [1/1] (0.00ns)   --->   "%br_ln0 = br void %for.inc.i"   --->   Operation 62 'br' 'br_ln0' <Predicate = (and_ln64 & !icmp_ln65)> <Delay = 0.00>
ST_2 : Operation 63 [1/1] (1.24ns)   --->   "%store_ln66 = store i32 %multi_radix_hex_kmerge_temp0_32_load, i15 %multi_radix_hex_kmerge_temp1_16_addr" [sort_seperate_bucket/multi_radix_hex_kmerge.c:66]   --->   Operation 63 'store' 'store_ln66' <Predicate = (and_ln64 & icmp_ln65)> <Delay = 1.24> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.24> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 31250> <RAM>
ST_2 : Operation 64 [1/1] (0.88ns)   --->   "%j_203 = add i32 %j_202, i32 1" [sort_seperate_bucket/multi_radix_hex_kmerge.c:67]   --->   Operation 64 'add' 'j_203' <Predicate = (and_ln64 & icmp_ln65)> <Delay = 0.88> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.88> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 65 [1/1] (0.45ns)   --->   "%store_ln68 = store i32 %j_203, i32 %j" [sort_seperate_bucket/multi_radix_hex_kmerge.c:68]   --->   Operation 65 'store' 'store_ln68' <Predicate = (and_ln64 & icmp_ln65)> <Delay = 0.45>
ST_2 : Operation 66 [1/1] (0.00ns)   --->   "%br_ln68 = br void %for.inc.i" [sort_seperate_bucket/multi_radix_hex_kmerge.c:68]   --->   Operation 66 'br' 'br_ln68' <Predicate = (and_ln64 & icmp_ln65)> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 2.7ns.

 <State 1>: 1.56ns
The critical path consists of the following:
	'alloca' operation ('j') [6]  (0 ns)
	'load' operation ('j', sort_seperate_bucket/multi_radix_hex_kmerge.c:81) on local variable 'j' [14]  (0 ns)
	'add' operation ('j', sort_seperate_bucket/multi_radix_hex_kmerge.c:81) [37]  (0.88 ns)
	'store' operation ('store_ln81', sort_seperate_bucket/multi_radix_hex_kmerge.c:81) of variable 'j', sort_seperate_bucket/multi_radix_hex_kmerge.c:81 on local variable 'j' [38]  (0.453 ns)
	blocking operation 0.223 ns on control path)

 <State 2>: 3.36ns
The critical path consists of the following:
	'load' operation ('multi_radix_hex_kmerge_temp0_33_load', sort_seperate_bucket/multi_radix_hex_kmerge.c:65) on array 'multi_radix_hex_kmerge_temp0_33' [55]  (1.25 ns)
	'store' operation ('store_ln70', sort_seperate_bucket/multi_radix_hex_kmerge.c:70) of variable 'multi_radix_hex_kmerge_temp0_33_load', sort_seperate_bucket/multi_radix_hex_kmerge.c:65 on array 'multi_radix_hex_kmerge_temp1_16' [59]  (1.25 ns)
	blocking operation 0.859 ns on control path)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
