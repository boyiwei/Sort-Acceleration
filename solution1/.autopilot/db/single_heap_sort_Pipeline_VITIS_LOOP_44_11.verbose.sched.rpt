

================================================================
== Vitis HLS Report for 'single_heap_sort_Pipeline_VITIS_LOOP_44_11'
================================================================
* Date:           Wed Apr 26 16:22:05 2023

* Version:        2022.2 (Build 3670227 on Oct 13 2022)
* Project:        sort_seperate_bucket
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: virtexuplus
* Target device:  xcu280-fsvh2892-2L-e


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  2.754 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |        ?|        ?|         ?|         ?|    ?|    ?|       no|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                   |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |     Loop Name     |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- VITIS_LOOP_44_1  |        ?|        ?|         5|          5|          1|     ?|       yes|
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 5, depth = 6


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 6
* Pipeline : 1
  Pipeline-0 : II = 5, D = 6, States = { 1 2 3 4 5 6 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 0.41>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%loop_iter_2 = alloca i32 1"   --->   Operation 8 'alloca' 'loop_iter_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%largest = alloca i32 1"   --->   Operation 9 'alloca' 'largest' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%zext_ln79_1_read = read i23 @_ssdm_op_Read.ap_auto.i23, i23 %zext_ln79_1"   --->   Operation 10 'read' 'zext_ln79_1_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%j_1_read = read i23 @_ssdm_op_Read.ap_auto.i23, i23 %j_1"   --->   Operation 11 'read' 'j_1_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%zext_ln79_1_cast = zext i23 %zext_ln79_1_read"   --->   Operation 12 'zext' 'zext_ln79_1_cast' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %input_r, void @empty, i32 0, i32 0, void @empty_0, i32 4294967295, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0"   --->   Operation 13 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.41ns)   --->   "%store_ln0 = store i32 0, i32 %largest"   --->   Operation 14 'store' 'store_ln0' <Predicate = true> <Delay = 0.41>
ST_1 : Operation 15 [1/1] (0.38ns)   --->   "%store_ln0 = store i23 0, i23 %loop_iter_2"   --->   Operation 15 'store' 'store_ln0' <Predicate = true> <Delay = 0.38>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%br_ln0 = br void %for.body.i11"   --->   Operation 16 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>

State 2 <SV = 1> <Delay = 1.24>
ST_2 : Operation 17 [1/1] (0.00ns)   --->   "%loop_iter_2_load = load i23 %loop_iter_2"   --->   Operation 17 'load' 'loop_iter_2_load' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 18 [1/1] (0.00ns)   --->   "%largest_1 = load i32 %largest" [sort_seperate_bucket/single_heap_sort.c:46]   --->   Operation 18 'load' 'largest_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 19 [1/1] (0.00ns)   --->   "%specpipeline_ln0 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 1, i32 0, void @p_str"   --->   Operation 19 'specpipeline' 'specpipeline_ln0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 20 [1/1] (0.75ns)   --->   "%icmp_ln44 = icmp_ult  i23 %loop_iter_2_load, i23 %j_1_read" [sort_seperate_bucket/single_heap_sort.c:44]   --->   Operation 20 'icmp' 'icmp_ln44' <Predicate = true> <Delay = 0.75> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.75> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 21 [1/1] (0.82ns)   --->   "%add_ln44 = add i23 %loop_iter_2_load, i23 1"   --->   Operation 21 'add' 'add_ln44' <Predicate = true> <Delay = 0.82> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 22 [1/1] (0.38ns)   --->   "%br_ln44 = br i1 %icmp_ln44, void %for.cond.cleanup.i.loopexit.exitStub, void %for.body.i11.split" [sort_seperate_bucket/single_heap_sort.c:44]   --->   Operation 22 'br' 'br_ln44' <Predicate = true> <Delay = 0.38>
ST_2 : Operation 23 [1/1] (0.00ns)   --->   "%specloopname_ln39 = specloopname void @_ssdm_op_SpecLoopName, void @empty_3" [sort_seperate_bucket/single_heap_sort.c:39]   --->   Operation 23 'specloopname' 'specloopname_ln39' <Predicate = (icmp_ln44)> <Delay = 0.00>
ST_2 : Operation 24 [1/1] (0.00ns)   --->   "%shl_ln46 = shl i32 %largest_1, i32 1" [sort_seperate_bucket/single_heap_sort.c:46]   --->   Operation 24 'shl' 'shl_ln46' <Predicate = (icmp_ln44)> <Delay = 0.00>
ST_2 : Operation 25 [1/1] (0.00ns)   --->   "%left = or i32 %shl_ln46, i32 1" [sort_seperate_bucket/single_heap_sort.c:46]   --->   Operation 25 'or' 'left' <Predicate = (icmp_ln44)> <Delay = 0.00>
ST_2 : Operation 26 [1/1] (0.88ns)   --->   "%right = add i32 %shl_ln46, i32 2" [sort_seperate_bucket/single_heap_sort.c:47]   --->   Operation 26 'add' 'right' <Predicate = (icmp_ln44)> <Delay = 0.88> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.88> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 27 [1/1] (0.00ns)   --->   "%zext_ln50 = zext i32 %left" [sort_seperate_bucket/single_heap_sort.c:50]   --->   Operation 27 'zext' 'zext_ln50' <Predicate = (icmp_ln44)> <Delay = 0.00>
ST_2 : Operation 28 [1/1] (0.85ns)   --->   "%icmp_ln50 = icmp_sgt  i32 %zext_ln79_1_cast, i32 %left" [sort_seperate_bucket/single_heap_sort.c:50]   --->   Operation 28 'icmp' 'icmp_ln50' <Predicate = (icmp_ln44)> <Delay = 0.85> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.85> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 29 [1/1] (0.00ns)   --->   "%br_ln50 = br i1 %icmp_ln50, void %if.end.i21, void %land.lhs.true.i18" [sort_seperate_bucket/single_heap_sort.c:50]   --->   Operation 29 'br' 'br_ln50' <Predicate = (icmp_ln44)> <Delay = 0.00>
ST_2 : Operation 30 [1/1] (0.00ns)   --->   "%input_r_addr = getelementptr i32 %input_r, i64 0, i64 %zext_ln50" [sort_seperate_bucket/single_heap_sort.c:50]   --->   Operation 30 'getelementptr' 'input_r_addr' <Predicate = (icmp_ln44 & icmp_ln50)> <Delay = 0.00>
ST_2 : Operation 31 [2/2] (1.24ns)   --->   "%input_r_load = load i23 %input_r_addr" [sort_seperate_bucket/single_heap_sort.c:50]   --->   Operation 31 'load' 'input_r_load' <Predicate = (icmp_ln44 & icmp_ln50)> <Delay = 1.24> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.24> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 5000000> <RAM>
ST_2 : Operation 32 [1/1] (0.00ns)   --->   "%zext_ln50_1 = zext i32 %largest_1" [sort_seperate_bucket/single_heap_sort.c:50]   --->   Operation 32 'zext' 'zext_ln50_1' <Predicate = (icmp_ln44 & icmp_ln50)> <Delay = 0.00>
ST_2 : Operation 33 [1/1] (0.00ns)   --->   "%input_r_addr_1 = getelementptr i32 %input_r, i64 0, i64 %zext_ln50_1" [sort_seperate_bucket/single_heap_sort.c:50]   --->   Operation 33 'getelementptr' 'input_r_addr_1' <Predicate = (icmp_ln44 & icmp_ln50)> <Delay = 0.00>
ST_2 : Operation 34 [2/2] (1.24ns)   --->   "%input_r_load_1 = load i23 %input_r_addr_1" [sort_seperate_bucket/single_heap_sort.c:50]   --->   Operation 34 'load' 'input_r_load_1' <Predicate = (icmp_ln44 & icmp_ln50)> <Delay = 1.24> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.24> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 5000000> <RAM>

State 3 <SV = 2> <Delay = 2.75>
ST_3 : Operation 35 [1/2] (1.24ns)   --->   "%input_r_load = load i23 %input_r_addr" [sort_seperate_bucket/single_heap_sort.c:50]   --->   Operation 35 'load' 'input_r_load' <Predicate = (icmp_ln44 & icmp_ln50)> <Delay = 1.24> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.24> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 5000000> <RAM>
ST_3 : Operation 36 [1/2] (1.24ns)   --->   "%input_r_load_1 = load i23 %input_r_addr_1" [sort_seperate_bucket/single_heap_sort.c:50]   --->   Operation 36 'load' 'input_r_load_1' <Predicate = (icmp_ln44 & icmp_ln50)> <Delay = 1.24> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.24> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 5000000> <RAM>
ST_3 : Operation 37 [1/1] (0.85ns)   --->   "%icmp_ln50_1 = icmp_sgt  i32 %input_r_load, i32 %input_r_load_1" [sort_seperate_bucket/single_heap_sort.c:50]   --->   Operation 37 'icmp' 'icmp_ln50_1' <Predicate = (icmp_ln44 & icmp_ln50)> <Delay = 0.85> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.85> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 38 [1/1] (0.22ns)   --->   "%select_ln50 = select i1 %icmp_ln50_1, i32 %left, i32 %largest_1" [sort_seperate_bucket/single_heap_sort.c:50]   --->   Operation 38 'select' 'select_ln50' <Predicate = (icmp_ln44 & icmp_ln50)> <Delay = 0.22> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.22> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 39 [1/1] (0.41ns)   --->   "%store_ln50 = store i32 %select_ln50, i32 %largest" [sort_seperate_bucket/single_heap_sort.c:50]   --->   Operation 39 'store' 'store_ln50' <Predicate = (icmp_ln44 & icmp_ln50)> <Delay = 0.41>
ST_3 : Operation 40 [1/1] (0.00ns)   --->   "%br_ln50 = br void %if.end.i21" [sort_seperate_bucket/single_heap_sort.c:50]   --->   Operation 40 'br' 'br_ln50' <Predicate = (icmp_ln44 & icmp_ln50)> <Delay = 0.00>
ST_3 : Operation 41 [1/1] (0.00ns)   --->   "%zext_ln54 = zext i32 %right" [sort_seperate_bucket/single_heap_sort.c:54]   --->   Operation 41 'zext' 'zext_ln54' <Predicate = (icmp_ln44)> <Delay = 0.00>
ST_3 : Operation 42 [1/1] (0.85ns)   --->   "%icmp_ln54 = icmp_sgt  i32 %zext_ln79_1_cast, i32 %right" [sort_seperate_bucket/single_heap_sort.c:54]   --->   Operation 42 'icmp' 'icmp_ln54' <Predicate = (icmp_ln44)> <Delay = 0.85> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.85> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 43 [1/1] (0.00ns)   --->   "%br_ln54 = br i1 %icmp_ln54, void %if.end15.i31, void %land.lhs.true8.i28" [sort_seperate_bucket/single_heap_sort.c:54]   --->   Operation 43 'br' 'br_ln54' <Predicate = (icmp_ln44)> <Delay = 0.00>
ST_3 : Operation 44 [1/1] (0.00ns)   --->   "%largest_load = load i32 %largest" [sort_seperate_bucket/single_heap_sort.c:54]   --->   Operation 44 'load' 'largest_load' <Predicate = (icmp_ln44 & icmp_ln54)> <Delay = 0.00>
ST_3 : Operation 45 [1/1] (0.00ns)   --->   "%input_r_addr_2 = getelementptr i32 %input_r, i64 0, i64 %zext_ln54" [sort_seperate_bucket/single_heap_sort.c:54]   --->   Operation 45 'getelementptr' 'input_r_addr_2' <Predicate = (icmp_ln44 & icmp_ln54)> <Delay = 0.00>
ST_3 : Operation 46 [2/2] (1.24ns)   --->   "%input_r_load_2 = load i23 %input_r_addr_2" [sort_seperate_bucket/single_heap_sort.c:54]   --->   Operation 46 'load' 'input_r_load_2' <Predicate = (icmp_ln44 & icmp_ln54)> <Delay = 1.24> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.24> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 5000000> <RAM>
ST_3 : Operation 47 [1/1] (0.00ns)   --->   "%zext_ln54_1 = zext i32 %largest_load" [sort_seperate_bucket/single_heap_sort.c:54]   --->   Operation 47 'zext' 'zext_ln54_1' <Predicate = (icmp_ln44 & icmp_ln54)> <Delay = 0.00>
ST_3 : Operation 48 [1/1] (0.00ns)   --->   "%input_r_addr_3 = getelementptr i32 %input_r, i64 0, i64 %zext_ln54_1" [sort_seperate_bucket/single_heap_sort.c:54]   --->   Operation 48 'getelementptr' 'input_r_addr_3' <Predicate = (icmp_ln44 & icmp_ln54)> <Delay = 0.00>
ST_3 : Operation 49 [2/2] (1.24ns)   --->   "%input_r_load_3 = load i23 %input_r_addr_3" [sort_seperate_bucket/single_heap_sort.c:54]   --->   Operation 49 'load' 'input_r_load_3' <Predicate = (icmp_ln44 & icmp_ln54)> <Delay = 1.24> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.24> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 5000000> <RAM>

State 4 <SV = 3> <Delay = 2.75>
ST_4 : Operation 50 [1/2] (1.24ns)   --->   "%input_r_load_2 = load i23 %input_r_addr_2" [sort_seperate_bucket/single_heap_sort.c:54]   --->   Operation 50 'load' 'input_r_load_2' <Predicate = (icmp_ln44 & icmp_ln54)> <Delay = 1.24> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.24> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 5000000> <RAM>
ST_4 : Operation 51 [1/2] (1.24ns)   --->   "%input_r_load_3 = load i23 %input_r_addr_3" [sort_seperate_bucket/single_heap_sort.c:54]   --->   Operation 51 'load' 'input_r_load_3' <Predicate = (icmp_ln44 & icmp_ln54)> <Delay = 1.24> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.24> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 5000000> <RAM>
ST_4 : Operation 52 [1/1] (0.85ns)   --->   "%icmp_ln54_1 = icmp_sgt  i32 %input_r_load_2, i32 %input_r_load_3" [sort_seperate_bucket/single_heap_sort.c:54]   --->   Operation 52 'icmp' 'icmp_ln54_1' <Predicate = (icmp_ln44 & icmp_ln54)> <Delay = 0.85> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.85> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 53 [1/1] (0.22ns)   --->   "%select_ln54 = select i1 %icmp_ln54_1, i32 %right, i32 %largest_load" [sort_seperate_bucket/single_heap_sort.c:54]   --->   Operation 53 'select' 'select_ln54' <Predicate = (icmp_ln44 & icmp_ln54)> <Delay = 0.22> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.22> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 54 [1/1] (0.41ns)   --->   "%store_ln54 = store i32 %select_ln54, i32 %largest" [sort_seperate_bucket/single_heap_sort.c:54]   --->   Operation 54 'store' 'store_ln54' <Predicate = (icmp_ln44 & icmp_ln54)> <Delay = 0.41>
ST_4 : Operation 55 [1/1] (0.00ns)   --->   "%br_ln54 = br void %if.end15.i31" [sort_seperate_bucket/single_heap_sort.c:54]   --->   Operation 55 'br' 'br_ln54' <Predicate = (icmp_ln44 & icmp_ln54)> <Delay = 0.00>
ST_4 : Operation 56 [1/1] (0.00ns)   --->   "%largest_2 = load i32 %largest" [sort_seperate_bucket/single_heap_sort.c:62]   --->   Operation 56 'load' 'largest_2' <Predicate = (icmp_ln44)> <Delay = 0.00>
ST_4 : Operation 57 [1/1] (0.85ns)   --->   "%icmp_ln58 = icmp_eq  i32 %largest_2, i32 %largest_1" [sort_seperate_bucket/single_heap_sort.c:58]   --->   Operation 57 'icmp' 'icmp_ln58' <Predicate = (icmp_ln44)> <Delay = 0.85> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.85> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 58 [1/1] (0.38ns)   --->   "%br_ln58 = br i1 %icmp_ln58, void %for.inc.i38, void %for.cond.cleanup.i.loopexit.exitStub" [sort_seperate_bucket/single_heap_sort.c:58]   --->   Operation 58 'br' 'br_ln58' <Predicate = (icmp_ln44)> <Delay = 0.38>
ST_4 : Operation 59 [1/1] (0.00ns)   --->   "%zext_ln62 = zext i32 %largest_1" [sort_seperate_bucket/single_heap_sort.c:62]   --->   Operation 59 'zext' 'zext_ln62' <Predicate = (icmp_ln44 & !icmp_ln58)> <Delay = 0.00>
ST_4 : Operation 60 [1/1] (0.00ns)   --->   "%zext_ln62_1 = zext i32 %largest_2" [sort_seperate_bucket/single_heap_sort.c:62]   --->   Operation 60 'zext' 'zext_ln62_1' <Predicate = (icmp_ln44 & !icmp_ln58)> <Delay = 0.00>
ST_4 : Operation 61 [1/1] (0.00ns)   --->   "%input_r_addr_4 = getelementptr i32 %input_r, i64 0, i64 %zext_ln62" [sort_seperate_bucket/single_heap_sort.c:10]   --->   Operation 61 'getelementptr' 'input_r_addr_4' <Predicate = (icmp_ln44 & !icmp_ln58)> <Delay = 0.00>
ST_4 : Operation 62 [2/2] (1.24ns)   --->   "%temp = load i23 %input_r_addr_4" [sort_seperate_bucket/single_heap_sort.c:10]   --->   Operation 62 'load' 'temp' <Predicate = (icmp_ln44 & !icmp_ln58)> <Delay = 1.24> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.24> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 5000000> <RAM>
ST_4 : Operation 63 [1/1] (0.00ns)   --->   "%input_r_addr_5 = getelementptr i32 %input_r, i64 0, i64 %zext_ln62_1" [sort_seperate_bucket/single_heap_sort.c:11]   --->   Operation 63 'getelementptr' 'input_r_addr_5' <Predicate = (icmp_ln44 & !icmp_ln58)> <Delay = 0.00>
ST_4 : Operation 64 [2/2] (1.24ns)   --->   "%input_r_load_5 = load i23 %input_r_addr_5" [sort_seperate_bucket/single_heap_sort.c:11]   --->   Operation 64 'load' 'input_r_load_5' <Predicate = (icmp_ln44 & !icmp_ln58)> <Delay = 1.24> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.24> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 5000000> <RAM>
ST_4 : Operation 65 [1/1] (0.38ns)   --->   "%store_ln44 = store i23 %add_ln44, i23 %loop_iter_2" [sort_seperate_bucket/single_heap_sort.c:44]   --->   Operation 65 'store' 'store_ln44' <Predicate = (icmp_ln44 & !icmp_ln58)> <Delay = 0.38>
ST_4 : Operation 71 [1/1] (0.00ns)   --->   "%merge = phi i1 1, void %for.body.i11, i1 0, void %if.end15.i31"   --->   Operation 71 'phi' 'merge' <Predicate = (icmp_ln58) | (!icmp_ln44)> <Delay = 0.00>
ST_4 : Operation 72 [1/1] (0.00ns)   --->   "%ret_ln0 = ret i1 %merge"   --->   Operation 72 'ret' 'ret_ln0' <Predicate = (icmp_ln58) | (!icmp_ln44)> <Delay = 0.00>

State 5 <SV = 4> <Delay = 2.49>
ST_5 : Operation 66 [1/2] (1.24ns)   --->   "%temp = load i23 %input_r_addr_4" [sort_seperate_bucket/single_heap_sort.c:10]   --->   Operation 66 'load' 'temp' <Predicate = (icmp_ln44 & !icmp_ln58)> <Delay = 1.24> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.24> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 5000000> <RAM>
ST_5 : Operation 67 [1/2] (1.24ns)   --->   "%input_r_load_5 = load i23 %input_r_addr_5" [sort_seperate_bucket/single_heap_sort.c:11]   --->   Operation 67 'load' 'input_r_load_5' <Predicate = (icmp_ln44 & !icmp_ln58)> <Delay = 1.24> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.24> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 5000000> <RAM>
ST_5 : Operation 68 [1/1] (1.24ns)   --->   "%store_ln11 = store i32 %input_r_load_5, i23 %input_r_addr_4" [sort_seperate_bucket/single_heap_sort.c:11]   --->   Operation 68 'store' 'store_ln11' <Predicate = (icmp_ln44 & !icmp_ln58)> <Delay = 1.24> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.24> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 5000000> <RAM>

State 6 <SV = 5> <Delay = 1.24>
ST_6 : Operation 69 [1/1] (1.24ns)   --->   "%store_ln12 = store i32 %temp, i23 %input_r_addr_5" [sort_seperate_bucket/single_heap_sort.c:12]   --->   Operation 69 'store' 'store_ln12' <Predicate = (icmp_ln44 & !icmp_ln58)> <Delay = 1.24> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.24> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 5000000> <RAM>
ST_6 : Operation 70 [1/1] (0.00ns)   --->   "%br_ln44 = br void %for.body.i11" [sort_seperate_bucket/single_heap_sort.c:44]   --->   Operation 70 'br' 'br_ln44' <Predicate = (icmp_ln44 & !icmp_ln58)> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 2.7ns.

 <State 1>: 0.42ns
The critical path consists of the following:
	'alloca' operation ('largest') [5]  (0 ns)
	'store' operation ('store_ln0') of constant 0 on local variable 'largest' [10]  (0.42 ns)

 <State 2>: 1.25ns
The critical path consists of the following:
	'load' operation ('i', sort_seperate_bucket/single_heap_sort.c:46) on local variable 'largest' [15]  (0 ns)
	'shl' operation ('shl_ln46', sort_seperate_bucket/single_heap_sort.c:46) [22]  (0 ns)
	'or' operation ('left', sort_seperate_bucket/single_heap_sort.c:46) [23]  (0 ns)
	'getelementptr' operation ('input_r_addr', sort_seperate_bucket/single_heap_sort.c:50) [29]  (0 ns)
	'load' operation ('input_r_load', sort_seperate_bucket/single_heap_sort.c:50) on array 'input_r' [30]  (1.25 ns)

 <State 3>: 2.75ns
The critical path consists of the following:
	'load' operation ('input_r_load', sort_seperate_bucket/single_heap_sort.c:50) on array 'input_r' [30]  (1.25 ns)
	'icmp' operation ('icmp_ln50_1', sort_seperate_bucket/single_heap_sort.c:50) [34]  (0.859 ns)
	'select' operation ('select_ln50', sort_seperate_bucket/single_heap_sort.c:50) [35]  (0.227 ns)
	'store' operation ('store_ln50', sort_seperate_bucket/single_heap_sort.c:50) of variable 'select_ln50', sort_seperate_bucket/single_heap_sort.c:50 on local variable 'largest' [36]  (0.42 ns)

 <State 4>: 2.75ns
The critical path consists of the following:
	'load' operation ('input_r_load_2', sort_seperate_bucket/single_heap_sort.c:54) on array 'input_r' [45]  (1.25 ns)
	'icmp' operation ('icmp_ln54_1', sort_seperate_bucket/single_heap_sort.c:54) [49]  (0.859 ns)
	'select' operation ('select_ln54', sort_seperate_bucket/single_heap_sort.c:54) [50]  (0.227 ns)
	'store' operation ('store_ln54', sort_seperate_bucket/single_heap_sort.c:54) of variable 'select_ln54', sort_seperate_bucket/single_heap_sort.c:54 on local variable 'largest' [51]  (0.42 ns)

 <State 5>: 2.5ns
The critical path consists of the following:
	'load' operation ('input_r_load_5', sort_seperate_bucket/single_heap_sort.c:11) on array 'input_r' [63]  (1.25 ns)
	'store' operation ('store_ln11', sort_seperate_bucket/single_heap_sort.c:11) of variable 'input_r_load_5', sort_seperate_bucket/single_heap_sort.c:11 on array 'input_r' [64]  (1.25 ns)

 <State 6>: 1.25ns
The critical path consists of the following:
	'store' operation ('store_ln12', sort_seperate_bucket/single_heap_sort.c:12) of variable 'temp', sort_seperate_bucket/single_heap_sort.c:10 on array 'input_r' [65]  (1.25 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
