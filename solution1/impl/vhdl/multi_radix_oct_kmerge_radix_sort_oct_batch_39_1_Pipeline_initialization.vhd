-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
-- Version: 2022.2
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity multi_radix_oct_kmerge_radix_sort_oct_batch_39_1_Pipeline_initialization is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    bucket_sizes_2197_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    bucket_sizes_2196_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    bucket_sizes_2195_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    bucket_sizes_2194_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    bucket_sizes_2193_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    bucket_sizes_2192_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    bucket_sizes_2191_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    bucket_sizes_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    bucket_address0 : OUT STD_LOGIC_VECTOR (18 downto 0);
    bucket_ce0 : OUT STD_LOGIC;
    bucket_we0 : OUT STD_LOGIC;
    bucket_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    input_38_address0 : OUT STD_LOGIC_VECTOR (17 downto 0);
    input_38_ce0 : OUT STD_LOGIC;
    input_38_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    bucket_sizes_2213_out_i : IN STD_LOGIC_VECTOR (31 downto 0);
    bucket_sizes_2213_out_o : OUT STD_LOGIC_VECTOR (31 downto 0);
    bucket_sizes_2213_out_o_ap_vld : OUT STD_LOGIC;
    bucket_sizes_2212_out_i : IN STD_LOGIC_VECTOR (31 downto 0);
    bucket_sizes_2212_out_o : OUT STD_LOGIC_VECTOR (31 downto 0);
    bucket_sizes_2212_out_o_ap_vld : OUT STD_LOGIC;
    bucket_sizes_2211_out_i : IN STD_LOGIC_VECTOR (31 downto 0);
    bucket_sizes_2211_out_o : OUT STD_LOGIC_VECTOR (31 downto 0);
    bucket_sizes_2211_out_o_ap_vld : OUT STD_LOGIC;
    bucket_sizes_2210_out_i : IN STD_LOGIC_VECTOR (31 downto 0);
    bucket_sizes_2210_out_o : OUT STD_LOGIC_VECTOR (31 downto 0);
    bucket_sizes_2210_out_o_ap_vld : OUT STD_LOGIC;
    bucket_sizes_2209_out_i : IN STD_LOGIC_VECTOR (31 downto 0);
    bucket_sizes_2209_out_o : OUT STD_LOGIC_VECTOR (31 downto 0);
    bucket_sizes_2209_out_o_ap_vld : OUT STD_LOGIC;
    bucket_sizes_2208_out_i : IN STD_LOGIC_VECTOR (31 downto 0);
    bucket_sizes_2208_out_o : OUT STD_LOGIC_VECTOR (31 downto 0);
    bucket_sizes_2208_out_o_ap_vld : OUT STD_LOGIC;
    bucket_sizes_2207_out_i : IN STD_LOGIC_VECTOR (31 downto 0);
    bucket_sizes_2207_out_o : OUT STD_LOGIC_VECTOR (31 downto 0);
    bucket_sizes_2207_out_o_ap_vld : OUT STD_LOGIC;
    bucket_sizes_2206_out_i : IN STD_LOGIC_VECTOR (31 downto 0);
    bucket_sizes_2206_out_o : OUT STD_LOGIC_VECTOR (31 downto 0);
    bucket_sizes_2206_out_o_ap_vld : OUT STD_LOGIC );
end;


architecture behav of multi_radix_oct_kmerge_radix_sort_oct_batch_39_1_Pipeline_initialization is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv3_7 : STD_LOGIC_VECTOR (2 downto 0) := "111";
    constant ap_const_lv3_6 : STD_LOGIC_VECTOR (2 downto 0) := "110";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv3_3 : STD_LOGIC_VECTOR (2 downto 0) := "011";
    constant ap_const_lv3_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv18_0 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv18_2625A : STD_LOGIC_VECTOR (17 downto 0) := "100110001001011010";
    constant ap_const_lv18_1 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000001";
    constant ap_const_lv19_2625A : STD_LOGIC_VECTOR (18 downto 0) := "0100110001001011010";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal icmp_ln20_fu_223_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage0 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal j_32_reg_378 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal j_cast_i_fu_235_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal zext_ln21_31_fu_286_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal bucket_sizes_fu_317_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln23_fu_291_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal j_fu_88 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln20_fu_229_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_sig_allocacmp_j_32 : STD_LOGIC_VECTOR (17 downto 0);
    signal zext_ln21_fu_277_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal add_ln21_fu_280_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp_i_fu_295_p9 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_i_fu_295_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component multi_radix_oct_kmerge_mux_83_32_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        din5_WIDTH : INTEGER;
        din6_WIDTH : INTEGER;
        din7_WIDTH : INTEGER;
        din8_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        din2 : IN STD_LOGIC_VECTOR (31 downto 0);
        din3 : IN STD_LOGIC_VECTOR (31 downto 0);
        din4 : IN STD_LOGIC_VECTOR (31 downto 0);
        din5 : IN STD_LOGIC_VECTOR (31 downto 0);
        din6 : IN STD_LOGIC_VECTOR (31 downto 0);
        din7 : IN STD_LOGIC_VECTOR (31 downto 0);
        din8 : IN STD_LOGIC_VECTOR (2 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component multi_radix_oct_kmerge_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    mux_83_32_1_1_U4001 : component multi_radix_oct_kmerge_mux_83_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => bucket_sizes_2206_out_i,
        din1 => bucket_sizes_2207_out_i,
        din2 => bucket_sizes_2208_out_i,
        din3 => bucket_sizes_2209_out_i,
        din4 => bucket_sizes_2210_out_i,
        din5 => bucket_sizes_2211_out_i,
        din6 => bucket_sizes_2212_out_i,
        din7 => bucket_sizes_2213_out_i,
        din8 => tmp_i_fu_295_p9,
        dout => tmp_i_fu_295_p10);

    flow_control_loop_pipe_sequential_init_U : component multi_radix_oct_kmerge_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage0,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_loop_exit_ready = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter0_stage0)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    j_fu_88_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if (((icmp_ln20_fu_223_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                    j_fu_88 <= add_ln20_fu_229_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    j_fu_88 <= ap_const_lv18_0;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                j_32_reg_378 <= ap_sig_allocacmp_j_32;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    add_ln20_fu_229_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_j_32) + unsigned(ap_const_lv18_1));
    add_ln21_fu_280_p2 <= std_logic_vector(unsigned(zext_ln21_fu_277_p1) + unsigned(ap_const_lv19_2625A));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_exit_pp0_iter0_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone, icmp_ln20_fu_223_p2)
    begin
        if (((icmp_ln20_fu_223_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_subdone, ap_loop_exit_ready, ap_done_reg)
    begin
        if (((ap_loop_exit_ready = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start_int;

    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_idle_pp0 = ap_const_logic_1) and (ap_start_int = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage0;

    ap_ready_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_j_32_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_loop_init, j_fu_88)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_init = ap_const_logic_1))) then 
            ap_sig_allocacmp_j_32 <= ap_const_lv18_0;
        else 
            ap_sig_allocacmp_j_32 <= j_fu_88;
        end if; 
    end process;

    bucket_address0 <= zext_ln21_31_fu_286_p1(19 - 1 downto 0);

    bucket_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            bucket_ce0 <= ap_const_logic_1;
        else 
            bucket_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    bucket_d0 <= input_38_q0;

    bucket_sizes_2206_out_o_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, bucket_sizes_reload, bucket_sizes_2206_out_i, ap_block_pp0_stage0, bucket_sizes_fu_317_p2, trunc_ln23_fu_291_p1, ap_loop_init)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
            if ((ap_loop_init = ap_const_logic_1)) then 
                bucket_sizes_2206_out_o <= bucket_sizes_reload;
            elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (trunc_ln23_fu_291_p1 = ap_const_lv3_0))) then 
                bucket_sizes_2206_out_o <= bucket_sizes_fu_317_p2;
            else 
                bucket_sizes_2206_out_o <= bucket_sizes_2206_out_i;
            end if;
        else 
            bucket_sizes_2206_out_o <= bucket_sizes_2206_out_i;
        end if; 
    end process;


    bucket_sizes_2206_out_o_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, trunc_ln23_fu_291_p1, ap_loop_init)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_init = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (trunc_ln23_fu_291_p1 = ap_const_lv3_0)))) then 
            bucket_sizes_2206_out_o_ap_vld <= ap_const_logic_1;
        else 
            bucket_sizes_2206_out_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    bucket_sizes_2207_out_o_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, bucket_sizes_2191_reload, bucket_sizes_2207_out_i, ap_block_pp0_stage0, bucket_sizes_fu_317_p2, trunc_ln23_fu_291_p1, ap_loop_init)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
            if ((ap_loop_init = ap_const_logic_1)) then 
                bucket_sizes_2207_out_o <= bucket_sizes_2191_reload;
            elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (trunc_ln23_fu_291_p1 = ap_const_lv3_1))) then 
                bucket_sizes_2207_out_o <= bucket_sizes_fu_317_p2;
            else 
                bucket_sizes_2207_out_o <= bucket_sizes_2207_out_i;
            end if;
        else 
            bucket_sizes_2207_out_o <= bucket_sizes_2207_out_i;
        end if; 
    end process;


    bucket_sizes_2207_out_o_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, trunc_ln23_fu_291_p1, ap_loop_init)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_init = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (trunc_ln23_fu_291_p1 = ap_const_lv3_1)))) then 
            bucket_sizes_2207_out_o_ap_vld <= ap_const_logic_1;
        else 
            bucket_sizes_2207_out_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    bucket_sizes_2208_out_o_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, bucket_sizes_2192_reload, bucket_sizes_2208_out_i, ap_block_pp0_stage0, bucket_sizes_fu_317_p2, trunc_ln23_fu_291_p1, ap_loop_init)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
            if ((ap_loop_init = ap_const_logic_1)) then 
                bucket_sizes_2208_out_o <= bucket_sizes_2192_reload;
            elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (trunc_ln23_fu_291_p1 = ap_const_lv3_2))) then 
                bucket_sizes_2208_out_o <= bucket_sizes_fu_317_p2;
            else 
                bucket_sizes_2208_out_o <= bucket_sizes_2208_out_i;
            end if;
        else 
            bucket_sizes_2208_out_o <= bucket_sizes_2208_out_i;
        end if; 
    end process;


    bucket_sizes_2208_out_o_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, trunc_ln23_fu_291_p1, ap_loop_init)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_init = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (trunc_ln23_fu_291_p1 = ap_const_lv3_2)))) then 
            bucket_sizes_2208_out_o_ap_vld <= ap_const_logic_1;
        else 
            bucket_sizes_2208_out_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    bucket_sizes_2209_out_o_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, bucket_sizes_2193_reload, bucket_sizes_2209_out_i, ap_block_pp0_stage0, bucket_sizes_fu_317_p2, trunc_ln23_fu_291_p1, ap_loop_init)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
            if ((ap_loop_init = ap_const_logic_1)) then 
                bucket_sizes_2209_out_o <= bucket_sizes_2193_reload;
            elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (trunc_ln23_fu_291_p1 = ap_const_lv3_3))) then 
                bucket_sizes_2209_out_o <= bucket_sizes_fu_317_p2;
            else 
                bucket_sizes_2209_out_o <= bucket_sizes_2209_out_i;
            end if;
        else 
            bucket_sizes_2209_out_o <= bucket_sizes_2209_out_i;
        end if; 
    end process;


    bucket_sizes_2209_out_o_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, trunc_ln23_fu_291_p1, ap_loop_init)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_init = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (trunc_ln23_fu_291_p1 = ap_const_lv3_3)))) then 
            bucket_sizes_2209_out_o_ap_vld <= ap_const_logic_1;
        else 
            bucket_sizes_2209_out_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    bucket_sizes_2210_out_o_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, bucket_sizes_2194_reload, bucket_sizes_2210_out_i, ap_block_pp0_stage0, bucket_sizes_fu_317_p2, trunc_ln23_fu_291_p1, ap_loop_init)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
            if ((ap_loop_init = ap_const_logic_1)) then 
                bucket_sizes_2210_out_o <= bucket_sizes_2194_reload;
            elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (trunc_ln23_fu_291_p1 = ap_const_lv3_4))) then 
                bucket_sizes_2210_out_o <= bucket_sizes_fu_317_p2;
            else 
                bucket_sizes_2210_out_o <= bucket_sizes_2210_out_i;
            end if;
        else 
            bucket_sizes_2210_out_o <= bucket_sizes_2210_out_i;
        end if; 
    end process;


    bucket_sizes_2210_out_o_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, trunc_ln23_fu_291_p1, ap_loop_init)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_init = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (trunc_ln23_fu_291_p1 = ap_const_lv3_4)))) then 
            bucket_sizes_2210_out_o_ap_vld <= ap_const_logic_1;
        else 
            bucket_sizes_2210_out_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    bucket_sizes_2211_out_o_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, bucket_sizes_2195_reload, bucket_sizes_2211_out_i, ap_block_pp0_stage0, bucket_sizes_fu_317_p2, trunc_ln23_fu_291_p1, ap_loop_init)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
            if ((ap_loop_init = ap_const_logic_1)) then 
                bucket_sizes_2211_out_o <= bucket_sizes_2195_reload;
            elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (trunc_ln23_fu_291_p1 = ap_const_lv3_5))) then 
                bucket_sizes_2211_out_o <= bucket_sizes_fu_317_p2;
            else 
                bucket_sizes_2211_out_o <= bucket_sizes_2211_out_i;
            end if;
        else 
            bucket_sizes_2211_out_o <= bucket_sizes_2211_out_i;
        end if; 
    end process;


    bucket_sizes_2211_out_o_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, trunc_ln23_fu_291_p1, ap_loop_init)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_init = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (trunc_ln23_fu_291_p1 = ap_const_lv3_5)))) then 
            bucket_sizes_2211_out_o_ap_vld <= ap_const_logic_1;
        else 
            bucket_sizes_2211_out_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    bucket_sizes_2212_out_o_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, bucket_sizes_2196_reload, bucket_sizes_2212_out_i, ap_block_pp0_stage0, bucket_sizes_fu_317_p2, trunc_ln23_fu_291_p1, ap_loop_init)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
            if ((ap_loop_init = ap_const_logic_1)) then 
                bucket_sizes_2212_out_o <= bucket_sizes_2196_reload;
            elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (trunc_ln23_fu_291_p1 = ap_const_lv3_6))) then 
                bucket_sizes_2212_out_o <= bucket_sizes_fu_317_p2;
            else 
                bucket_sizes_2212_out_o <= bucket_sizes_2212_out_i;
            end if;
        else 
            bucket_sizes_2212_out_o <= bucket_sizes_2212_out_i;
        end if; 
    end process;


    bucket_sizes_2212_out_o_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, trunc_ln23_fu_291_p1, ap_loop_init)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_init = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (trunc_ln23_fu_291_p1 = ap_const_lv3_6)))) then 
            bucket_sizes_2212_out_o_ap_vld <= ap_const_logic_1;
        else 
            bucket_sizes_2212_out_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    bucket_sizes_2213_out_o_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, bucket_sizes_2197_reload, bucket_sizes_2213_out_i, ap_block_pp0_stage0, bucket_sizes_fu_317_p2, trunc_ln23_fu_291_p1, ap_loop_init)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
            if ((ap_loop_init = ap_const_logic_1)) then 
                bucket_sizes_2213_out_o <= bucket_sizes_2197_reload;
            elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (trunc_ln23_fu_291_p1 = ap_const_lv3_7))) then 
                bucket_sizes_2213_out_o <= bucket_sizes_fu_317_p2;
            else 
                bucket_sizes_2213_out_o <= bucket_sizes_2213_out_i;
            end if;
        else 
            bucket_sizes_2213_out_o <= bucket_sizes_2213_out_i;
        end if; 
    end process;


    bucket_sizes_2213_out_o_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, trunc_ln23_fu_291_p1, ap_loop_init)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_init = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (trunc_ln23_fu_291_p1 = ap_const_lv3_7)))) then 
            bucket_sizes_2213_out_o_ap_vld <= ap_const_logic_1;
        else 
            bucket_sizes_2213_out_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    bucket_sizes_fu_317_p2 <= std_logic_vector(unsigned(tmp_i_fu_295_p10) + unsigned(ap_const_lv32_1));

    bucket_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            bucket_we0 <= ap_const_logic_1;
        else 
            bucket_we0 <= ap_const_logic_0;
        end if; 
    end process;

    icmp_ln20_fu_223_p2 <= "1" when (ap_sig_allocacmp_j_32 = ap_const_lv18_2625A) else "0";
    input_38_address0 <= j_cast_i_fu_235_p1(18 - 1 downto 0);

    input_38_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            input_38_ce0 <= ap_const_logic_1;
        else 
            input_38_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    j_cast_i_fu_235_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_sig_allocacmp_j_32),64));
    tmp_i_fu_295_p9 <= input_38_q0(3 - 1 downto 0);
    trunc_ln23_fu_291_p1 <= input_38_q0(3 - 1 downto 0);
    zext_ln21_31_fu_286_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln21_fu_280_p2),64));
    zext_ln21_fu_277_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(j_32_reg_378),19));
end behav;
