-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
-- Version: 2022.2
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity radix_sort_seperate_bucket_parallel_input_bucket_parallel_1 is
port (
    i : IN STD_LOGIC_VECTOR (2 downto 0);
    sorted_data_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    sorted_data_ce0 : OUT STD_LOGIC;
    sorted_data_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    sorted_data_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    sorted_data_we0 : OUT STD_LOGIC;
    sorted_data_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
    sorted_data_ce1 : OUT STD_LOGIC;
    sorted_data_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    sorted_data_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    sorted_data_we1 : OUT STD_LOGIC;
    bucket1_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    bucket1_ce0 : OUT STD_LOGIC;
    bucket1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    bucket1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    bucket1_we0 : OUT STD_LOGIC;
    bucket1_address1 : OUT STD_LOGIC_VECTOR (8 downto 0);
    bucket1_ce1 : OUT STD_LOGIC;
    bucket1_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    bucket1_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    bucket1_we1 : OUT STD_LOGIC;
    bucket_pointer1_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    bucket_pointer1_ce0 : OUT STD_LOGIC;
    bucket_pointer1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    bucket_pointer1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    bucket_pointer1_we0 : OUT STD_LOGIC;
    bucket_pointer1_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
    bucket_pointer1_ce1 : OUT STD_LOGIC;
    bucket_pointer1_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    bucket_pointer1_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    bucket_pointer1_we1 : OUT STD_LOGIC;
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    i_ap_vld : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC );
end;


architecture behav of radix_sort_seperate_bucket_parallel_input_bucket_parallel_1 is 
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_logic_1 : STD_LOGIC := '1';

attribute shreg_extract : string;
    signal input_bucket_1_1_U0_ap_start : STD_LOGIC;
    signal input_bucket_1_1_U0_ap_done : STD_LOGIC;
    signal input_bucket_1_1_U0_ap_continue : STD_LOGIC;
    signal input_bucket_1_1_U0_ap_idle : STD_LOGIC;
    signal input_bucket_1_1_U0_ap_ready : STD_LOGIC;
    signal input_bucket_1_1_U0_sorted_data_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal input_bucket_1_1_U0_sorted_data_ce0 : STD_LOGIC;
    signal input_bucket_1_1_U0_bucket_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal input_bucket_1_1_U0_bucket_ce0 : STD_LOGIC;
    signal input_bucket_1_1_U0_bucket_we0 : STD_LOGIC;
    signal input_bucket_1_1_U0_bucket_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_bucket_1_1_U0_bucket_pointer_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal input_bucket_1_1_U0_bucket_pointer_ce0 : STD_LOGIC;
    signal input_bucket_1_1_U0_bucket_pointer_we0 : STD_LOGIC;
    signal input_bucket_1_1_U0_bucket_pointer_d0 : STD_LOGIC_VECTOR (31 downto 0);

    component radix_sort_seperate_bucket_parallel_input_bucket_1_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        i : IN STD_LOGIC_VECTOR (2 downto 0);
        sorted_data_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        sorted_data_ce0 : OUT STD_LOGIC;
        sorted_data_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        bucket_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        bucket_ce0 : OUT STD_LOGIC;
        bucket_we0 : OUT STD_LOGIC;
        bucket_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        bucket_pointer_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        bucket_pointer_ce0 : OUT STD_LOGIC;
        bucket_pointer_we0 : OUT STD_LOGIC;
        bucket_pointer_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        bucket_pointer_q0 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    input_bucket_1_1_U0 : component radix_sort_seperate_bucket_parallel_input_bucket_1_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => input_bucket_1_1_U0_ap_start,
        ap_done => input_bucket_1_1_U0_ap_done,
        ap_continue => input_bucket_1_1_U0_ap_continue,
        ap_idle => input_bucket_1_1_U0_ap_idle,
        ap_ready => input_bucket_1_1_U0_ap_ready,
        i => i,
        sorted_data_address0 => input_bucket_1_1_U0_sorted_data_address0,
        sorted_data_ce0 => input_bucket_1_1_U0_sorted_data_ce0,
        sorted_data_q0 => sorted_data_q0,
        bucket_address0 => input_bucket_1_1_U0_bucket_address0,
        bucket_ce0 => input_bucket_1_1_U0_bucket_ce0,
        bucket_we0 => input_bucket_1_1_U0_bucket_we0,
        bucket_d0 => input_bucket_1_1_U0_bucket_d0,
        bucket_pointer_address0 => input_bucket_1_1_U0_bucket_pointer_address0,
        bucket_pointer_ce0 => input_bucket_1_1_U0_bucket_pointer_ce0,
        bucket_pointer_we0 => input_bucket_1_1_U0_bucket_pointer_we0,
        bucket_pointer_d0 => input_bucket_1_1_U0_bucket_pointer_d0,
        bucket_pointer_q0 => bucket_pointer1_q0);




    ap_done <= input_bucket_1_1_U0_ap_done;
    ap_idle <= input_bucket_1_1_U0_ap_idle;
    ap_ready <= input_bucket_1_1_U0_ap_ready;
    bucket1_address0 <= input_bucket_1_1_U0_bucket_address0;
    bucket1_address1 <= ap_const_lv9_0;
    bucket1_ce0 <= input_bucket_1_1_U0_bucket_ce0;
    bucket1_ce1 <= ap_const_logic_0;
    bucket1_d0 <= input_bucket_1_1_U0_bucket_d0;
    bucket1_d1 <= ap_const_lv32_0;
    bucket1_we0 <= input_bucket_1_1_U0_bucket_we0;
    bucket1_we1 <= ap_const_logic_0;
    bucket_pointer1_address0 <= input_bucket_1_1_U0_bucket_pointer_address0;
    bucket_pointer1_address1 <= ap_const_lv4_0;
    bucket_pointer1_ce0 <= input_bucket_1_1_U0_bucket_pointer_ce0;
    bucket_pointer1_ce1 <= ap_const_logic_0;
    bucket_pointer1_d0 <= input_bucket_1_1_U0_bucket_pointer_d0;
    bucket_pointer1_d1 <= ap_const_lv32_0;
    bucket_pointer1_we0 <= input_bucket_1_1_U0_bucket_pointer_we0;
    bucket_pointer1_we1 <= ap_const_logic_0;
    input_bucket_1_1_U0_ap_continue <= ap_continue;
    input_bucket_1_1_U0_ap_start <= ap_start;
    sorted_data_address0 <= input_bucket_1_1_U0_sorted_data_address0;
    sorted_data_address1 <= ap_const_lv6_0;
    sorted_data_ce0 <= input_bucket_1_1_U0_sorted_data_ce0;
    sorted_data_ce1 <= ap_const_logic_0;
    sorted_data_d0 <= ap_const_lv32_0;
    sorted_data_d1 <= ap_const_lv32_0;
    sorted_data_we0 <= ap_const_logic_0;
    sorted_data_we1 <= ap_const_logic_0;
end behav;
