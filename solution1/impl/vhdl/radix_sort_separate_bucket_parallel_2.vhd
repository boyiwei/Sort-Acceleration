-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
-- Version: 2022.2
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity radix_sort_separate_bucket_parallel_2 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    data_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    data_ce0 : OUT STD_LOGIC;
    data_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    sorted_data_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    sorted_data_ce0 : OUT STD_LOGIC;
    sorted_data_we0 : OUT STD_LOGIC;
    sorted_data_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    sorted_data_q0 : IN STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of radix_sort_separate_bucket_parallel_2 is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "radix_sort_separate_bucket_parallel_2_radix_sort_separate_bucket_parallel_2,hls_ip_2022_2,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xczu9eg-ffvb1156-2-e,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=3.681000,HLS_SYN_LAT=3030,HLS_SYN_TPT=none,HLS_SYN_MEM=2,HLS_SYN_DSP=0,HLS_SYN_FF=493,HLS_SYN_LUT=1344,HLS_VERSION=2022_2}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (9 downto 0) := "0000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (9 downto 0) := "0000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (9 downto 0) := "0000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (9 downto 0) := "0000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (9 downto 0) := "0000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (9 downto 0) := "0001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (9 downto 0) := "0010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (9 downto 0) := "0100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (9 downto 0) := "1000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv4_8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv9_19 : STD_LOGIC_VECTOR (8 downto 0) := "000011001";
    constant ap_const_lv5_10 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal i_2_fu_238_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal i_2_reg_319 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal trunc_ln39_fu_244_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln39_reg_324 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln39_fu_232_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln44_2_fu_249_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln44_2_reg_329 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal add_ln44_1_fu_261_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln44_1_reg_337 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln44_fu_267_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln44_reg_342 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln44_fu_255_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bucket_pointer1_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal bucket_pointer1_load_reg_352 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal icmp_ln45_fu_276_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln45_reg_357 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln45_fu_282_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal trunc_ln45_reg_361 : STD_LOGIC_VECTOR (30 downto 0);
    signal empty_fu_287_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal bucket_pointer2_q0 : STD_LOGIC_VECTOR (0 downto 0);
    signal bucket_pointer2_load_reg_376 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal bucket_pointer2_load_cast3_fu_292_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bucket_pointer2_load_cast3_reg_380 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln50_fu_296_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln50_reg_385 : STD_LOGIC_VECTOR (31 downto 0);
    signal bucket1_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal bucket1_ce0 : STD_LOGIC;
    signal bucket1_we0 : STD_LOGIC;
    signal bucket1_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal bucket_pointer1_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal bucket_pointer1_ce0 : STD_LOGIC;
    signal bucket_pointer1_we0 : STD_LOGIC;
    signal bucket_pointer1_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal bucket_pointer2_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal bucket_pointer2_ce0 : STD_LOGIC;
    signal bucket_pointer2_we0 : STD_LOGIC;
    signal bucket_pointer2_d0 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_radix_sort_separate_bucket_parallel_2_Pipeline_1_fu_166_ap_start : STD_LOGIC;
    signal grp_radix_sort_separate_bucket_parallel_2_Pipeline_1_fu_166_ap_done : STD_LOGIC;
    signal grp_radix_sort_separate_bucket_parallel_2_Pipeline_1_fu_166_ap_idle : STD_LOGIC;
    signal grp_radix_sort_separate_bucket_parallel_2_Pipeline_1_fu_166_ap_ready : STD_LOGIC;
    signal grp_radix_sort_separate_bucket_parallel_2_Pipeline_1_fu_166_bucket_pointer1_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_radix_sort_separate_bucket_parallel_2_Pipeline_1_fu_166_bucket_pointer1_ce0 : STD_LOGIC;
    signal grp_radix_sort_separate_bucket_parallel_2_Pipeline_1_fu_166_bucket_pointer1_we0 : STD_LOGIC;
    signal grp_radix_sort_separate_bucket_parallel_2_Pipeline_1_fu_166_bucket_pointer1_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_radix_sort_separate_bucket_parallel_2_Pipeline_2_fu_172_ap_start : STD_LOGIC;
    signal grp_radix_sort_separate_bucket_parallel_2_Pipeline_2_fu_172_ap_done : STD_LOGIC;
    signal grp_radix_sort_separate_bucket_parallel_2_Pipeline_2_fu_172_ap_idle : STD_LOGIC;
    signal grp_radix_sort_separate_bucket_parallel_2_Pipeline_2_fu_172_ap_ready : STD_LOGIC;
    signal grp_radix_sort_separate_bucket_parallel_2_Pipeline_2_fu_172_bucket_pointer2_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_radix_sort_separate_bucket_parallel_2_Pipeline_2_fu_172_bucket_pointer2_ce0 : STD_LOGIC;
    signal grp_radix_sort_separate_bucket_parallel_2_Pipeline_2_fu_172_bucket_pointer2_we0 : STD_LOGIC;
    signal grp_radix_sort_separate_bucket_parallel_2_Pipeline_2_fu_172_bucket_pointer2_d0 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_radix_sort_separate_bucket_parallel_2_Pipeline_initialization_fu_178_ap_start : STD_LOGIC;
    signal grp_radix_sort_separate_bucket_parallel_2_Pipeline_initialization_fu_178_ap_done : STD_LOGIC;
    signal grp_radix_sort_separate_bucket_parallel_2_Pipeline_initialization_fu_178_ap_idle : STD_LOGIC;
    signal grp_radix_sort_separate_bucket_parallel_2_Pipeline_initialization_fu_178_ap_ready : STD_LOGIC;
    signal grp_radix_sort_separate_bucket_parallel_2_Pipeline_initialization_fu_178_data_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_radix_sort_separate_bucket_parallel_2_Pipeline_initialization_fu_178_data_ce0 : STD_LOGIC;
    signal grp_radix_sort_separate_bucket_parallel_2_Pipeline_initialization_fu_178_sorted_data_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_radix_sort_separate_bucket_parallel_2_Pipeline_initialization_fu_178_sorted_data_ce0 : STD_LOGIC;
    signal grp_radix_sort_separate_bucket_parallel_2_Pipeline_initialization_fu_178_sorted_data_we0 : STD_LOGIC;
    signal grp_radix_sort_separate_bucket_parallel_2_Pipeline_initialization_fu_178_sorted_data_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_input_bucket_parallel_2_1_fu_186_sorted_data_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_input_bucket_parallel_2_1_fu_186_sorted_data_ce0 : STD_LOGIC;
    signal grp_input_bucket_parallel_2_1_fu_186_sorted_data_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_input_bucket_parallel_2_1_fu_186_sorted_data_we0 : STD_LOGIC;
    signal grp_input_bucket_parallel_2_1_fu_186_sorted_data_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_input_bucket_parallel_2_1_fu_186_sorted_data_ce1 : STD_LOGIC;
    signal grp_input_bucket_parallel_2_1_fu_186_sorted_data_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_input_bucket_parallel_2_1_fu_186_sorted_data_we1 : STD_LOGIC;
    signal grp_input_bucket_parallel_2_1_fu_186_bucket1_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_input_bucket_parallel_2_1_fu_186_bucket1_ce0 : STD_LOGIC;
    signal grp_input_bucket_parallel_2_1_fu_186_bucket1_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_input_bucket_parallel_2_1_fu_186_bucket1_we0 : STD_LOGIC;
    signal grp_input_bucket_parallel_2_1_fu_186_bucket1_address1 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_input_bucket_parallel_2_1_fu_186_bucket1_ce1 : STD_LOGIC;
    signal grp_input_bucket_parallel_2_1_fu_186_bucket1_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_input_bucket_parallel_2_1_fu_186_bucket1_we1 : STD_LOGIC;
    signal grp_input_bucket_parallel_2_1_fu_186_bucket_pointer1_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_input_bucket_parallel_2_1_fu_186_bucket_pointer1_ce0 : STD_LOGIC;
    signal grp_input_bucket_parallel_2_1_fu_186_bucket_pointer1_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_input_bucket_parallel_2_1_fu_186_bucket_pointer1_we0 : STD_LOGIC;
    signal grp_input_bucket_parallel_2_1_fu_186_bucket_pointer1_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_input_bucket_parallel_2_1_fu_186_bucket_pointer1_ce1 : STD_LOGIC;
    signal grp_input_bucket_parallel_2_1_fu_186_bucket_pointer1_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_input_bucket_parallel_2_1_fu_186_bucket_pointer1_we1 : STD_LOGIC;
    signal grp_input_bucket_parallel_2_1_fu_186_ap_start : STD_LOGIC;
    signal grp_input_bucket_parallel_2_1_fu_186_ap_done : STD_LOGIC;
    signal grp_input_bucket_parallel_2_1_fu_186_ap_ready : STD_LOGIC;
    signal grp_input_bucket_parallel_2_1_fu_186_ap_idle : STD_LOGIC;
    signal grp_input_bucket_parallel_2_1_fu_186_ap_continue : STD_LOGIC;
    signal grp_radix_sort_separate_bucket_parallel_2_Pipeline_clear_bucket_pointer_fu_195_ap_start : STD_LOGIC;
    signal grp_radix_sort_separate_bucket_parallel_2_Pipeline_clear_bucket_pointer_fu_195_ap_done : STD_LOGIC;
    signal grp_radix_sort_separate_bucket_parallel_2_Pipeline_clear_bucket_pointer_fu_195_ap_idle : STD_LOGIC;
    signal grp_radix_sort_separate_bucket_parallel_2_Pipeline_clear_bucket_pointer_fu_195_ap_ready : STD_LOGIC;
    signal grp_radix_sort_separate_bucket_parallel_2_Pipeline_clear_bucket_pointer_fu_195_bucket_pointer1_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_radix_sort_separate_bucket_parallel_2_Pipeline_clear_bucket_pointer_fu_195_bucket_pointer1_ce0 : STD_LOGIC;
    signal grp_radix_sort_separate_bucket_parallel_2_Pipeline_clear_bucket_pointer_fu_195_bucket_pointer1_we0 : STD_LOGIC;
    signal grp_radix_sort_separate_bucket_parallel_2_Pipeline_clear_bucket_pointer_fu_195_bucket_pointer1_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_radix_sort_separate_bucket_parallel_2_Pipeline_clear_bucket_pointer_fu_195_bucket_pointer2_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_radix_sort_separate_bucket_parallel_2_Pipeline_clear_bucket_pointer_fu_195_bucket_pointer2_ce0 : STD_LOGIC;
    signal grp_radix_sort_separate_bucket_parallel_2_Pipeline_clear_bucket_pointer_fu_195_bucket_pointer2_we0 : STD_LOGIC;
    signal grp_radix_sort_separate_bucket_parallel_2_Pipeline_clear_bucket_pointer_fu_195_bucket_pointer2_d0 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_radix_sort_separate_bucket_parallel_2_Pipeline_VITIS_LOOP_45_1_fu_201_ap_start : STD_LOGIC;
    signal grp_radix_sort_separate_bucket_parallel_2_Pipeline_VITIS_LOOP_45_1_fu_201_ap_done : STD_LOGIC;
    signal grp_radix_sort_separate_bucket_parallel_2_Pipeline_VITIS_LOOP_45_1_fu_201_ap_idle : STD_LOGIC;
    signal grp_radix_sort_separate_bucket_parallel_2_Pipeline_VITIS_LOOP_45_1_fu_201_ap_ready : STD_LOGIC;
    signal grp_radix_sort_separate_bucket_parallel_2_Pipeline_VITIS_LOOP_45_1_fu_201_bucket1_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_radix_sort_separate_bucket_parallel_2_Pipeline_VITIS_LOOP_45_1_fu_201_bucket1_ce0 : STD_LOGIC;
    signal grp_radix_sort_separate_bucket_parallel_2_Pipeline_VITIS_LOOP_45_1_fu_201_sorted_data_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_radix_sort_separate_bucket_parallel_2_Pipeline_VITIS_LOOP_45_1_fu_201_sorted_data_ce0 : STD_LOGIC;
    signal grp_radix_sort_separate_bucket_parallel_2_Pipeline_VITIS_LOOP_45_1_fu_201_sorted_data_we0 : STD_LOGIC;
    signal grp_radix_sort_separate_bucket_parallel_2_Pipeline_VITIS_LOOP_45_1_fu_201_sorted_data_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_radix_sort_separate_bucket_parallel_2_Pipeline_VITIS_LOOP_50_2_fu_213_ap_start : STD_LOGIC;
    signal grp_radix_sort_separate_bucket_parallel_2_Pipeline_VITIS_LOOP_50_2_fu_213_ap_done : STD_LOGIC;
    signal grp_radix_sort_separate_bucket_parallel_2_Pipeline_VITIS_LOOP_50_2_fu_213_ap_idle : STD_LOGIC;
    signal grp_radix_sort_separate_bucket_parallel_2_Pipeline_VITIS_LOOP_50_2_fu_213_ap_ready : STD_LOGIC;
    signal grp_radix_sort_separate_bucket_parallel_2_Pipeline_VITIS_LOOP_50_2_fu_213_sorted_data_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_radix_sort_separate_bucket_parallel_2_Pipeline_VITIS_LOOP_50_2_fu_213_sorted_data_ce0 : STD_LOGIC;
    signal grp_radix_sort_separate_bucket_parallel_2_Pipeline_VITIS_LOOP_50_2_fu_213_sorted_data_we0 : STD_LOGIC;
    signal grp_radix_sort_separate_bucket_parallel_2_Pipeline_VITIS_LOOP_50_2_fu_213_sorted_data_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_reg_108 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal ap_block_state9_on_subcall_done : BOOLEAN;
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal ap_sync_grp_input_bucket_parallel_2_1_fu_186_ap_ready : STD_LOGIC;
    signal ap_sync_grp_input_bucket_parallel_2_1_fu_186_ap_done : STD_LOGIC;
    signal ap_block_state4_on_subcall_done : BOOLEAN;
    signal ap_phi_mux_k_3_phi_fu_158_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal k_reg_119 : STD_LOGIC_VECTOR (31 downto 0);
    signal phi_mul_reg_131 : STD_LOGIC_VECTOR (8 downto 0);
    signal k_2_reg_143 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state7_on_subcall_done : BOOLEAN;
    signal add_ln44_fu_303_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal k_3_reg_154 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_radix_sort_separate_bucket_parallel_2_Pipeline_1_fu_166_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal grp_radix_sort_separate_bucket_parallel_2_Pipeline_2_fu_172_ap_start_reg : STD_LOGIC := '0';
    signal grp_radix_sort_separate_bucket_parallel_2_Pipeline_initialization_fu_178_ap_start_reg : STD_LOGIC := '0';
    signal grp_input_bucket_parallel_2_1_fu_186_ap_start_reg : STD_LOGIC := '0';
    signal ap_sync_reg_grp_input_bucket_parallel_2_1_fu_186_ap_ready : STD_LOGIC := '0';
    signal ap_sync_reg_grp_input_bucket_parallel_2_1_fu_186_ap_done : STD_LOGIC := '0';
    signal grp_radix_sort_separate_bucket_parallel_2_Pipeline_clear_bucket_pointer_fu_195_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal grp_radix_sort_separate_bucket_parallel_2_Pipeline_VITIS_LOOP_45_1_fu_201_ap_start_reg : STD_LOGIC := '0';
    signal grp_radix_sort_separate_bucket_parallel_2_Pipeline_VITIS_LOOP_50_2_fu_213_ap_start_reg : STD_LOGIC := '0';
    signal i_fu_68 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_block_state2_on_subcall_done : BOOLEAN;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ST_fsm_state10_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component radix_sort_separate_bucket_parallel_2_radix_sort_separate_bucket_parallel_2_Pipeline_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        bucket_pointer1_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        bucket_pointer1_ce0 : OUT STD_LOGIC;
        bucket_pointer1_we0 : OUT STD_LOGIC;
        bucket_pointer1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component radix_sort_separate_bucket_parallel_2_radix_sort_separate_bucket_parallel_2_Pipeline_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        bucket_pointer2_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        bucket_pointer2_ce0 : OUT STD_LOGIC;
        bucket_pointer2_we0 : OUT STD_LOGIC;
        bucket_pointer2_d0 : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component radix_sort_separate_bucket_parallel_2_radix_sort_separate_bucket_parallel_2_Pipeline_initialization IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        data_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        data_ce0 : OUT STD_LOGIC;
        data_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        sorted_data_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        sorted_data_ce0 : OUT STD_LOGIC;
        sorted_data_we0 : OUT STD_LOGIC;
        sorted_data_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component radix_sort_separate_bucket_parallel_2_input_bucket_parallel_2_1 IS
    port (
        i : IN STD_LOGIC_VECTOR (2 downto 0);
        sorted_data_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        sorted_data_ce0 : OUT STD_LOGIC;
        sorted_data_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        sorted_data_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        sorted_data_we0 : OUT STD_LOGIC;
        sorted_data_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
        sorted_data_ce1 : OUT STD_LOGIC;
        sorted_data_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        sorted_data_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        sorted_data_we1 : OUT STD_LOGIC;
        bucket1_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        bucket1_ce0 : OUT STD_LOGIC;
        bucket1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        bucket1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        bucket1_we0 : OUT STD_LOGIC;
        bucket1_address1 : OUT STD_LOGIC_VECTOR (8 downto 0);
        bucket1_ce1 : OUT STD_LOGIC;
        bucket1_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        bucket1_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        bucket1_we1 : OUT STD_LOGIC;
        bucket_pointer1_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        bucket_pointer1_ce0 : OUT STD_LOGIC;
        bucket_pointer1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        bucket_pointer1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        bucket_pointer1_we0 : OUT STD_LOGIC;
        bucket_pointer1_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
        bucket_pointer1_ce1 : OUT STD_LOGIC;
        bucket_pointer1_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        bucket_pointer1_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        bucket_pointer1_we1 : OUT STD_LOGIC;
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        i_ap_vld : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC );
    end component;


    component radix_sort_separate_bucket_parallel_2_radix_sort_separate_bucket_parallel_2_Pipeline_clear_bucket_pointer IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        bucket_pointer1_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        bucket_pointer1_ce0 : OUT STD_LOGIC;
        bucket_pointer1_we0 : OUT STD_LOGIC;
        bucket_pointer1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        bucket_pointer2_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        bucket_pointer2_ce0 : OUT STD_LOGIC;
        bucket_pointer2_we0 : OUT STD_LOGIC;
        bucket_pointer2_d0 : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component radix_sort_separate_bucket_parallel_2_radix_sort_separate_bucket_parallel_2_Pipeline_VITIS_LOOP_45_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        sext_ln45 : IN STD_LOGIC_VECTOR (31 downto 0);
        trunc_ln1 : IN STD_LOGIC_VECTOR (30 downto 0);
        phi_mul : IN STD_LOGIC_VECTOR (8 downto 0);
        bucket1_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        bucket1_ce0 : OUT STD_LOGIC;
        bucket1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        sorted_data_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        sorted_data_ce0 : OUT STD_LOGIC;
        sorted_data_we0 : OUT STD_LOGIC;
        sorted_data_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component radix_sort_separate_bucket_parallel_2_radix_sort_separate_bucket_parallel_2_Pipeline_VITIS_LOOP_50_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        sext_ln50 : IN STD_LOGIC_VECTOR (31 downto 0);
        add_ln50 : IN STD_LOGIC_VECTOR (31 downto 0);
        phi_mul : IN STD_LOGIC_VECTOR (8 downto 0);
        sorted_data_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        sorted_data_ce0 : OUT STD_LOGIC;
        sorted_data_we0 : OUT STD_LOGIC;
        sorted_data_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component radix_sort_separate_bucket_parallel_2_bucket1_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component radix_sort_separate_bucket_parallel_2_bucket_pointer1_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component radix_sort_separate_bucket_parallel_2_bucket_pointer2_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (0 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;



begin
    bucket1_U : component radix_sort_separate_bucket_parallel_2_bucket1_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 400,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => bucket1_address0,
        ce0 => bucket1_ce0,
        we0 => bucket1_we0,
        d0 => grp_input_bucket_parallel_2_1_fu_186_bucket1_d0,
        q0 => bucket1_q0);

    bucket_pointer1_U : component radix_sort_separate_bucket_parallel_2_bucket_pointer1_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => bucket_pointer1_address0,
        ce0 => bucket_pointer1_ce0,
        we0 => bucket_pointer1_we0,
        d0 => bucket_pointer1_d0,
        q0 => bucket_pointer1_q0);

    bucket_pointer2_U : component radix_sort_separate_bucket_parallel_2_bucket_pointer2_RAM_AUTO_1R1W
    generic map (
        DataWidth => 1,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => bucket_pointer2_address0,
        ce0 => bucket_pointer2_ce0,
        we0 => bucket_pointer2_we0,
        d0 => bucket_pointer2_d0,
        q0 => bucket_pointer2_q0);

    grp_radix_sort_separate_bucket_parallel_2_Pipeline_1_fu_166 : component radix_sort_separate_bucket_parallel_2_radix_sort_separate_bucket_parallel_2_Pipeline_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_radix_sort_separate_bucket_parallel_2_Pipeline_1_fu_166_ap_start,
        ap_done => grp_radix_sort_separate_bucket_parallel_2_Pipeline_1_fu_166_ap_done,
        ap_idle => grp_radix_sort_separate_bucket_parallel_2_Pipeline_1_fu_166_ap_idle,
        ap_ready => grp_radix_sort_separate_bucket_parallel_2_Pipeline_1_fu_166_ap_ready,
        bucket_pointer1_address0 => grp_radix_sort_separate_bucket_parallel_2_Pipeline_1_fu_166_bucket_pointer1_address0,
        bucket_pointer1_ce0 => grp_radix_sort_separate_bucket_parallel_2_Pipeline_1_fu_166_bucket_pointer1_ce0,
        bucket_pointer1_we0 => grp_radix_sort_separate_bucket_parallel_2_Pipeline_1_fu_166_bucket_pointer1_we0,
        bucket_pointer1_d0 => grp_radix_sort_separate_bucket_parallel_2_Pipeline_1_fu_166_bucket_pointer1_d0);

    grp_radix_sort_separate_bucket_parallel_2_Pipeline_2_fu_172 : component radix_sort_separate_bucket_parallel_2_radix_sort_separate_bucket_parallel_2_Pipeline_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_radix_sort_separate_bucket_parallel_2_Pipeline_2_fu_172_ap_start,
        ap_done => grp_radix_sort_separate_bucket_parallel_2_Pipeline_2_fu_172_ap_done,
        ap_idle => grp_radix_sort_separate_bucket_parallel_2_Pipeline_2_fu_172_ap_idle,
        ap_ready => grp_radix_sort_separate_bucket_parallel_2_Pipeline_2_fu_172_ap_ready,
        bucket_pointer2_address0 => grp_radix_sort_separate_bucket_parallel_2_Pipeline_2_fu_172_bucket_pointer2_address0,
        bucket_pointer2_ce0 => grp_radix_sort_separate_bucket_parallel_2_Pipeline_2_fu_172_bucket_pointer2_ce0,
        bucket_pointer2_we0 => grp_radix_sort_separate_bucket_parallel_2_Pipeline_2_fu_172_bucket_pointer2_we0,
        bucket_pointer2_d0 => grp_radix_sort_separate_bucket_parallel_2_Pipeline_2_fu_172_bucket_pointer2_d0);

    grp_radix_sort_separate_bucket_parallel_2_Pipeline_initialization_fu_178 : component radix_sort_separate_bucket_parallel_2_radix_sort_separate_bucket_parallel_2_Pipeline_initialization
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_radix_sort_separate_bucket_parallel_2_Pipeline_initialization_fu_178_ap_start,
        ap_done => grp_radix_sort_separate_bucket_parallel_2_Pipeline_initialization_fu_178_ap_done,
        ap_idle => grp_radix_sort_separate_bucket_parallel_2_Pipeline_initialization_fu_178_ap_idle,
        ap_ready => grp_radix_sort_separate_bucket_parallel_2_Pipeline_initialization_fu_178_ap_ready,
        data_address0 => grp_radix_sort_separate_bucket_parallel_2_Pipeline_initialization_fu_178_data_address0,
        data_ce0 => grp_radix_sort_separate_bucket_parallel_2_Pipeline_initialization_fu_178_data_ce0,
        data_q0 => data_q0,
        sorted_data_address0 => grp_radix_sort_separate_bucket_parallel_2_Pipeline_initialization_fu_178_sorted_data_address0,
        sorted_data_ce0 => grp_radix_sort_separate_bucket_parallel_2_Pipeline_initialization_fu_178_sorted_data_ce0,
        sorted_data_we0 => grp_radix_sort_separate_bucket_parallel_2_Pipeline_initialization_fu_178_sorted_data_we0,
        sorted_data_d0 => grp_radix_sort_separate_bucket_parallel_2_Pipeline_initialization_fu_178_sorted_data_d0);

    grp_input_bucket_parallel_2_1_fu_186 : component radix_sort_separate_bucket_parallel_2_input_bucket_parallel_2_1
    port map (
        i => trunc_ln39_reg_324,
        sorted_data_address0 => grp_input_bucket_parallel_2_1_fu_186_sorted_data_address0,
        sorted_data_ce0 => grp_input_bucket_parallel_2_1_fu_186_sorted_data_ce0,
        sorted_data_d0 => grp_input_bucket_parallel_2_1_fu_186_sorted_data_d0,
        sorted_data_q0 => sorted_data_q0,
        sorted_data_we0 => grp_input_bucket_parallel_2_1_fu_186_sorted_data_we0,
        sorted_data_address1 => grp_input_bucket_parallel_2_1_fu_186_sorted_data_address1,
        sorted_data_ce1 => grp_input_bucket_parallel_2_1_fu_186_sorted_data_ce1,
        sorted_data_d1 => grp_input_bucket_parallel_2_1_fu_186_sorted_data_d1,
        sorted_data_q1 => ap_const_lv32_0,
        sorted_data_we1 => grp_input_bucket_parallel_2_1_fu_186_sorted_data_we1,
        bucket1_address0 => grp_input_bucket_parallel_2_1_fu_186_bucket1_address0,
        bucket1_ce0 => grp_input_bucket_parallel_2_1_fu_186_bucket1_ce0,
        bucket1_d0 => grp_input_bucket_parallel_2_1_fu_186_bucket1_d0,
        bucket1_q0 => ap_const_lv32_0,
        bucket1_we0 => grp_input_bucket_parallel_2_1_fu_186_bucket1_we0,
        bucket1_address1 => grp_input_bucket_parallel_2_1_fu_186_bucket1_address1,
        bucket1_ce1 => grp_input_bucket_parallel_2_1_fu_186_bucket1_ce1,
        bucket1_d1 => grp_input_bucket_parallel_2_1_fu_186_bucket1_d1,
        bucket1_q1 => ap_const_lv32_0,
        bucket1_we1 => grp_input_bucket_parallel_2_1_fu_186_bucket1_we1,
        bucket_pointer1_address0 => grp_input_bucket_parallel_2_1_fu_186_bucket_pointer1_address0,
        bucket_pointer1_ce0 => grp_input_bucket_parallel_2_1_fu_186_bucket_pointer1_ce0,
        bucket_pointer1_d0 => grp_input_bucket_parallel_2_1_fu_186_bucket_pointer1_d0,
        bucket_pointer1_q0 => bucket_pointer1_q0,
        bucket_pointer1_we0 => grp_input_bucket_parallel_2_1_fu_186_bucket_pointer1_we0,
        bucket_pointer1_address1 => grp_input_bucket_parallel_2_1_fu_186_bucket_pointer1_address1,
        bucket_pointer1_ce1 => grp_input_bucket_parallel_2_1_fu_186_bucket_pointer1_ce1,
        bucket_pointer1_d1 => grp_input_bucket_parallel_2_1_fu_186_bucket_pointer1_d1,
        bucket_pointer1_q1 => ap_const_lv32_0,
        bucket_pointer1_we1 => grp_input_bucket_parallel_2_1_fu_186_bucket_pointer1_we1,
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        i_ap_vld => ap_const_logic_1,
        ap_start => grp_input_bucket_parallel_2_1_fu_186_ap_start,
        ap_done => grp_input_bucket_parallel_2_1_fu_186_ap_done,
        ap_ready => grp_input_bucket_parallel_2_1_fu_186_ap_ready,
        ap_idle => grp_input_bucket_parallel_2_1_fu_186_ap_idle,
        ap_continue => grp_input_bucket_parallel_2_1_fu_186_ap_continue);

    grp_radix_sort_separate_bucket_parallel_2_Pipeline_clear_bucket_pointer_fu_195 : component radix_sort_separate_bucket_parallel_2_radix_sort_separate_bucket_parallel_2_Pipeline_clear_bucket_pointer
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_radix_sort_separate_bucket_parallel_2_Pipeline_clear_bucket_pointer_fu_195_ap_start,
        ap_done => grp_radix_sort_separate_bucket_parallel_2_Pipeline_clear_bucket_pointer_fu_195_ap_done,
        ap_idle => grp_radix_sort_separate_bucket_parallel_2_Pipeline_clear_bucket_pointer_fu_195_ap_idle,
        ap_ready => grp_radix_sort_separate_bucket_parallel_2_Pipeline_clear_bucket_pointer_fu_195_ap_ready,
        bucket_pointer1_address0 => grp_radix_sort_separate_bucket_parallel_2_Pipeline_clear_bucket_pointer_fu_195_bucket_pointer1_address0,
        bucket_pointer1_ce0 => grp_radix_sort_separate_bucket_parallel_2_Pipeline_clear_bucket_pointer_fu_195_bucket_pointer1_ce0,
        bucket_pointer1_we0 => grp_radix_sort_separate_bucket_parallel_2_Pipeline_clear_bucket_pointer_fu_195_bucket_pointer1_we0,
        bucket_pointer1_d0 => grp_radix_sort_separate_bucket_parallel_2_Pipeline_clear_bucket_pointer_fu_195_bucket_pointer1_d0,
        bucket_pointer2_address0 => grp_radix_sort_separate_bucket_parallel_2_Pipeline_clear_bucket_pointer_fu_195_bucket_pointer2_address0,
        bucket_pointer2_ce0 => grp_radix_sort_separate_bucket_parallel_2_Pipeline_clear_bucket_pointer_fu_195_bucket_pointer2_ce0,
        bucket_pointer2_we0 => grp_radix_sort_separate_bucket_parallel_2_Pipeline_clear_bucket_pointer_fu_195_bucket_pointer2_we0,
        bucket_pointer2_d0 => grp_radix_sort_separate_bucket_parallel_2_Pipeline_clear_bucket_pointer_fu_195_bucket_pointer2_d0);

    grp_radix_sort_separate_bucket_parallel_2_Pipeline_VITIS_LOOP_45_1_fu_201 : component radix_sort_separate_bucket_parallel_2_radix_sort_separate_bucket_parallel_2_Pipeline_VITIS_LOOP_45_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_radix_sort_separate_bucket_parallel_2_Pipeline_VITIS_LOOP_45_1_fu_201_ap_start,
        ap_done => grp_radix_sort_separate_bucket_parallel_2_Pipeline_VITIS_LOOP_45_1_fu_201_ap_done,
        ap_idle => grp_radix_sort_separate_bucket_parallel_2_Pipeline_VITIS_LOOP_45_1_fu_201_ap_idle,
        ap_ready => grp_radix_sort_separate_bucket_parallel_2_Pipeline_VITIS_LOOP_45_1_fu_201_ap_ready,
        sext_ln45 => k_reg_119,
        trunc_ln1 => trunc_ln45_reg_361,
        phi_mul => phi_mul_reg_131,
        bucket1_address0 => grp_radix_sort_separate_bucket_parallel_2_Pipeline_VITIS_LOOP_45_1_fu_201_bucket1_address0,
        bucket1_ce0 => grp_radix_sort_separate_bucket_parallel_2_Pipeline_VITIS_LOOP_45_1_fu_201_bucket1_ce0,
        bucket1_q0 => bucket1_q0,
        sorted_data_address0 => grp_radix_sort_separate_bucket_parallel_2_Pipeline_VITIS_LOOP_45_1_fu_201_sorted_data_address0,
        sorted_data_ce0 => grp_radix_sort_separate_bucket_parallel_2_Pipeline_VITIS_LOOP_45_1_fu_201_sorted_data_ce0,
        sorted_data_we0 => grp_radix_sort_separate_bucket_parallel_2_Pipeline_VITIS_LOOP_45_1_fu_201_sorted_data_we0,
        sorted_data_d0 => grp_radix_sort_separate_bucket_parallel_2_Pipeline_VITIS_LOOP_45_1_fu_201_sorted_data_d0);

    grp_radix_sort_separate_bucket_parallel_2_Pipeline_VITIS_LOOP_50_2_fu_213 : component radix_sort_separate_bucket_parallel_2_radix_sort_separate_bucket_parallel_2_Pipeline_VITIS_LOOP_50_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_radix_sort_separate_bucket_parallel_2_Pipeline_VITIS_LOOP_50_2_fu_213_ap_start,
        ap_done => grp_radix_sort_separate_bucket_parallel_2_Pipeline_VITIS_LOOP_50_2_fu_213_ap_done,
        ap_idle => grp_radix_sort_separate_bucket_parallel_2_Pipeline_VITIS_LOOP_50_2_fu_213_ap_idle,
        ap_ready => grp_radix_sort_separate_bucket_parallel_2_Pipeline_VITIS_LOOP_50_2_fu_213_ap_ready,
        sext_ln50 => k_2_reg_143,
        add_ln50 => add_ln50_reg_385,
        phi_mul => phi_mul_reg_131,
        sorted_data_address0 => grp_radix_sort_separate_bucket_parallel_2_Pipeline_VITIS_LOOP_50_2_fu_213_sorted_data_address0,
        sorted_data_ce0 => grp_radix_sort_separate_bucket_parallel_2_Pipeline_VITIS_LOOP_50_2_fu_213_sorted_data_ce0,
        sorted_data_we0 => grp_radix_sort_separate_bucket_parallel_2_Pipeline_VITIS_LOOP_50_2_fu_213_sorted_data_we0,
        sorted_data_d0 => grp_radix_sort_separate_bucket_parallel_2_Pipeline_VITIS_LOOP_50_2_fu_213_sorted_data_d0);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_sync_reg_grp_input_bucket_parallel_2_1_fu_186_ap_done_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_grp_input_bucket_parallel_2_1_fu_186_ap_done <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_state4_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                    ap_sync_reg_grp_input_bucket_parallel_2_1_fu_186_ap_done <= ap_const_logic_0;
                elsif ((grp_input_bucket_parallel_2_1_fu_186_ap_done = ap_const_logic_1)) then 
                    ap_sync_reg_grp_input_bucket_parallel_2_1_fu_186_ap_done <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_grp_input_bucket_parallel_2_1_fu_186_ap_ready_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_grp_input_bucket_parallel_2_1_fu_186_ap_ready <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_state4_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                    ap_sync_reg_grp_input_bucket_parallel_2_1_fu_186_ap_ready <= ap_const_logic_0;
                elsif ((grp_input_bucket_parallel_2_1_fu_186_ap_ready = ap_const_logic_1)) then 
                    ap_sync_reg_grp_input_bucket_parallel_2_1_fu_186_ap_ready <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    grp_input_bucket_parallel_2_1_fu_186_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_input_bucket_parallel_2_1_fu_186_ap_start_reg <= ap_const_logic_0;
            else
                if ((((icmp_ln39_fu_232_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((ap_sync_grp_input_bucket_parallel_2_1_fu_186_ap_ready = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state4)))) then 
                    grp_input_bucket_parallel_2_1_fu_186_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_input_bucket_parallel_2_1_fu_186_ap_ready = ap_const_logic_1)) then 
                    grp_input_bucket_parallel_2_1_fu_186_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_radix_sort_separate_bucket_parallel_2_Pipeline_1_fu_166_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_radix_sort_separate_bucket_parallel_2_Pipeline_1_fu_166_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                    grp_radix_sort_separate_bucket_parallel_2_Pipeline_1_fu_166_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_radix_sort_separate_bucket_parallel_2_Pipeline_1_fu_166_ap_ready = ap_const_logic_1)) then 
                    grp_radix_sort_separate_bucket_parallel_2_Pipeline_1_fu_166_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_radix_sort_separate_bucket_parallel_2_Pipeline_2_fu_172_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_radix_sort_separate_bucket_parallel_2_Pipeline_2_fu_172_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                    grp_radix_sort_separate_bucket_parallel_2_Pipeline_2_fu_172_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_radix_sort_separate_bucket_parallel_2_Pipeline_2_fu_172_ap_ready = ap_const_logic_1)) then 
                    grp_radix_sort_separate_bucket_parallel_2_Pipeline_2_fu_172_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_radix_sort_separate_bucket_parallel_2_Pipeline_VITIS_LOOP_45_1_fu_201_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_radix_sort_separate_bucket_parallel_2_Pipeline_VITIS_LOOP_45_1_fu_201_ap_start_reg <= ap_const_logic_0;
            else
                if (((icmp_ln45_fu_276_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
                    grp_radix_sort_separate_bucket_parallel_2_Pipeline_VITIS_LOOP_45_1_fu_201_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_radix_sort_separate_bucket_parallel_2_Pipeline_VITIS_LOOP_45_1_fu_201_ap_ready = ap_const_logic_1)) then 
                    grp_radix_sort_separate_bucket_parallel_2_Pipeline_VITIS_LOOP_45_1_fu_201_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_radix_sort_separate_bucket_parallel_2_Pipeline_VITIS_LOOP_50_2_fu_213_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_radix_sort_separate_bucket_parallel_2_Pipeline_VITIS_LOOP_50_2_fu_213_ap_start_reg <= ap_const_logic_0;
            else
                if (((bucket_pointer2_q0 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
                    grp_radix_sort_separate_bucket_parallel_2_Pipeline_VITIS_LOOP_50_2_fu_213_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_radix_sort_separate_bucket_parallel_2_Pipeline_VITIS_LOOP_50_2_fu_213_ap_ready = ap_const_logic_1)) then 
                    grp_radix_sort_separate_bucket_parallel_2_Pipeline_VITIS_LOOP_50_2_fu_213_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_radix_sort_separate_bucket_parallel_2_Pipeline_clear_bucket_pointer_fu_195_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_radix_sort_separate_bucket_parallel_2_Pipeline_clear_bucket_pointer_fu_195_ap_start_reg <= ap_const_logic_0;
            else
                if (((icmp_ln44_fu_255_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                    grp_radix_sort_separate_bucket_parallel_2_Pipeline_clear_bucket_pointer_fu_195_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_radix_sort_separate_bucket_parallel_2_Pipeline_clear_bucket_pointer_fu_195_ap_ready = ap_const_logic_1)) then 
                    grp_radix_sort_separate_bucket_parallel_2_Pipeline_clear_bucket_pointer_fu_195_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_radix_sort_separate_bucket_parallel_2_Pipeline_initialization_fu_178_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_radix_sort_separate_bucket_parallel_2_Pipeline_initialization_fu_178_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                    grp_radix_sort_separate_bucket_parallel_2_Pipeline_initialization_fu_178_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_radix_sort_separate_bucket_parallel_2_Pipeline_initialization_fu_178_ap_ready = ap_const_logic_1)) then 
                    grp_radix_sort_separate_bucket_parallel_2_Pipeline_initialization_fu_178_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i_fu_68_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                i_fu_68 <= ap_const_lv4_0;
            elsif (((icmp_ln44_fu_255_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                i_fu_68 <= i_2_reg_319;
            end if; 
        end if;
    end process;

    k_2_reg_143_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln45_fu_276_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
                k_2_reg_143 <= k_reg_119;
            elsif (((icmp_ln45_reg_357 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_state7_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
                k_2_reg_143 <= empty_fu_287_p2;
            end if; 
        end if;
    end process;

    k_3_reg_154_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((bucket_pointer2_q0 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
                k_3_reg_154 <= k_2_reg_143;
            elsif (((bucket_pointer2_load_reg_376 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_state9_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
                k_3_reg_154 <= add_ln44_fu_303_p2;
            end if; 
        end if;
    end process;

    k_reg_119_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state4_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                k_reg_119 <= ap_const_lv32_0;
            elsif (((ap_const_boolean_0 = ap_block_state9_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
                k_reg_119 <= ap_phi_mux_k_3_phi_fu_158_p4;
            end if; 
        end if;
    end process;

    l_reg_108_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state4_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                l_reg_108 <= ap_const_lv5_0;
            elsif (((ap_const_boolean_0 = ap_block_state9_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
                l_reg_108 <= add_ln44_1_reg_337;
            end if; 
        end if;
    end process;

    phi_mul_reg_131_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state4_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                phi_mul_reg_131 <= ap_const_lv9_0;
            elsif (((ap_const_boolean_0 = ap_block_state9_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
                phi_mul_reg_131 <= add_ln44_2_reg_329;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                add_ln44_1_reg_337 <= add_ln44_1_fu_261_p2;
                add_ln44_2_reg_329 <= add_ln44_2_fu_249_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((bucket_pointer2_q0 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state8))) then
                add_ln50_reg_385 <= add_ln50_fu_296_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
                bucket_pointer1_load_reg_352 <= bucket_pointer1_q0;
                icmp_ln45_reg_357 <= icmp_ln45_fu_276_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state8)) then
                    bucket_pointer2_load_cast3_reg_380(0) <= bucket_pointer2_load_cast3_fu_292_p1(0);
                bucket_pointer2_load_reg_376 <= bucket_pointer2_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                i_2_reg_319 <= i_2_fu_238_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln39_fu_232_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                trunc_ln39_reg_324 <= trunc_ln39_fu_244_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln45_fu_276_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                trunc_ln45_reg_361 <= trunc_ln45_fu_282_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln44_fu_255_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                    zext_ln44_reg_342(4 downto 0) <= zext_ln44_fu_267_p1(4 downto 0);
            end if;
        end if;
    end process;
    zext_ln44_reg_342(63 downto 5) <= "00000000000000000000000000000000000000000000000000000000000";
    bucket_pointer2_load_cast3_reg_380(31 downto 1) <= "0000000000000000000000000000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state3, icmp_ln39_fu_232_p2, ap_CS_fsm_state5, icmp_ln44_fu_255_p2, ap_CS_fsm_state7, grp_radix_sort_separate_bucket_parallel_2_Pipeline_clear_bucket_pointer_fu_195_ap_done, ap_CS_fsm_state9, ap_block_state9_on_subcall_done, ap_CS_fsm_state4, ap_block_state4_on_subcall_done, ap_block_state7_on_subcall_done, ap_CS_fsm_state2, ap_CS_fsm_state10, ap_block_state2_on_subcall_done)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                if (((icmp_ln39_fu_232_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state4 => 
                if (((ap_const_boolean_0 = ap_block_state4_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state5 => 
                if (((icmp_ln44_fu_255_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                    ap_NS_fsm <= ap_ST_fsm_state10;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                if (((ap_const_boolean_0 = ap_block_state7_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                if (((ap_const_boolean_0 = ap_block_state9_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state9))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state9;
                end if;
            when ap_ST_fsm_state10 => 
                if (((grp_radix_sort_separate_bucket_parallel_2_Pipeline_clear_bucket_pointer_fu_195_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state10;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXX";
        end case;
    end process;
    add_ln44_1_fu_261_p2 <= std_logic_vector(unsigned(l_reg_108) + unsigned(ap_const_lv5_1));
    add_ln44_2_fu_249_p2 <= std_logic_vector(unsigned(phi_mul_reg_131) + unsigned(ap_const_lv9_19));
    add_ln44_fu_303_p2 <= std_logic_vector(unsigned(k_2_reg_143) + unsigned(bucket_pointer2_load_cast3_reg_380));
    add_ln50_fu_296_p2 <= std_logic_vector(unsigned(k_2_reg_143) + unsigned(ap_const_lv32_1));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);

    ap_ST_fsm_state10_blk_assign_proc : process(grp_radix_sort_separate_bucket_parallel_2_Pipeline_clear_bucket_pointer_fu_195_ap_done)
    begin
        if ((grp_radix_sort_separate_bucket_parallel_2_Pipeline_clear_bucket_pointer_fu_195_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state10_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state10_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state2_blk_assign_proc : process(ap_block_state2_on_subcall_done)
    begin
        if ((ap_const_boolean_1 = ap_block_state2_on_subcall_done)) then 
            ap_ST_fsm_state2_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state2_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state3_blk <= ap_const_logic_0;

    ap_ST_fsm_state4_blk_assign_proc : process(ap_block_state4_on_subcall_done)
    begin
        if ((ap_const_boolean_1 = ap_block_state4_on_subcall_done)) then 
            ap_ST_fsm_state4_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state4_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state5_blk <= ap_const_logic_0;
    ap_ST_fsm_state6_blk <= ap_const_logic_0;

    ap_ST_fsm_state7_blk_assign_proc : process(ap_block_state7_on_subcall_done)
    begin
        if ((ap_const_boolean_1 = ap_block_state7_on_subcall_done)) then 
            ap_ST_fsm_state7_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state7_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state8_blk <= ap_const_logic_0;

    ap_ST_fsm_state9_blk_assign_proc : process(ap_block_state9_on_subcall_done)
    begin
        if ((ap_const_boolean_1 = ap_block_state9_on_subcall_done)) then 
            ap_ST_fsm_state9_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state9_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_block_state2_on_subcall_done_assign_proc : process(grp_radix_sort_separate_bucket_parallel_2_Pipeline_1_fu_166_ap_done, grp_radix_sort_separate_bucket_parallel_2_Pipeline_2_fu_172_ap_done, grp_radix_sort_separate_bucket_parallel_2_Pipeline_initialization_fu_178_ap_done)
    begin
                ap_block_state2_on_subcall_done <= ((grp_radix_sort_separate_bucket_parallel_2_Pipeline_initialization_fu_178_ap_done = ap_const_logic_0) or (grp_radix_sort_separate_bucket_parallel_2_Pipeline_2_fu_172_ap_done = ap_const_logic_0) or (grp_radix_sort_separate_bucket_parallel_2_Pipeline_1_fu_166_ap_done = ap_const_logic_0));
    end process;


    ap_block_state4_on_subcall_done_assign_proc : process(ap_sync_grp_input_bucket_parallel_2_1_fu_186_ap_ready, ap_sync_grp_input_bucket_parallel_2_1_fu_186_ap_done)
    begin
                ap_block_state4_on_subcall_done <= ((ap_sync_grp_input_bucket_parallel_2_1_fu_186_ap_ready and ap_sync_grp_input_bucket_parallel_2_1_fu_186_ap_done) = ap_const_logic_0);
    end process;


    ap_block_state7_on_subcall_done_assign_proc : process(icmp_ln45_reg_357, grp_radix_sort_separate_bucket_parallel_2_Pipeline_VITIS_LOOP_45_1_fu_201_ap_done)
    begin
                ap_block_state7_on_subcall_done <= ((icmp_ln45_reg_357 = ap_const_lv1_1) and (grp_radix_sort_separate_bucket_parallel_2_Pipeline_VITIS_LOOP_45_1_fu_201_ap_done = ap_const_logic_0));
    end process;


    ap_block_state9_on_subcall_done_assign_proc : process(bucket_pointer2_load_reg_376, grp_radix_sort_separate_bucket_parallel_2_Pipeline_VITIS_LOOP_50_2_fu_213_ap_done)
    begin
                ap_block_state9_on_subcall_done <= ((bucket_pointer2_load_reg_376 = ap_const_lv1_1) and (grp_radix_sort_separate_bucket_parallel_2_Pipeline_VITIS_LOOP_50_2_fu_213_ap_done = ap_const_logic_0));
    end process;


    ap_done_assign_proc : process(ap_CS_fsm_state3, icmp_ln39_fu_232_p2)
    begin
        if (((icmp_ln39_fu_232_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_k_3_phi_fu_158_p4_assign_proc : process(bucket_pointer2_load_reg_376, ap_CS_fsm_state9, add_ln44_fu_303_p2, k_3_reg_154)
    begin
        if (((bucket_pointer2_load_reg_376 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            ap_phi_mux_k_3_phi_fu_158_p4 <= add_ln44_fu_303_p2;
        else 
            ap_phi_mux_k_3_phi_fu_158_p4 <= k_3_reg_154;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state3, icmp_ln39_fu_232_p2)
    begin
        if (((icmp_ln39_fu_232_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    ap_sync_grp_input_bucket_parallel_2_1_fu_186_ap_done <= (grp_input_bucket_parallel_2_1_fu_186_ap_done or ap_sync_reg_grp_input_bucket_parallel_2_1_fu_186_ap_done);
    ap_sync_grp_input_bucket_parallel_2_1_fu_186_ap_ready <= (grp_input_bucket_parallel_2_1_fu_186_ap_ready or ap_sync_reg_grp_input_bucket_parallel_2_1_fu_186_ap_ready);

    bucket1_address0_assign_proc : process(icmp_ln45_reg_357, ap_CS_fsm_state7, grp_input_bucket_parallel_2_1_fu_186_bucket1_address0, grp_radix_sort_separate_bucket_parallel_2_Pipeline_VITIS_LOOP_45_1_fu_201_bucket1_address0, ap_CS_fsm_state4)
    begin
        if (((icmp_ln45_reg_357 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            bucket1_address0 <= grp_radix_sort_separate_bucket_parallel_2_Pipeline_VITIS_LOOP_45_1_fu_201_bucket1_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            bucket1_address0 <= grp_input_bucket_parallel_2_1_fu_186_bucket1_address0;
        else 
            bucket1_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    bucket1_ce0_assign_proc : process(icmp_ln45_reg_357, ap_CS_fsm_state7, grp_input_bucket_parallel_2_1_fu_186_bucket1_ce0, grp_radix_sort_separate_bucket_parallel_2_Pipeline_VITIS_LOOP_45_1_fu_201_bucket1_ce0, ap_CS_fsm_state4)
    begin
        if (((icmp_ln45_reg_357 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            bucket1_ce0 <= grp_radix_sort_separate_bucket_parallel_2_Pipeline_VITIS_LOOP_45_1_fu_201_bucket1_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            bucket1_ce0 <= grp_input_bucket_parallel_2_1_fu_186_bucket1_ce0;
        else 
            bucket1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    bucket1_we0_assign_proc : process(grp_input_bucket_parallel_2_1_fu_186_bucket1_we0, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            bucket1_we0 <= grp_input_bucket_parallel_2_1_fu_186_bucket1_we0;
        else 
            bucket1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    bucket_pointer1_address0_assign_proc : process(ap_CS_fsm_state5, zext_ln44_fu_267_p1, icmp_ln44_fu_255_p2, grp_radix_sort_separate_bucket_parallel_2_Pipeline_1_fu_166_bucket_pointer1_address0, grp_input_bucket_parallel_2_1_fu_186_bucket_pointer1_address0, grp_radix_sort_separate_bucket_parallel_2_Pipeline_clear_bucket_pointer_fu_195_bucket_pointer1_address0, ap_CS_fsm_state4, ap_CS_fsm_state2, ap_CS_fsm_state10)
    begin
        if (((icmp_ln44_fu_255_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            bucket_pointer1_address0 <= zext_ln44_fu_267_p1(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            bucket_pointer1_address0 <= grp_radix_sort_separate_bucket_parallel_2_Pipeline_clear_bucket_pointer_fu_195_bucket_pointer1_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            bucket_pointer1_address0 <= grp_input_bucket_parallel_2_1_fu_186_bucket_pointer1_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            bucket_pointer1_address0 <= grp_radix_sort_separate_bucket_parallel_2_Pipeline_1_fu_166_bucket_pointer1_address0;
        else 
            bucket_pointer1_address0 <= "XXXX";
        end if; 
    end process;


    bucket_pointer1_ce0_assign_proc : process(ap_CS_fsm_state5, icmp_ln44_fu_255_p2, grp_radix_sort_separate_bucket_parallel_2_Pipeline_1_fu_166_bucket_pointer1_ce0, grp_input_bucket_parallel_2_1_fu_186_bucket_pointer1_ce0, grp_radix_sort_separate_bucket_parallel_2_Pipeline_clear_bucket_pointer_fu_195_bucket_pointer1_ce0, ap_CS_fsm_state4, ap_CS_fsm_state2, ap_CS_fsm_state10)
    begin
        if (((icmp_ln44_fu_255_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            bucket_pointer1_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            bucket_pointer1_ce0 <= grp_radix_sort_separate_bucket_parallel_2_Pipeline_clear_bucket_pointer_fu_195_bucket_pointer1_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            bucket_pointer1_ce0 <= grp_input_bucket_parallel_2_1_fu_186_bucket_pointer1_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            bucket_pointer1_ce0 <= grp_radix_sort_separate_bucket_parallel_2_Pipeline_1_fu_166_bucket_pointer1_ce0;
        else 
            bucket_pointer1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    bucket_pointer1_d0_assign_proc : process(grp_radix_sort_separate_bucket_parallel_2_Pipeline_1_fu_166_bucket_pointer1_d0, grp_input_bucket_parallel_2_1_fu_186_bucket_pointer1_d0, grp_radix_sort_separate_bucket_parallel_2_Pipeline_clear_bucket_pointer_fu_195_bucket_pointer1_d0, ap_CS_fsm_state4, ap_CS_fsm_state2, ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            bucket_pointer1_d0 <= grp_radix_sort_separate_bucket_parallel_2_Pipeline_clear_bucket_pointer_fu_195_bucket_pointer1_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            bucket_pointer1_d0 <= grp_input_bucket_parallel_2_1_fu_186_bucket_pointer1_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            bucket_pointer1_d0 <= grp_radix_sort_separate_bucket_parallel_2_Pipeline_1_fu_166_bucket_pointer1_d0;
        else 
            bucket_pointer1_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    bucket_pointer1_we0_assign_proc : process(grp_radix_sort_separate_bucket_parallel_2_Pipeline_1_fu_166_bucket_pointer1_we0, grp_input_bucket_parallel_2_1_fu_186_bucket_pointer1_we0, grp_radix_sort_separate_bucket_parallel_2_Pipeline_clear_bucket_pointer_fu_195_bucket_pointer1_we0, ap_CS_fsm_state4, ap_CS_fsm_state2, ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            bucket_pointer1_we0 <= grp_radix_sort_separate_bucket_parallel_2_Pipeline_clear_bucket_pointer_fu_195_bucket_pointer1_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            bucket_pointer1_we0 <= grp_input_bucket_parallel_2_1_fu_186_bucket_pointer1_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            bucket_pointer1_we0 <= grp_radix_sort_separate_bucket_parallel_2_Pipeline_1_fu_166_bucket_pointer1_we0;
        else 
            bucket_pointer1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    bucket_pointer2_address0_assign_proc : process(zext_ln44_reg_342, ap_CS_fsm_state7, grp_radix_sort_separate_bucket_parallel_2_Pipeline_2_fu_172_bucket_pointer2_address0, grp_radix_sort_separate_bucket_parallel_2_Pipeline_clear_bucket_pointer_fu_195_bucket_pointer2_address0, ap_CS_fsm_state2, ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            bucket_pointer2_address0 <= zext_ln44_reg_342(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            bucket_pointer2_address0 <= grp_radix_sort_separate_bucket_parallel_2_Pipeline_clear_bucket_pointer_fu_195_bucket_pointer2_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            bucket_pointer2_address0 <= grp_radix_sort_separate_bucket_parallel_2_Pipeline_2_fu_172_bucket_pointer2_address0;
        else 
            bucket_pointer2_address0 <= "XXXX";
        end if; 
    end process;


    bucket_pointer2_ce0_assign_proc : process(ap_CS_fsm_state7, grp_radix_sort_separate_bucket_parallel_2_Pipeline_2_fu_172_bucket_pointer2_ce0, grp_radix_sort_separate_bucket_parallel_2_Pipeline_clear_bucket_pointer_fu_195_bucket_pointer2_ce0, ap_block_state7_on_subcall_done, ap_CS_fsm_state2, ap_CS_fsm_state10)
    begin
        if (((ap_const_boolean_0 = ap_block_state7_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            bucket_pointer2_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            bucket_pointer2_ce0 <= grp_radix_sort_separate_bucket_parallel_2_Pipeline_clear_bucket_pointer_fu_195_bucket_pointer2_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            bucket_pointer2_ce0 <= grp_radix_sort_separate_bucket_parallel_2_Pipeline_2_fu_172_bucket_pointer2_ce0;
        else 
            bucket_pointer2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    bucket_pointer2_d0_assign_proc : process(grp_radix_sort_separate_bucket_parallel_2_Pipeline_2_fu_172_bucket_pointer2_d0, grp_radix_sort_separate_bucket_parallel_2_Pipeline_clear_bucket_pointer_fu_195_bucket_pointer2_d0, ap_CS_fsm_state2, ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            bucket_pointer2_d0 <= grp_radix_sort_separate_bucket_parallel_2_Pipeline_clear_bucket_pointer_fu_195_bucket_pointer2_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            bucket_pointer2_d0 <= grp_radix_sort_separate_bucket_parallel_2_Pipeline_2_fu_172_bucket_pointer2_d0;
        else 
            bucket_pointer2_d0 <= "X";
        end if; 
    end process;

    bucket_pointer2_load_cast3_fu_292_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(bucket_pointer2_q0),32));

    bucket_pointer2_we0_assign_proc : process(grp_radix_sort_separate_bucket_parallel_2_Pipeline_2_fu_172_bucket_pointer2_we0, grp_radix_sort_separate_bucket_parallel_2_Pipeline_clear_bucket_pointer_fu_195_bucket_pointer2_we0, ap_CS_fsm_state2, ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            bucket_pointer2_we0 <= grp_radix_sort_separate_bucket_parallel_2_Pipeline_clear_bucket_pointer_fu_195_bucket_pointer2_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            bucket_pointer2_we0 <= grp_radix_sort_separate_bucket_parallel_2_Pipeline_2_fu_172_bucket_pointer2_we0;
        else 
            bucket_pointer2_we0 <= ap_const_logic_0;
        end if; 
    end process;

    data_address0 <= grp_radix_sort_separate_bucket_parallel_2_Pipeline_initialization_fu_178_data_address0;
    data_ce0 <= grp_radix_sort_separate_bucket_parallel_2_Pipeline_initialization_fu_178_data_ce0;
    empty_fu_287_p2 <= std_logic_vector(unsigned(bucket_pointer1_load_reg_352) + unsigned(k_reg_119));

    grp_input_bucket_parallel_2_1_fu_186_ap_continue_assign_proc : process(ap_CS_fsm_state4, ap_block_state4_on_subcall_done)
    begin
        if (((ap_const_boolean_0 = ap_block_state4_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            grp_input_bucket_parallel_2_1_fu_186_ap_continue <= ap_const_logic_1;
        else 
            grp_input_bucket_parallel_2_1_fu_186_ap_continue <= ap_const_logic_0;
        end if; 
    end process;

    grp_input_bucket_parallel_2_1_fu_186_ap_start <= grp_input_bucket_parallel_2_1_fu_186_ap_start_reg;
    grp_radix_sort_separate_bucket_parallel_2_Pipeline_1_fu_166_ap_start <= grp_radix_sort_separate_bucket_parallel_2_Pipeline_1_fu_166_ap_start_reg;
    grp_radix_sort_separate_bucket_parallel_2_Pipeline_2_fu_172_ap_start <= grp_radix_sort_separate_bucket_parallel_2_Pipeline_2_fu_172_ap_start_reg;
    grp_radix_sort_separate_bucket_parallel_2_Pipeline_VITIS_LOOP_45_1_fu_201_ap_start <= grp_radix_sort_separate_bucket_parallel_2_Pipeline_VITIS_LOOP_45_1_fu_201_ap_start_reg;
    grp_radix_sort_separate_bucket_parallel_2_Pipeline_VITIS_LOOP_50_2_fu_213_ap_start <= grp_radix_sort_separate_bucket_parallel_2_Pipeline_VITIS_LOOP_50_2_fu_213_ap_start_reg;
    grp_radix_sort_separate_bucket_parallel_2_Pipeline_clear_bucket_pointer_fu_195_ap_start <= grp_radix_sort_separate_bucket_parallel_2_Pipeline_clear_bucket_pointer_fu_195_ap_start_reg;
    grp_radix_sort_separate_bucket_parallel_2_Pipeline_initialization_fu_178_ap_start <= grp_radix_sort_separate_bucket_parallel_2_Pipeline_initialization_fu_178_ap_start_reg;
    i_2_fu_238_p2 <= std_logic_vector(unsigned(i_fu_68) + unsigned(ap_const_lv4_1));
    icmp_ln39_fu_232_p2 <= "1" when (i_fu_68 = ap_const_lv4_8) else "0";
    icmp_ln44_fu_255_p2 <= "1" when (l_reg_108 = ap_const_lv5_10) else "0";
    icmp_ln45_fu_276_p2 <= "1" when (signed(bucket_pointer1_q0) > signed(ap_const_lv32_0)) else "0";

    sorted_data_address0_assign_proc : process(icmp_ln45_reg_357, ap_CS_fsm_state7, bucket_pointer2_load_reg_376, grp_radix_sort_separate_bucket_parallel_2_Pipeline_initialization_fu_178_sorted_data_address0, grp_input_bucket_parallel_2_1_fu_186_sorted_data_address0, grp_radix_sort_separate_bucket_parallel_2_Pipeline_VITIS_LOOP_45_1_fu_201_sorted_data_address0, grp_radix_sort_separate_bucket_parallel_2_Pipeline_VITIS_LOOP_50_2_fu_213_sorted_data_address0, ap_CS_fsm_state9, ap_CS_fsm_state4, ap_CS_fsm_state2)
    begin
        if (((bucket_pointer2_load_reg_376 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            sorted_data_address0 <= grp_radix_sort_separate_bucket_parallel_2_Pipeline_VITIS_LOOP_50_2_fu_213_sorted_data_address0;
        elsif (((icmp_ln45_reg_357 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            sorted_data_address0 <= grp_radix_sort_separate_bucket_parallel_2_Pipeline_VITIS_LOOP_45_1_fu_201_sorted_data_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            sorted_data_address0 <= grp_input_bucket_parallel_2_1_fu_186_sorted_data_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            sorted_data_address0 <= grp_radix_sort_separate_bucket_parallel_2_Pipeline_initialization_fu_178_sorted_data_address0;
        else 
            sorted_data_address0 <= "XXXXXX";
        end if; 
    end process;


    sorted_data_ce0_assign_proc : process(icmp_ln45_reg_357, ap_CS_fsm_state7, bucket_pointer2_load_reg_376, grp_radix_sort_separate_bucket_parallel_2_Pipeline_initialization_fu_178_sorted_data_ce0, grp_input_bucket_parallel_2_1_fu_186_sorted_data_ce0, grp_radix_sort_separate_bucket_parallel_2_Pipeline_VITIS_LOOP_45_1_fu_201_sorted_data_ce0, grp_radix_sort_separate_bucket_parallel_2_Pipeline_VITIS_LOOP_50_2_fu_213_sorted_data_ce0, ap_CS_fsm_state9, ap_CS_fsm_state4, ap_CS_fsm_state2)
    begin
        if (((bucket_pointer2_load_reg_376 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            sorted_data_ce0 <= grp_radix_sort_separate_bucket_parallel_2_Pipeline_VITIS_LOOP_50_2_fu_213_sorted_data_ce0;
        elsif (((icmp_ln45_reg_357 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            sorted_data_ce0 <= grp_radix_sort_separate_bucket_parallel_2_Pipeline_VITIS_LOOP_45_1_fu_201_sorted_data_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            sorted_data_ce0 <= grp_input_bucket_parallel_2_1_fu_186_sorted_data_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            sorted_data_ce0 <= grp_radix_sort_separate_bucket_parallel_2_Pipeline_initialization_fu_178_sorted_data_ce0;
        else 
            sorted_data_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    sorted_data_d0_assign_proc : process(icmp_ln45_reg_357, ap_CS_fsm_state7, bucket_pointer2_load_reg_376, grp_radix_sort_separate_bucket_parallel_2_Pipeline_initialization_fu_178_sorted_data_d0, grp_radix_sort_separate_bucket_parallel_2_Pipeline_VITIS_LOOP_45_1_fu_201_sorted_data_d0, grp_radix_sort_separate_bucket_parallel_2_Pipeline_VITIS_LOOP_50_2_fu_213_sorted_data_d0, ap_CS_fsm_state9, ap_CS_fsm_state2)
    begin
        if (((bucket_pointer2_load_reg_376 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            sorted_data_d0 <= grp_radix_sort_separate_bucket_parallel_2_Pipeline_VITIS_LOOP_50_2_fu_213_sorted_data_d0;
        elsif (((icmp_ln45_reg_357 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            sorted_data_d0 <= grp_radix_sort_separate_bucket_parallel_2_Pipeline_VITIS_LOOP_45_1_fu_201_sorted_data_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            sorted_data_d0 <= grp_radix_sort_separate_bucket_parallel_2_Pipeline_initialization_fu_178_sorted_data_d0;
        else 
            sorted_data_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    sorted_data_we0_assign_proc : process(icmp_ln45_reg_357, ap_CS_fsm_state7, bucket_pointer2_load_reg_376, grp_radix_sort_separate_bucket_parallel_2_Pipeline_initialization_fu_178_sorted_data_we0, grp_radix_sort_separate_bucket_parallel_2_Pipeline_VITIS_LOOP_45_1_fu_201_sorted_data_we0, grp_radix_sort_separate_bucket_parallel_2_Pipeline_VITIS_LOOP_50_2_fu_213_sorted_data_we0, ap_CS_fsm_state9, ap_CS_fsm_state2)
    begin
        if (((bucket_pointer2_load_reg_376 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            sorted_data_we0 <= grp_radix_sort_separate_bucket_parallel_2_Pipeline_VITIS_LOOP_50_2_fu_213_sorted_data_we0;
        elsif (((icmp_ln45_reg_357 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            sorted_data_we0 <= grp_radix_sort_separate_bucket_parallel_2_Pipeline_VITIS_LOOP_45_1_fu_201_sorted_data_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            sorted_data_we0 <= grp_radix_sort_separate_bucket_parallel_2_Pipeline_initialization_fu_178_sorted_data_we0;
        else 
            sorted_data_we0 <= ap_const_logic_0;
        end if; 
    end process;

    trunc_ln39_fu_244_p1 <= i_fu_68(3 - 1 downto 0);
    trunc_ln45_fu_282_p1 <= bucket_pointer1_q0(31 - 1 downto 0);
    zext_ln44_fu_267_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(l_reg_108),64));
end behav;
