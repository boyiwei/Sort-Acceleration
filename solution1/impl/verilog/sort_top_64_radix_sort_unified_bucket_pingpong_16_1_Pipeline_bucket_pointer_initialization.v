// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module sort_top_64_radix_sort_unified_bucket_pingpong_16_1_Pipeline_bucket_pointer_initialization (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        bucket_sizes_8054,
        bucket_sizes_8053,
        bucket_sizes_8052,
        bucket_sizes_8051,
        bucket_sizes_8050,
        bucket_sizes_8049,
        bucket_sizes_8048,
        bucket_sizes_8047,
        bucket_sizes_8046,
        bucket_sizes_8045,
        bucket_sizes_8044,
        bucket_sizes_8043,
        bucket_sizes_8042,
        bucket_sizes_8041,
        bucket_sizes_8040,
        bucket_sizes_8023,
        bucket_pointer_3590,
        bucket_pointer_3589,
        bucket_pointer_3588,
        bucket_pointer_3587,
        bucket_pointer_3586,
        bucket_pointer_3585,
        bucket_pointer_3584,
        bucket_pointer_3583,
        bucket_pointer_3582,
        bucket_pointer_3581,
        bucket_pointer_3580,
        bucket_pointer_3579,
        bucket_pointer_3578,
        bucket_pointer_3577,
        bucket_pointer_3576,
        bucket_pointer,
        bucket_sizes_8071_out,
        bucket_sizes_8071_out_ap_vld,
        bucket_sizes_8070_out,
        bucket_sizes_8070_out_ap_vld,
        bucket_sizes_8069_out,
        bucket_sizes_8069_out_ap_vld,
        bucket_sizes_8068_out,
        bucket_sizes_8068_out_ap_vld,
        bucket_sizes_8067_out,
        bucket_sizes_8067_out_ap_vld,
        bucket_sizes_8066_out,
        bucket_sizes_8066_out_ap_vld,
        bucket_sizes_8065_out,
        bucket_sizes_8065_out_ap_vld,
        bucket_sizes_8064_out,
        bucket_sizes_8064_out_ap_vld,
        bucket_sizes_8063_out,
        bucket_sizes_8063_out_ap_vld,
        bucket_sizes_8062_out,
        bucket_sizes_8062_out_ap_vld,
        bucket_sizes_8061_out,
        bucket_sizes_8061_out_ap_vld,
        bucket_sizes_8060_out,
        bucket_sizes_8060_out_ap_vld,
        bucket_sizes_8059_out,
        bucket_sizes_8059_out_ap_vld,
        bucket_sizes_8058_out,
        bucket_sizes_8058_out_ap_vld,
        bucket_sizes_8057_out,
        bucket_sizes_8057_out_ap_vld,
        bucket_sizes_8056_out,
        bucket_sizes_8056_out_ap_vld,
        bucket_pointer_3606_out,
        bucket_pointer_3606_out_ap_vld,
        bucket_pointer_3605_out,
        bucket_pointer_3605_out_ap_vld,
        bucket_pointer_3604_out,
        bucket_pointer_3604_out_ap_vld,
        bucket_pointer_3603_out,
        bucket_pointer_3603_out_ap_vld,
        bucket_pointer_3602_out,
        bucket_pointer_3602_out_ap_vld,
        bucket_pointer_3601_out,
        bucket_pointer_3601_out_ap_vld,
        bucket_pointer_3600_out,
        bucket_pointer_3600_out_ap_vld,
        bucket_pointer_3599_out,
        bucket_pointer_3599_out_ap_vld,
        bucket_pointer_3598_out,
        bucket_pointer_3598_out_ap_vld,
        bucket_pointer_3597_out,
        bucket_pointer_3597_out_ap_vld,
        bucket_pointer_3596_out,
        bucket_pointer_3596_out_ap_vld,
        bucket_pointer_3595_out,
        bucket_pointer_3595_out_ap_vld,
        bucket_pointer_3594_out,
        bucket_pointer_3594_out_ap_vld,
        bucket_pointer_3593_out,
        bucket_pointer_3593_out_ap_vld,
        bucket_pointer_3592_out,
        bucket_pointer_3592_out_ap_vld,
        bucket_pointer_3591_out,
        bucket_pointer_3591_out_ap_vld
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] bucket_sizes_8054;
input  [31:0] bucket_sizes_8053;
input  [31:0] bucket_sizes_8052;
input  [31:0] bucket_sizes_8051;
input  [31:0] bucket_sizes_8050;
input  [31:0] bucket_sizes_8049;
input  [31:0] bucket_sizes_8048;
input  [31:0] bucket_sizes_8047;
input  [31:0] bucket_sizes_8046;
input  [31:0] bucket_sizes_8045;
input  [31:0] bucket_sizes_8044;
input  [31:0] bucket_sizes_8043;
input  [31:0] bucket_sizes_8042;
input  [31:0] bucket_sizes_8041;
input  [31:0] bucket_sizes_8040;
input  [31:0] bucket_sizes_8023;
input  [31:0] bucket_pointer_3590;
input  [31:0] bucket_pointer_3589;
input  [31:0] bucket_pointer_3588;
input  [31:0] bucket_pointer_3587;
input  [31:0] bucket_pointer_3586;
input  [31:0] bucket_pointer_3585;
input  [31:0] bucket_pointer_3584;
input  [31:0] bucket_pointer_3583;
input  [31:0] bucket_pointer_3582;
input  [31:0] bucket_pointer_3581;
input  [31:0] bucket_pointer_3580;
input  [31:0] bucket_pointer_3579;
input  [31:0] bucket_pointer_3578;
input  [31:0] bucket_pointer_3577;
input  [31:0] bucket_pointer_3576;
input  [31:0] bucket_pointer;
output  [31:0] bucket_sizes_8071_out;
output   bucket_sizes_8071_out_ap_vld;
output  [31:0] bucket_sizes_8070_out;
output   bucket_sizes_8070_out_ap_vld;
output  [31:0] bucket_sizes_8069_out;
output   bucket_sizes_8069_out_ap_vld;
output  [31:0] bucket_sizes_8068_out;
output   bucket_sizes_8068_out_ap_vld;
output  [31:0] bucket_sizes_8067_out;
output   bucket_sizes_8067_out_ap_vld;
output  [31:0] bucket_sizes_8066_out;
output   bucket_sizes_8066_out_ap_vld;
output  [31:0] bucket_sizes_8065_out;
output   bucket_sizes_8065_out_ap_vld;
output  [31:0] bucket_sizes_8064_out;
output   bucket_sizes_8064_out_ap_vld;
output  [31:0] bucket_sizes_8063_out;
output   bucket_sizes_8063_out_ap_vld;
output  [31:0] bucket_sizes_8062_out;
output   bucket_sizes_8062_out_ap_vld;
output  [31:0] bucket_sizes_8061_out;
output   bucket_sizes_8061_out_ap_vld;
output  [31:0] bucket_sizes_8060_out;
output   bucket_sizes_8060_out_ap_vld;
output  [31:0] bucket_sizes_8059_out;
output   bucket_sizes_8059_out_ap_vld;
output  [31:0] bucket_sizes_8058_out;
output   bucket_sizes_8058_out_ap_vld;
output  [31:0] bucket_sizes_8057_out;
output   bucket_sizes_8057_out_ap_vld;
output  [31:0] bucket_sizes_8056_out;
output   bucket_sizes_8056_out_ap_vld;
output  [31:0] bucket_pointer_3606_out;
output   bucket_pointer_3606_out_ap_vld;
output  [31:0] bucket_pointer_3605_out;
output   bucket_pointer_3605_out_ap_vld;
output  [31:0] bucket_pointer_3604_out;
output   bucket_pointer_3604_out_ap_vld;
output  [31:0] bucket_pointer_3603_out;
output   bucket_pointer_3603_out_ap_vld;
output  [31:0] bucket_pointer_3602_out;
output   bucket_pointer_3602_out_ap_vld;
output  [31:0] bucket_pointer_3601_out;
output   bucket_pointer_3601_out_ap_vld;
output  [31:0] bucket_pointer_3600_out;
output   bucket_pointer_3600_out_ap_vld;
output  [31:0] bucket_pointer_3599_out;
output   bucket_pointer_3599_out_ap_vld;
output  [31:0] bucket_pointer_3598_out;
output   bucket_pointer_3598_out_ap_vld;
output  [31:0] bucket_pointer_3597_out;
output   bucket_pointer_3597_out_ap_vld;
output  [31:0] bucket_pointer_3596_out;
output   bucket_pointer_3596_out_ap_vld;
output  [31:0] bucket_pointer_3595_out;
output   bucket_pointer_3595_out_ap_vld;
output  [31:0] bucket_pointer_3594_out;
output   bucket_pointer_3594_out_ap_vld;
output  [31:0] bucket_pointer_3593_out;
output   bucket_pointer_3593_out_ap_vld;
output  [31:0] bucket_pointer_3592_out;
output   bucket_pointer_3592_out_ap_vld;
output  [31:0] bucket_pointer_3591_out;
output   bucket_pointer_3591_out_ap_vld;

reg ap_idle;
reg bucket_sizes_8071_out_ap_vld;
reg bucket_sizes_8070_out_ap_vld;
reg bucket_sizes_8069_out_ap_vld;
reg bucket_sizes_8068_out_ap_vld;
reg bucket_sizes_8067_out_ap_vld;
reg bucket_sizes_8066_out_ap_vld;
reg bucket_sizes_8065_out_ap_vld;
reg bucket_sizes_8064_out_ap_vld;
reg bucket_sizes_8063_out_ap_vld;
reg bucket_sizes_8062_out_ap_vld;
reg bucket_sizes_8061_out_ap_vld;
reg bucket_sizes_8060_out_ap_vld;
reg bucket_sizes_8059_out_ap_vld;
reg bucket_sizes_8058_out_ap_vld;
reg bucket_sizes_8057_out_ap_vld;
reg bucket_sizes_8056_out_ap_vld;
reg bucket_pointer_3606_out_ap_vld;
reg bucket_pointer_3605_out_ap_vld;
reg bucket_pointer_3604_out_ap_vld;
reg bucket_pointer_3603_out_ap_vld;
reg bucket_pointer_3602_out_ap_vld;
reg bucket_pointer_3601_out_ap_vld;
reg bucket_pointer_3600_out_ap_vld;
reg bucket_pointer_3599_out_ap_vld;
reg bucket_pointer_3598_out_ap_vld;
reg bucket_pointer_3597_out_ap_vld;
reg bucket_pointer_3596_out_ap_vld;
reg bucket_pointer_3595_out_ap_vld;
reg bucket_pointer_3594_out_ap_vld;
reg bucket_pointer_3593_out_ap_vld;
reg bucket_pointer_3592_out_ap_vld;
reg bucket_pointer_3591_out_ap_vld;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln85_fu_916_p2;
reg    ap_condition_exit_pp0_iter1_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg   [4:0] m_fu_188;
wire   [4:0] add_ln85_fu_922_p2;
wire    ap_block_pp0_stage0_11001;
wire    ap_loop_init;
wire    ap_block_pp0_stage0;
reg   [31:0] bucket_pointer_1871_fu_192;
wire   [3:0] trunc_ln86_fu_976_p1;
reg   [31:0] bucket_pointer_1872_fu_196;
reg   [31:0] bucket_pointer_1873_fu_200;
reg   [31:0] bucket_pointer_1874_fu_204;
reg   [31:0] bucket_pointer_1875_fu_208;
reg   [31:0] bucket_pointer_1876_fu_212;
reg   [31:0] bucket_pointer_1877_fu_216;
reg   [31:0] bucket_pointer_1878_fu_220;
reg   [31:0] bucket_pointer_1879_fu_224;
reg   [31:0] bucket_pointer_1880_fu_228;
reg   [31:0] bucket_pointer_1881_fu_232;
reg   [31:0] bucket_pointer_1882_fu_236;
reg   [31:0] bucket_pointer_1883_fu_240;
reg   [31:0] bucket_pointer_1884_fu_244;
reg   [31:0] bucket_pointer_1885_fu_248;
wire   [31:0] next_bucket_pointer_fu_1018_p2;
reg   [31:0] bucket_pointer_1886_fu_252;
reg   [31:0] bucket_pointer_1887_fu_256;
reg   [31:0] bucket_sizes_fu_260;
reg   [31:0] bucket_sizes_2461_fu_264;
reg   [31:0] bucket_sizes_2462_fu_268;
reg   [31:0] bucket_sizes_2463_fu_272;
reg   [31:0] bucket_sizes_2464_fu_276;
reg   [31:0] bucket_sizes_2465_fu_280;
reg   [31:0] bucket_sizes_2466_fu_284;
reg   [31:0] bucket_sizes_2467_fu_288;
reg   [31:0] bucket_sizes_2468_fu_292;
reg   [31:0] bucket_sizes_2469_fu_296;
reg   [31:0] bucket_sizes_2470_fu_300;
reg   [31:0] bucket_sizes_2471_fu_304;
reg   [31:0] bucket_sizes_2472_fu_308;
reg   [31:0] bucket_sizes_2473_fu_312;
reg   [31:0] bucket_sizes_2474_fu_316;
reg   [31:0] bucket_sizes_2475_fu_320;
wire    ap_block_pp0_stage0_01001;
wire   [3:0] tmp_s_fu_980_p17;
wire   [31:0] tmp_s_fu_980_p18;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
reg    ap_condition_505;
reg    ap_condition_508;
reg    ap_condition_511;
reg    ap_condition_514;
reg    ap_condition_517;
reg    ap_condition_520;
reg    ap_condition_523;
reg    ap_condition_526;
reg    ap_condition_529;
reg    ap_condition_532;
reg    ap_condition_535;
reg    ap_condition_538;
reg    ap_condition_541;
reg    ap_condition_544;
reg    ap_condition_547;
reg    ap_condition_550;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_done_reg = 1'b0;
end

sort_top_64_mux_164_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_164_32_1_1_U2949(
    .din0(bucket_sizes_fu_260),
    .din1(bucket_sizes_2461_fu_264),
    .din2(bucket_sizes_2462_fu_268),
    .din3(bucket_sizes_2463_fu_272),
    .din4(bucket_sizes_2464_fu_276),
    .din5(bucket_sizes_2465_fu_280),
    .din6(bucket_sizes_2466_fu_284),
    .din7(bucket_sizes_2467_fu_288),
    .din8(bucket_sizes_2468_fu_292),
    .din9(bucket_sizes_2469_fu_296),
    .din10(bucket_sizes_2470_fu_300),
    .din11(bucket_sizes_2471_fu_304),
    .din12(bucket_sizes_2472_fu_308),
    .din13(bucket_sizes_2473_fu_312),
    .din14(bucket_sizes_2474_fu_316),
    .din15(bucket_sizes_2475_fu_320),
    .din16(tmp_s_fu_980_p17),
    .dout(tmp_s_fu_980_p18)
);

sort_top_64_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter1_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter1_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            bucket_pointer_1871_fu_192 <= bucket_pointer;
        end else if ((1'b1 == ap_condition_505)) begin
            bucket_pointer_1871_fu_192 <= bucket_pointer_1885_fu_248;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            bucket_pointer_1872_fu_196 <= bucket_pointer_3576;
        end else if ((1'b1 == ap_condition_508)) begin
            bucket_pointer_1872_fu_196 <= bucket_pointer_1885_fu_248;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            bucket_pointer_1873_fu_200 <= bucket_pointer_3577;
        end else if ((1'b1 == ap_condition_511)) begin
            bucket_pointer_1873_fu_200 <= bucket_pointer_1885_fu_248;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            bucket_pointer_1874_fu_204 <= bucket_pointer_3578;
        end else if ((1'b1 == ap_condition_514)) begin
            bucket_pointer_1874_fu_204 <= bucket_pointer_1885_fu_248;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            bucket_pointer_1875_fu_208 <= bucket_pointer_3579;
        end else if ((1'b1 == ap_condition_517)) begin
            bucket_pointer_1875_fu_208 <= bucket_pointer_1885_fu_248;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            bucket_pointer_1876_fu_212 <= bucket_pointer_3580;
        end else if ((1'b1 == ap_condition_520)) begin
            bucket_pointer_1876_fu_212 <= bucket_pointer_1885_fu_248;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            bucket_pointer_1877_fu_216 <= bucket_pointer_3581;
        end else if ((1'b1 == ap_condition_523)) begin
            bucket_pointer_1877_fu_216 <= bucket_pointer_1885_fu_248;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            bucket_pointer_1878_fu_220 <= bucket_pointer_3582;
        end else if ((1'b1 == ap_condition_526)) begin
            bucket_pointer_1878_fu_220 <= bucket_pointer_1885_fu_248;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            bucket_pointer_1879_fu_224 <= bucket_pointer_3583;
        end else if ((1'b1 == ap_condition_529)) begin
            bucket_pointer_1879_fu_224 <= bucket_pointer_1885_fu_248;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            bucket_pointer_1880_fu_228 <= bucket_pointer_3584;
        end else if ((1'b1 == ap_condition_532)) begin
            bucket_pointer_1880_fu_228 <= bucket_pointer_1885_fu_248;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            bucket_pointer_1881_fu_232 <= bucket_pointer_3585;
        end else if ((1'b1 == ap_condition_535)) begin
            bucket_pointer_1881_fu_232 <= bucket_pointer_1885_fu_248;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            bucket_pointer_1882_fu_236 <= bucket_pointer_3586;
        end else if ((1'b1 == ap_condition_538)) begin
            bucket_pointer_1882_fu_236 <= bucket_pointer_1885_fu_248;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            bucket_pointer_1883_fu_240 <= bucket_pointer_3587;
        end else if ((1'b1 == ap_condition_541)) begin
            bucket_pointer_1883_fu_240 <= bucket_pointer_1885_fu_248;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            bucket_pointer_1884_fu_244 <= bucket_pointer_3588;
        end else if ((1'b1 == ap_condition_544)) begin
            bucket_pointer_1884_fu_244 <= bucket_pointer_1885_fu_248;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            bucket_pointer_1885_fu_248 <= 32'd0;
        end else if (((icmp_ln85_fu_916_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            bucket_pointer_1885_fu_248 <= next_bucket_pointer_fu_1018_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            bucket_pointer_1886_fu_252 <= bucket_pointer_3589;
        end else if ((1'b1 == ap_condition_547)) begin
            bucket_pointer_1886_fu_252 <= bucket_pointer_1885_fu_248;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            bucket_pointer_1887_fu_256 <= bucket_pointer_3590;
        end else if ((1'b1 == ap_condition_550)) begin
            bucket_pointer_1887_fu_256 <= bucket_pointer_1885_fu_248;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            bucket_sizes_2461_fu_264 <= bucket_sizes_8040;
        end else if ((1'b1 == ap_condition_508)) begin
            bucket_sizes_2461_fu_264 <= 32'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            bucket_sizes_2462_fu_268 <= bucket_sizes_8041;
        end else if ((1'b1 == ap_condition_511)) begin
            bucket_sizes_2462_fu_268 <= 32'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            bucket_sizes_2463_fu_272 <= bucket_sizes_8042;
        end else if ((1'b1 == ap_condition_514)) begin
            bucket_sizes_2463_fu_272 <= 32'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            bucket_sizes_2464_fu_276 <= bucket_sizes_8043;
        end else if ((1'b1 == ap_condition_517)) begin
            bucket_sizes_2464_fu_276 <= 32'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            bucket_sizes_2465_fu_280 <= bucket_sizes_8044;
        end else if ((1'b1 == ap_condition_520)) begin
            bucket_sizes_2465_fu_280 <= 32'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            bucket_sizes_2466_fu_284 <= bucket_sizes_8045;
        end else if ((1'b1 == ap_condition_523)) begin
            bucket_sizes_2466_fu_284 <= 32'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            bucket_sizes_2467_fu_288 <= bucket_sizes_8046;
        end else if ((1'b1 == ap_condition_526)) begin
            bucket_sizes_2467_fu_288 <= 32'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            bucket_sizes_2468_fu_292 <= bucket_sizes_8047;
        end else if ((1'b1 == ap_condition_529)) begin
            bucket_sizes_2468_fu_292 <= 32'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            bucket_sizes_2469_fu_296 <= bucket_sizes_8048;
        end else if ((1'b1 == ap_condition_532)) begin
            bucket_sizes_2469_fu_296 <= 32'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            bucket_sizes_2470_fu_300 <= bucket_sizes_8049;
        end else if ((1'b1 == ap_condition_535)) begin
            bucket_sizes_2470_fu_300 <= 32'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            bucket_sizes_2471_fu_304 <= bucket_sizes_8050;
        end else if ((1'b1 == ap_condition_538)) begin
            bucket_sizes_2471_fu_304 <= 32'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            bucket_sizes_2472_fu_308 <= bucket_sizes_8051;
        end else if ((1'b1 == ap_condition_541)) begin
            bucket_sizes_2472_fu_308 <= 32'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            bucket_sizes_2473_fu_312 <= bucket_sizes_8052;
        end else if ((1'b1 == ap_condition_544)) begin
            bucket_sizes_2473_fu_312 <= 32'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            bucket_sizes_2474_fu_316 <= bucket_sizes_8053;
        end else if ((1'b1 == ap_condition_547)) begin
            bucket_sizes_2474_fu_316 <= 32'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            bucket_sizes_2475_fu_320 <= bucket_sizes_8054;
        end else if ((1'b1 == ap_condition_550)) begin
            bucket_sizes_2475_fu_320 <= 32'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            bucket_sizes_fu_260 <= bucket_sizes_8023;
        end else if ((1'b1 == ap_condition_505)) begin
            bucket_sizes_fu_260 <= 32'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            m_fu_188 <= 5'd0;
        end else if (((icmp_ln85_fu_916_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            m_fu_188 <= add_ln85_fu_922_p2;
        end
    end
end

always @ (*) begin
    if (((icmp_ln85_fu_916_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln85_fu_916_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bucket_pointer_3591_out_ap_vld = 1'b1;
    end else begin
        bucket_pointer_3591_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln85_fu_916_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bucket_pointer_3592_out_ap_vld = 1'b1;
    end else begin
        bucket_pointer_3592_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln85_fu_916_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bucket_pointer_3593_out_ap_vld = 1'b1;
    end else begin
        bucket_pointer_3593_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln85_fu_916_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bucket_pointer_3594_out_ap_vld = 1'b1;
    end else begin
        bucket_pointer_3594_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln85_fu_916_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bucket_pointer_3595_out_ap_vld = 1'b1;
    end else begin
        bucket_pointer_3595_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln85_fu_916_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bucket_pointer_3596_out_ap_vld = 1'b1;
    end else begin
        bucket_pointer_3596_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln85_fu_916_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bucket_pointer_3597_out_ap_vld = 1'b1;
    end else begin
        bucket_pointer_3597_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln85_fu_916_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bucket_pointer_3598_out_ap_vld = 1'b1;
    end else begin
        bucket_pointer_3598_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln85_fu_916_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bucket_pointer_3599_out_ap_vld = 1'b1;
    end else begin
        bucket_pointer_3599_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln85_fu_916_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bucket_pointer_3600_out_ap_vld = 1'b1;
    end else begin
        bucket_pointer_3600_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln85_fu_916_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bucket_pointer_3601_out_ap_vld = 1'b1;
    end else begin
        bucket_pointer_3601_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln85_fu_916_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bucket_pointer_3602_out_ap_vld = 1'b1;
    end else begin
        bucket_pointer_3602_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln85_fu_916_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bucket_pointer_3603_out_ap_vld = 1'b1;
    end else begin
        bucket_pointer_3603_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln85_fu_916_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bucket_pointer_3604_out_ap_vld = 1'b1;
    end else begin
        bucket_pointer_3604_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln85_fu_916_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bucket_pointer_3605_out_ap_vld = 1'b1;
    end else begin
        bucket_pointer_3605_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln85_fu_916_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bucket_pointer_3606_out_ap_vld = 1'b1;
    end else begin
        bucket_pointer_3606_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln85_fu_916_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bucket_sizes_8056_out_ap_vld = 1'b1;
    end else begin
        bucket_sizes_8056_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln85_fu_916_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bucket_sizes_8057_out_ap_vld = 1'b1;
    end else begin
        bucket_sizes_8057_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln85_fu_916_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bucket_sizes_8058_out_ap_vld = 1'b1;
    end else begin
        bucket_sizes_8058_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln85_fu_916_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bucket_sizes_8059_out_ap_vld = 1'b1;
    end else begin
        bucket_sizes_8059_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln85_fu_916_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bucket_sizes_8060_out_ap_vld = 1'b1;
    end else begin
        bucket_sizes_8060_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln85_fu_916_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bucket_sizes_8061_out_ap_vld = 1'b1;
    end else begin
        bucket_sizes_8061_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln85_fu_916_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bucket_sizes_8062_out_ap_vld = 1'b1;
    end else begin
        bucket_sizes_8062_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln85_fu_916_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bucket_sizes_8063_out_ap_vld = 1'b1;
    end else begin
        bucket_sizes_8063_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln85_fu_916_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bucket_sizes_8064_out_ap_vld = 1'b1;
    end else begin
        bucket_sizes_8064_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln85_fu_916_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bucket_sizes_8065_out_ap_vld = 1'b1;
    end else begin
        bucket_sizes_8065_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln85_fu_916_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bucket_sizes_8066_out_ap_vld = 1'b1;
    end else begin
        bucket_sizes_8066_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln85_fu_916_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bucket_sizes_8067_out_ap_vld = 1'b1;
    end else begin
        bucket_sizes_8067_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln85_fu_916_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bucket_sizes_8068_out_ap_vld = 1'b1;
    end else begin
        bucket_sizes_8068_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln85_fu_916_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bucket_sizes_8069_out_ap_vld = 1'b1;
    end else begin
        bucket_sizes_8069_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln85_fu_916_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bucket_sizes_8070_out_ap_vld = 1'b1;
    end else begin
        bucket_sizes_8070_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln85_fu_916_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bucket_sizes_8071_out_ap_vld = 1'b1;
    end else begin
        bucket_sizes_8071_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln85_fu_922_p2 = (m_fu_188 + 5'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_01001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_505 = ((icmp_ln85_fu_916_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (trunc_ln86_fu_976_p1 == 4'd0));
end

always @ (*) begin
    ap_condition_508 = ((icmp_ln85_fu_916_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (trunc_ln86_fu_976_p1 == 4'd1));
end

always @ (*) begin
    ap_condition_511 = ((icmp_ln85_fu_916_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (trunc_ln86_fu_976_p1 == 4'd2));
end

always @ (*) begin
    ap_condition_514 = ((icmp_ln85_fu_916_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (trunc_ln86_fu_976_p1 == 4'd3));
end

always @ (*) begin
    ap_condition_517 = ((icmp_ln85_fu_916_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (trunc_ln86_fu_976_p1 == 4'd4));
end

always @ (*) begin
    ap_condition_520 = ((icmp_ln85_fu_916_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (trunc_ln86_fu_976_p1 == 4'd5));
end

always @ (*) begin
    ap_condition_523 = ((icmp_ln85_fu_916_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (trunc_ln86_fu_976_p1 == 4'd6));
end

always @ (*) begin
    ap_condition_526 = ((icmp_ln85_fu_916_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (trunc_ln86_fu_976_p1 == 4'd7));
end

always @ (*) begin
    ap_condition_529 = ((icmp_ln85_fu_916_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (trunc_ln86_fu_976_p1 == 4'd8));
end

always @ (*) begin
    ap_condition_532 = ((icmp_ln85_fu_916_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (trunc_ln86_fu_976_p1 == 4'd9));
end

always @ (*) begin
    ap_condition_535 = ((icmp_ln85_fu_916_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (trunc_ln86_fu_976_p1 == 4'd10));
end

always @ (*) begin
    ap_condition_538 = ((icmp_ln85_fu_916_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (trunc_ln86_fu_976_p1 == 4'd11));
end

always @ (*) begin
    ap_condition_541 = ((icmp_ln85_fu_916_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (trunc_ln86_fu_976_p1 == 4'd12));
end

always @ (*) begin
    ap_condition_544 = ((icmp_ln85_fu_916_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (trunc_ln86_fu_976_p1 == 4'd13));
end

always @ (*) begin
    ap_condition_547 = ((icmp_ln85_fu_916_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (trunc_ln86_fu_976_p1 == 4'd14));
end

always @ (*) begin
    ap_condition_550 = ((icmp_ln85_fu_916_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (trunc_ln86_fu_976_p1 == 4'd15));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter1_stage0;

assign bucket_pointer_3591_out = bucket_pointer_1871_fu_192;

assign bucket_pointer_3592_out = bucket_pointer_1872_fu_196;

assign bucket_pointer_3593_out = bucket_pointer_1873_fu_200;

assign bucket_pointer_3594_out = bucket_pointer_1874_fu_204;

assign bucket_pointer_3595_out = bucket_pointer_1875_fu_208;

assign bucket_pointer_3596_out = bucket_pointer_1876_fu_212;

assign bucket_pointer_3597_out = bucket_pointer_1877_fu_216;

assign bucket_pointer_3598_out = bucket_pointer_1878_fu_220;

assign bucket_pointer_3599_out = bucket_pointer_1879_fu_224;

assign bucket_pointer_3600_out = bucket_pointer_1880_fu_228;

assign bucket_pointer_3601_out = bucket_pointer_1881_fu_232;

assign bucket_pointer_3602_out = bucket_pointer_1882_fu_236;

assign bucket_pointer_3603_out = bucket_pointer_1883_fu_240;

assign bucket_pointer_3604_out = bucket_pointer_1884_fu_244;

assign bucket_pointer_3605_out = bucket_pointer_1886_fu_252;

assign bucket_pointer_3606_out = bucket_pointer_1887_fu_256;

assign bucket_sizes_8056_out = bucket_sizes_fu_260;

assign bucket_sizes_8057_out = bucket_sizes_2461_fu_264;

assign bucket_sizes_8058_out = bucket_sizes_2462_fu_268;

assign bucket_sizes_8059_out = bucket_sizes_2463_fu_272;

assign bucket_sizes_8060_out = bucket_sizes_2464_fu_276;

assign bucket_sizes_8061_out = bucket_sizes_2465_fu_280;

assign bucket_sizes_8062_out = bucket_sizes_2466_fu_284;

assign bucket_sizes_8063_out = bucket_sizes_2467_fu_288;

assign bucket_sizes_8064_out = bucket_sizes_2468_fu_292;

assign bucket_sizes_8065_out = bucket_sizes_2469_fu_296;

assign bucket_sizes_8066_out = bucket_sizes_2470_fu_300;

assign bucket_sizes_8067_out = bucket_sizes_2471_fu_304;

assign bucket_sizes_8068_out = bucket_sizes_2472_fu_308;

assign bucket_sizes_8069_out = bucket_sizes_2473_fu_312;

assign bucket_sizes_8070_out = bucket_sizes_2474_fu_316;

assign bucket_sizes_8071_out = bucket_sizes_2475_fu_320;

assign icmp_ln85_fu_916_p2 = ((m_fu_188 == 5'd16) ? 1'b1 : 1'b0);

assign next_bucket_pointer_fu_1018_p2 = (tmp_s_fu_980_p18 + bucket_pointer_1885_fu_248);

assign tmp_s_fu_980_p17 = m_fu_188[3:0];

assign trunc_ln86_fu_976_p1 = m_fu_188[3:0];

endmodule //sort_top_64_radix_sort_unified_bucket_pingpong_16_1_Pipeline_bucket_pointer_initialization
