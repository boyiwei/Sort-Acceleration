// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module multi_radix_hex_loser_radix_sort_hex_batch_19_1_Pipeline_bucket_pointer_initialization (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        bucket_sizes_7620,
        bucket_sizes_7619,
        bucket_sizes_7618,
        bucket_sizes_7617,
        bucket_sizes_7616,
        bucket_sizes_7615,
        bucket_sizes_7614,
        bucket_sizes_7613,
        bucket_sizes_7612,
        bucket_sizes_7611,
        bucket_sizes_7610,
        bucket_sizes_7609,
        bucket_sizes_7608,
        bucket_sizes_7607,
        bucket_sizes_7606,
        bucket_sizes_7605,
        bucket_pointer_3395,
        bucket_pointer_3394,
        bucket_pointer_3393,
        bucket_pointer_3392,
        bucket_pointer_3391,
        bucket_pointer_3390,
        bucket_pointer_3389,
        bucket_pointer_3388,
        bucket_pointer_3387,
        bucket_pointer_3386,
        bucket_pointer_3385,
        bucket_pointer_3384,
        bucket_pointer_3383,
        bucket_pointer_3382,
        bucket_pointer_3381,
        bucket_pointer,
        bucket_sizes_7636_out,
        bucket_sizes_7636_out_ap_vld,
        bucket_sizes_7635_out,
        bucket_sizes_7635_out_ap_vld,
        bucket_sizes_7634_out,
        bucket_sizes_7634_out_ap_vld,
        bucket_sizes_7633_out,
        bucket_sizes_7633_out_ap_vld,
        bucket_sizes_7632_out,
        bucket_sizes_7632_out_ap_vld,
        bucket_sizes_7631_out,
        bucket_sizes_7631_out_ap_vld,
        bucket_sizes_7630_out,
        bucket_sizes_7630_out_ap_vld,
        bucket_sizes_7629_out,
        bucket_sizes_7629_out_ap_vld,
        bucket_sizes_7628_out,
        bucket_sizes_7628_out_ap_vld,
        bucket_sizes_7627_out,
        bucket_sizes_7627_out_ap_vld,
        bucket_sizes_7626_out,
        bucket_sizes_7626_out_ap_vld,
        bucket_sizes_7625_out,
        bucket_sizes_7625_out_ap_vld,
        bucket_sizes_7624_out,
        bucket_sizes_7624_out_ap_vld,
        bucket_sizes_7623_out,
        bucket_sizes_7623_out_ap_vld,
        bucket_sizes_7622_out,
        bucket_sizes_7622_out_ap_vld,
        bucket_sizes_7621_out,
        bucket_sizes_7621_out_ap_vld,
        bucket_pointer_3411_out,
        bucket_pointer_3411_out_ap_vld,
        bucket_pointer_3410_out,
        bucket_pointer_3410_out_ap_vld,
        bucket_pointer_3409_out,
        bucket_pointer_3409_out_ap_vld,
        bucket_pointer_3408_out,
        bucket_pointer_3408_out_ap_vld,
        bucket_pointer_3407_out,
        bucket_pointer_3407_out_ap_vld,
        bucket_pointer_3406_out,
        bucket_pointer_3406_out_ap_vld,
        bucket_pointer_3405_out,
        bucket_pointer_3405_out_ap_vld,
        bucket_pointer_3404_out,
        bucket_pointer_3404_out_ap_vld,
        bucket_pointer_3403_out,
        bucket_pointer_3403_out_ap_vld,
        bucket_pointer_3402_out,
        bucket_pointer_3402_out_ap_vld,
        bucket_pointer_3401_out,
        bucket_pointer_3401_out_ap_vld,
        bucket_pointer_3400_out,
        bucket_pointer_3400_out_ap_vld,
        bucket_pointer_3399_out,
        bucket_pointer_3399_out_ap_vld,
        bucket_pointer_3398_out,
        bucket_pointer_3398_out_ap_vld,
        bucket_pointer_3397_out,
        bucket_pointer_3397_out_ap_vld,
        bucket_pointer_3396_out,
        bucket_pointer_3396_out_ap_vld
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] bucket_sizes_7620;
input  [31:0] bucket_sizes_7619;
input  [31:0] bucket_sizes_7618;
input  [31:0] bucket_sizes_7617;
input  [31:0] bucket_sizes_7616;
input  [31:0] bucket_sizes_7615;
input  [31:0] bucket_sizes_7614;
input  [31:0] bucket_sizes_7613;
input  [31:0] bucket_sizes_7612;
input  [31:0] bucket_sizes_7611;
input  [31:0] bucket_sizes_7610;
input  [31:0] bucket_sizes_7609;
input  [31:0] bucket_sizes_7608;
input  [31:0] bucket_sizes_7607;
input  [31:0] bucket_sizes_7606;
input  [31:0] bucket_sizes_7605;
input  [31:0] bucket_pointer_3395;
input  [31:0] bucket_pointer_3394;
input  [31:0] bucket_pointer_3393;
input  [31:0] bucket_pointer_3392;
input  [31:0] bucket_pointer_3391;
input  [31:0] bucket_pointer_3390;
input  [31:0] bucket_pointer_3389;
input  [31:0] bucket_pointer_3388;
input  [31:0] bucket_pointer_3387;
input  [31:0] bucket_pointer_3386;
input  [31:0] bucket_pointer_3385;
input  [31:0] bucket_pointer_3384;
input  [31:0] bucket_pointer_3383;
input  [31:0] bucket_pointer_3382;
input  [31:0] bucket_pointer_3381;
input  [31:0] bucket_pointer;
output  [31:0] bucket_sizes_7636_out;
output   bucket_sizes_7636_out_ap_vld;
output  [31:0] bucket_sizes_7635_out;
output   bucket_sizes_7635_out_ap_vld;
output  [31:0] bucket_sizes_7634_out;
output   bucket_sizes_7634_out_ap_vld;
output  [31:0] bucket_sizes_7633_out;
output   bucket_sizes_7633_out_ap_vld;
output  [31:0] bucket_sizes_7632_out;
output   bucket_sizes_7632_out_ap_vld;
output  [31:0] bucket_sizes_7631_out;
output   bucket_sizes_7631_out_ap_vld;
output  [31:0] bucket_sizes_7630_out;
output   bucket_sizes_7630_out_ap_vld;
output  [31:0] bucket_sizes_7629_out;
output   bucket_sizes_7629_out_ap_vld;
output  [31:0] bucket_sizes_7628_out;
output   bucket_sizes_7628_out_ap_vld;
output  [31:0] bucket_sizes_7627_out;
output   bucket_sizes_7627_out_ap_vld;
output  [31:0] bucket_sizes_7626_out;
output   bucket_sizes_7626_out_ap_vld;
output  [31:0] bucket_sizes_7625_out;
output   bucket_sizes_7625_out_ap_vld;
output  [31:0] bucket_sizes_7624_out;
output   bucket_sizes_7624_out_ap_vld;
output  [31:0] bucket_sizes_7623_out;
output   bucket_sizes_7623_out_ap_vld;
output  [31:0] bucket_sizes_7622_out;
output   bucket_sizes_7622_out_ap_vld;
output  [31:0] bucket_sizes_7621_out;
output   bucket_sizes_7621_out_ap_vld;
output  [31:0] bucket_pointer_3411_out;
output   bucket_pointer_3411_out_ap_vld;
output  [31:0] bucket_pointer_3410_out;
output   bucket_pointer_3410_out_ap_vld;
output  [31:0] bucket_pointer_3409_out;
output   bucket_pointer_3409_out_ap_vld;
output  [31:0] bucket_pointer_3408_out;
output   bucket_pointer_3408_out_ap_vld;
output  [31:0] bucket_pointer_3407_out;
output   bucket_pointer_3407_out_ap_vld;
output  [31:0] bucket_pointer_3406_out;
output   bucket_pointer_3406_out_ap_vld;
output  [31:0] bucket_pointer_3405_out;
output   bucket_pointer_3405_out_ap_vld;
output  [31:0] bucket_pointer_3404_out;
output   bucket_pointer_3404_out_ap_vld;
output  [31:0] bucket_pointer_3403_out;
output   bucket_pointer_3403_out_ap_vld;
output  [31:0] bucket_pointer_3402_out;
output   bucket_pointer_3402_out_ap_vld;
output  [31:0] bucket_pointer_3401_out;
output   bucket_pointer_3401_out_ap_vld;
output  [31:0] bucket_pointer_3400_out;
output   bucket_pointer_3400_out_ap_vld;
output  [31:0] bucket_pointer_3399_out;
output   bucket_pointer_3399_out_ap_vld;
output  [31:0] bucket_pointer_3398_out;
output   bucket_pointer_3398_out_ap_vld;
output  [31:0] bucket_pointer_3397_out;
output   bucket_pointer_3397_out_ap_vld;
output  [31:0] bucket_pointer_3396_out;
output   bucket_pointer_3396_out_ap_vld;

reg ap_idle;
reg bucket_sizes_7636_out_ap_vld;
reg bucket_sizes_7635_out_ap_vld;
reg bucket_sizes_7634_out_ap_vld;
reg bucket_sizes_7633_out_ap_vld;
reg bucket_sizes_7632_out_ap_vld;
reg bucket_sizes_7631_out_ap_vld;
reg bucket_sizes_7630_out_ap_vld;
reg bucket_sizes_7629_out_ap_vld;
reg bucket_sizes_7628_out_ap_vld;
reg bucket_sizes_7627_out_ap_vld;
reg bucket_sizes_7626_out_ap_vld;
reg bucket_sizes_7625_out_ap_vld;
reg bucket_sizes_7624_out_ap_vld;
reg bucket_sizes_7623_out_ap_vld;
reg bucket_sizes_7622_out_ap_vld;
reg bucket_sizes_7621_out_ap_vld;
reg bucket_pointer_3411_out_ap_vld;
reg bucket_pointer_3410_out_ap_vld;
reg bucket_pointer_3409_out_ap_vld;
reg bucket_pointer_3408_out_ap_vld;
reg bucket_pointer_3407_out_ap_vld;
reg bucket_pointer_3406_out_ap_vld;
reg bucket_pointer_3405_out_ap_vld;
reg bucket_pointer_3404_out_ap_vld;
reg bucket_pointer_3403_out_ap_vld;
reg bucket_pointer_3402_out_ap_vld;
reg bucket_pointer_3401_out_ap_vld;
reg bucket_pointer_3400_out_ap_vld;
reg bucket_pointer_3399_out_ap_vld;
reg bucket_pointer_3398_out_ap_vld;
reg bucket_pointer_3397_out_ap_vld;
reg bucket_pointer_3396_out_ap_vld;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln33_fu_916_p2;
reg    ap_condition_exit_pp0_iter1_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg   [4:0] m_fu_188;
wire   [4:0] add_ln33_fu_922_p2;
wire    ap_block_pp0_stage0_11001;
wire    ap_loop_init;
wire    ap_block_pp0_stage0;
reg   [31:0] bucket_pointer_1769_fu_192;
wire   [3:0] trunc_ln34_fu_976_p1;
reg   [31:0] bucket_pointer_1770_fu_196;
reg   [31:0] bucket_pointer_1771_fu_200;
reg   [31:0] bucket_pointer_1772_fu_204;
reg   [31:0] bucket_pointer_1773_fu_208;
reg   [31:0] bucket_pointer_1774_fu_212;
reg   [31:0] bucket_pointer_1775_fu_216;
reg   [31:0] bucket_pointer_1776_fu_220;
reg   [31:0] bucket_pointer_1777_fu_224;
reg   [31:0] bucket_pointer_1778_fu_228;
reg   [31:0] bucket_pointer_1779_fu_232;
reg   [31:0] bucket_pointer_1780_fu_236;
reg   [31:0] bucket_pointer_1781_fu_240;
reg   [31:0] bucket_pointer_1782_fu_244;
reg   [31:0] bucket_pointer_1783_fu_248;
wire   [31:0] next_bucket_pointer_fu_1018_p2;
reg   [31:0] bucket_pointer_1784_fu_252;
reg   [31:0] bucket_pointer_1785_fu_256;
reg   [31:0] bucket_sizes_fu_260;
reg   [31:0] bucket_sizes_2326_fu_264;
reg   [31:0] bucket_sizes_2327_fu_268;
reg   [31:0] bucket_sizes_2328_fu_272;
reg   [31:0] bucket_sizes_2329_fu_276;
reg   [31:0] bucket_sizes_2330_fu_280;
reg   [31:0] bucket_sizes_2331_fu_284;
reg   [31:0] bucket_sizes_2332_fu_288;
reg   [31:0] bucket_sizes_2333_fu_292;
reg   [31:0] bucket_sizes_2334_fu_296;
reg   [31:0] bucket_sizes_2335_fu_300;
reg   [31:0] bucket_sizes_2336_fu_304;
reg   [31:0] bucket_sizes_2337_fu_308;
reg   [31:0] bucket_sizes_2338_fu_312;
reg   [31:0] bucket_sizes_2339_fu_316;
reg   [31:0] bucket_sizes_2340_fu_320;
wire    ap_block_pp0_stage0_01001;
wire   [3:0] tmp_i_fu_980_p17;
wire   [31:0] tmp_i_fu_980_p18;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
reg    ap_condition_505;
reg    ap_condition_508;
reg    ap_condition_511;
reg    ap_condition_514;
reg    ap_condition_517;
reg    ap_condition_520;
reg    ap_condition_523;
reg    ap_condition_526;
reg    ap_condition_529;
reg    ap_condition_532;
reg    ap_condition_535;
reg    ap_condition_538;
reg    ap_condition_541;
reg    ap_condition_544;
reg    ap_condition_547;
reg    ap_condition_550;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_done_reg = 1'b0;
end

multi_radix_hex_loser_mux_164_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_164_32_1_1_U3528(
    .din0(bucket_sizes_fu_260),
    .din1(bucket_sizes_2326_fu_264),
    .din2(bucket_sizes_2327_fu_268),
    .din3(bucket_sizes_2328_fu_272),
    .din4(bucket_sizes_2329_fu_276),
    .din5(bucket_sizes_2330_fu_280),
    .din6(bucket_sizes_2331_fu_284),
    .din7(bucket_sizes_2332_fu_288),
    .din8(bucket_sizes_2333_fu_292),
    .din9(bucket_sizes_2334_fu_296),
    .din10(bucket_sizes_2335_fu_300),
    .din11(bucket_sizes_2336_fu_304),
    .din12(bucket_sizes_2337_fu_308),
    .din13(bucket_sizes_2338_fu_312),
    .din14(bucket_sizes_2339_fu_316),
    .din15(bucket_sizes_2340_fu_320),
    .din16(tmp_i_fu_980_p17),
    .dout(tmp_i_fu_980_p18)
);

multi_radix_hex_loser_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter1_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter1_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            bucket_pointer_1769_fu_192 <= bucket_pointer;
        end else if ((1'b1 == ap_condition_505)) begin
            bucket_pointer_1769_fu_192 <= bucket_pointer_1783_fu_248;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            bucket_pointer_1770_fu_196 <= bucket_pointer_3381;
        end else if ((1'b1 == ap_condition_508)) begin
            bucket_pointer_1770_fu_196 <= bucket_pointer_1783_fu_248;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            bucket_pointer_1771_fu_200 <= bucket_pointer_3382;
        end else if ((1'b1 == ap_condition_511)) begin
            bucket_pointer_1771_fu_200 <= bucket_pointer_1783_fu_248;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            bucket_pointer_1772_fu_204 <= bucket_pointer_3383;
        end else if ((1'b1 == ap_condition_514)) begin
            bucket_pointer_1772_fu_204 <= bucket_pointer_1783_fu_248;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            bucket_pointer_1773_fu_208 <= bucket_pointer_3384;
        end else if ((1'b1 == ap_condition_517)) begin
            bucket_pointer_1773_fu_208 <= bucket_pointer_1783_fu_248;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            bucket_pointer_1774_fu_212 <= bucket_pointer_3385;
        end else if ((1'b1 == ap_condition_520)) begin
            bucket_pointer_1774_fu_212 <= bucket_pointer_1783_fu_248;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            bucket_pointer_1775_fu_216 <= bucket_pointer_3386;
        end else if ((1'b1 == ap_condition_523)) begin
            bucket_pointer_1775_fu_216 <= bucket_pointer_1783_fu_248;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            bucket_pointer_1776_fu_220 <= bucket_pointer_3387;
        end else if ((1'b1 == ap_condition_526)) begin
            bucket_pointer_1776_fu_220 <= bucket_pointer_1783_fu_248;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            bucket_pointer_1777_fu_224 <= bucket_pointer_3388;
        end else if ((1'b1 == ap_condition_529)) begin
            bucket_pointer_1777_fu_224 <= bucket_pointer_1783_fu_248;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            bucket_pointer_1778_fu_228 <= bucket_pointer_3389;
        end else if ((1'b1 == ap_condition_532)) begin
            bucket_pointer_1778_fu_228 <= bucket_pointer_1783_fu_248;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            bucket_pointer_1779_fu_232 <= bucket_pointer_3390;
        end else if ((1'b1 == ap_condition_535)) begin
            bucket_pointer_1779_fu_232 <= bucket_pointer_1783_fu_248;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            bucket_pointer_1780_fu_236 <= bucket_pointer_3391;
        end else if ((1'b1 == ap_condition_538)) begin
            bucket_pointer_1780_fu_236 <= bucket_pointer_1783_fu_248;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            bucket_pointer_1781_fu_240 <= bucket_pointer_3392;
        end else if ((1'b1 == ap_condition_541)) begin
            bucket_pointer_1781_fu_240 <= bucket_pointer_1783_fu_248;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            bucket_pointer_1782_fu_244 <= bucket_pointer_3393;
        end else if ((1'b1 == ap_condition_544)) begin
            bucket_pointer_1782_fu_244 <= bucket_pointer_1783_fu_248;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            bucket_pointer_1783_fu_248 <= 32'd0;
        end else if (((icmp_ln33_fu_916_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            bucket_pointer_1783_fu_248 <= next_bucket_pointer_fu_1018_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            bucket_pointer_1784_fu_252 <= bucket_pointer_3394;
        end else if ((1'b1 == ap_condition_547)) begin
            bucket_pointer_1784_fu_252 <= bucket_pointer_1783_fu_248;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            bucket_pointer_1785_fu_256 <= bucket_pointer_3395;
        end else if ((1'b1 == ap_condition_550)) begin
            bucket_pointer_1785_fu_256 <= bucket_pointer_1783_fu_248;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            bucket_sizes_2326_fu_264 <= bucket_sizes_7606;
        end else if ((1'b1 == ap_condition_508)) begin
            bucket_sizes_2326_fu_264 <= 32'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            bucket_sizes_2327_fu_268 <= bucket_sizes_7607;
        end else if ((1'b1 == ap_condition_511)) begin
            bucket_sizes_2327_fu_268 <= 32'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            bucket_sizes_2328_fu_272 <= bucket_sizes_7608;
        end else if ((1'b1 == ap_condition_514)) begin
            bucket_sizes_2328_fu_272 <= 32'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            bucket_sizes_2329_fu_276 <= bucket_sizes_7609;
        end else if ((1'b1 == ap_condition_517)) begin
            bucket_sizes_2329_fu_276 <= 32'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            bucket_sizes_2330_fu_280 <= bucket_sizes_7610;
        end else if ((1'b1 == ap_condition_520)) begin
            bucket_sizes_2330_fu_280 <= 32'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            bucket_sizes_2331_fu_284 <= bucket_sizes_7611;
        end else if ((1'b1 == ap_condition_523)) begin
            bucket_sizes_2331_fu_284 <= 32'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            bucket_sizes_2332_fu_288 <= bucket_sizes_7612;
        end else if ((1'b1 == ap_condition_526)) begin
            bucket_sizes_2332_fu_288 <= 32'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            bucket_sizes_2333_fu_292 <= bucket_sizes_7613;
        end else if ((1'b1 == ap_condition_529)) begin
            bucket_sizes_2333_fu_292 <= 32'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            bucket_sizes_2334_fu_296 <= bucket_sizes_7614;
        end else if ((1'b1 == ap_condition_532)) begin
            bucket_sizes_2334_fu_296 <= 32'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            bucket_sizes_2335_fu_300 <= bucket_sizes_7615;
        end else if ((1'b1 == ap_condition_535)) begin
            bucket_sizes_2335_fu_300 <= 32'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            bucket_sizes_2336_fu_304 <= bucket_sizes_7616;
        end else if ((1'b1 == ap_condition_538)) begin
            bucket_sizes_2336_fu_304 <= 32'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            bucket_sizes_2337_fu_308 <= bucket_sizes_7617;
        end else if ((1'b1 == ap_condition_541)) begin
            bucket_sizes_2337_fu_308 <= 32'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            bucket_sizes_2338_fu_312 <= bucket_sizes_7618;
        end else if ((1'b1 == ap_condition_544)) begin
            bucket_sizes_2338_fu_312 <= 32'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            bucket_sizes_2339_fu_316 <= bucket_sizes_7619;
        end else if ((1'b1 == ap_condition_547)) begin
            bucket_sizes_2339_fu_316 <= 32'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            bucket_sizes_2340_fu_320 <= bucket_sizes_7620;
        end else if ((1'b1 == ap_condition_550)) begin
            bucket_sizes_2340_fu_320 <= 32'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            bucket_sizes_fu_260 <= bucket_sizes_7605;
        end else if ((1'b1 == ap_condition_505)) begin
            bucket_sizes_fu_260 <= 32'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            m_fu_188 <= 5'd0;
        end else if (((icmp_ln33_fu_916_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            m_fu_188 <= add_ln33_fu_922_p2;
        end
    end
end

always @ (*) begin
    if (((icmp_ln33_fu_916_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln33_fu_916_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bucket_pointer_3396_out_ap_vld = 1'b1;
    end else begin
        bucket_pointer_3396_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln33_fu_916_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bucket_pointer_3397_out_ap_vld = 1'b1;
    end else begin
        bucket_pointer_3397_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln33_fu_916_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bucket_pointer_3398_out_ap_vld = 1'b1;
    end else begin
        bucket_pointer_3398_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln33_fu_916_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bucket_pointer_3399_out_ap_vld = 1'b1;
    end else begin
        bucket_pointer_3399_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln33_fu_916_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bucket_pointer_3400_out_ap_vld = 1'b1;
    end else begin
        bucket_pointer_3400_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln33_fu_916_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bucket_pointer_3401_out_ap_vld = 1'b1;
    end else begin
        bucket_pointer_3401_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln33_fu_916_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bucket_pointer_3402_out_ap_vld = 1'b1;
    end else begin
        bucket_pointer_3402_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln33_fu_916_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bucket_pointer_3403_out_ap_vld = 1'b1;
    end else begin
        bucket_pointer_3403_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln33_fu_916_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bucket_pointer_3404_out_ap_vld = 1'b1;
    end else begin
        bucket_pointer_3404_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln33_fu_916_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bucket_pointer_3405_out_ap_vld = 1'b1;
    end else begin
        bucket_pointer_3405_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln33_fu_916_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bucket_pointer_3406_out_ap_vld = 1'b1;
    end else begin
        bucket_pointer_3406_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln33_fu_916_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bucket_pointer_3407_out_ap_vld = 1'b1;
    end else begin
        bucket_pointer_3407_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln33_fu_916_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bucket_pointer_3408_out_ap_vld = 1'b1;
    end else begin
        bucket_pointer_3408_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln33_fu_916_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bucket_pointer_3409_out_ap_vld = 1'b1;
    end else begin
        bucket_pointer_3409_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln33_fu_916_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bucket_pointer_3410_out_ap_vld = 1'b1;
    end else begin
        bucket_pointer_3410_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln33_fu_916_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bucket_pointer_3411_out_ap_vld = 1'b1;
    end else begin
        bucket_pointer_3411_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln33_fu_916_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bucket_sizes_7621_out_ap_vld = 1'b1;
    end else begin
        bucket_sizes_7621_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln33_fu_916_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bucket_sizes_7622_out_ap_vld = 1'b1;
    end else begin
        bucket_sizes_7622_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln33_fu_916_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bucket_sizes_7623_out_ap_vld = 1'b1;
    end else begin
        bucket_sizes_7623_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln33_fu_916_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bucket_sizes_7624_out_ap_vld = 1'b1;
    end else begin
        bucket_sizes_7624_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln33_fu_916_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bucket_sizes_7625_out_ap_vld = 1'b1;
    end else begin
        bucket_sizes_7625_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln33_fu_916_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bucket_sizes_7626_out_ap_vld = 1'b1;
    end else begin
        bucket_sizes_7626_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln33_fu_916_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bucket_sizes_7627_out_ap_vld = 1'b1;
    end else begin
        bucket_sizes_7627_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln33_fu_916_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bucket_sizes_7628_out_ap_vld = 1'b1;
    end else begin
        bucket_sizes_7628_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln33_fu_916_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bucket_sizes_7629_out_ap_vld = 1'b1;
    end else begin
        bucket_sizes_7629_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln33_fu_916_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bucket_sizes_7630_out_ap_vld = 1'b1;
    end else begin
        bucket_sizes_7630_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln33_fu_916_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bucket_sizes_7631_out_ap_vld = 1'b1;
    end else begin
        bucket_sizes_7631_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln33_fu_916_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bucket_sizes_7632_out_ap_vld = 1'b1;
    end else begin
        bucket_sizes_7632_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln33_fu_916_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bucket_sizes_7633_out_ap_vld = 1'b1;
    end else begin
        bucket_sizes_7633_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln33_fu_916_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bucket_sizes_7634_out_ap_vld = 1'b1;
    end else begin
        bucket_sizes_7634_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln33_fu_916_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bucket_sizes_7635_out_ap_vld = 1'b1;
    end else begin
        bucket_sizes_7635_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln33_fu_916_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bucket_sizes_7636_out_ap_vld = 1'b1;
    end else begin
        bucket_sizes_7636_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln33_fu_922_p2 = (m_fu_188 + 5'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_01001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_505 = ((icmp_ln33_fu_916_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (trunc_ln34_fu_976_p1 == 4'd0));
end

always @ (*) begin
    ap_condition_508 = ((icmp_ln33_fu_916_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (trunc_ln34_fu_976_p1 == 4'd1));
end

always @ (*) begin
    ap_condition_511 = ((icmp_ln33_fu_916_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (trunc_ln34_fu_976_p1 == 4'd2));
end

always @ (*) begin
    ap_condition_514 = ((icmp_ln33_fu_916_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (trunc_ln34_fu_976_p1 == 4'd3));
end

always @ (*) begin
    ap_condition_517 = ((icmp_ln33_fu_916_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (trunc_ln34_fu_976_p1 == 4'd4));
end

always @ (*) begin
    ap_condition_520 = ((icmp_ln33_fu_916_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (trunc_ln34_fu_976_p1 == 4'd5));
end

always @ (*) begin
    ap_condition_523 = ((icmp_ln33_fu_916_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (trunc_ln34_fu_976_p1 == 4'd6));
end

always @ (*) begin
    ap_condition_526 = ((icmp_ln33_fu_916_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (trunc_ln34_fu_976_p1 == 4'd7));
end

always @ (*) begin
    ap_condition_529 = ((icmp_ln33_fu_916_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (trunc_ln34_fu_976_p1 == 4'd8));
end

always @ (*) begin
    ap_condition_532 = ((icmp_ln33_fu_916_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (trunc_ln34_fu_976_p1 == 4'd9));
end

always @ (*) begin
    ap_condition_535 = ((icmp_ln33_fu_916_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (trunc_ln34_fu_976_p1 == 4'd10));
end

always @ (*) begin
    ap_condition_538 = ((icmp_ln33_fu_916_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (trunc_ln34_fu_976_p1 == 4'd11));
end

always @ (*) begin
    ap_condition_541 = ((icmp_ln33_fu_916_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (trunc_ln34_fu_976_p1 == 4'd12));
end

always @ (*) begin
    ap_condition_544 = ((icmp_ln33_fu_916_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (trunc_ln34_fu_976_p1 == 4'd13));
end

always @ (*) begin
    ap_condition_547 = ((icmp_ln33_fu_916_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (trunc_ln34_fu_976_p1 == 4'd14));
end

always @ (*) begin
    ap_condition_550 = ((icmp_ln33_fu_916_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (trunc_ln34_fu_976_p1 == 4'd15));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter1_stage0;

assign bucket_pointer_3396_out = bucket_pointer_1769_fu_192;

assign bucket_pointer_3397_out = bucket_pointer_1770_fu_196;

assign bucket_pointer_3398_out = bucket_pointer_1771_fu_200;

assign bucket_pointer_3399_out = bucket_pointer_1772_fu_204;

assign bucket_pointer_3400_out = bucket_pointer_1773_fu_208;

assign bucket_pointer_3401_out = bucket_pointer_1774_fu_212;

assign bucket_pointer_3402_out = bucket_pointer_1775_fu_216;

assign bucket_pointer_3403_out = bucket_pointer_1776_fu_220;

assign bucket_pointer_3404_out = bucket_pointer_1777_fu_224;

assign bucket_pointer_3405_out = bucket_pointer_1778_fu_228;

assign bucket_pointer_3406_out = bucket_pointer_1779_fu_232;

assign bucket_pointer_3407_out = bucket_pointer_1780_fu_236;

assign bucket_pointer_3408_out = bucket_pointer_1781_fu_240;

assign bucket_pointer_3409_out = bucket_pointer_1782_fu_244;

assign bucket_pointer_3410_out = bucket_pointer_1784_fu_252;

assign bucket_pointer_3411_out = bucket_pointer_1785_fu_256;

assign bucket_sizes_7621_out = bucket_sizes_fu_260;

assign bucket_sizes_7622_out = bucket_sizes_2326_fu_264;

assign bucket_sizes_7623_out = bucket_sizes_2327_fu_268;

assign bucket_sizes_7624_out = bucket_sizes_2328_fu_272;

assign bucket_sizes_7625_out = bucket_sizes_2329_fu_276;

assign bucket_sizes_7626_out = bucket_sizes_2330_fu_280;

assign bucket_sizes_7627_out = bucket_sizes_2331_fu_284;

assign bucket_sizes_7628_out = bucket_sizes_2332_fu_288;

assign bucket_sizes_7629_out = bucket_sizes_2333_fu_292;

assign bucket_sizes_7630_out = bucket_sizes_2334_fu_296;

assign bucket_sizes_7631_out = bucket_sizes_2335_fu_300;

assign bucket_sizes_7632_out = bucket_sizes_2336_fu_304;

assign bucket_sizes_7633_out = bucket_sizes_2337_fu_308;

assign bucket_sizes_7634_out = bucket_sizes_2338_fu_312;

assign bucket_sizes_7635_out = bucket_sizes_2339_fu_316;

assign bucket_sizes_7636_out = bucket_sizes_2340_fu_320;

assign icmp_ln33_fu_916_p2 = ((m_fu_188 == 5'd16) ? 1'b1 : 1'b0);

assign next_bucket_pointer_fu_1018_p2 = (tmp_i_fu_980_p18 + bucket_pointer_1783_fu_248);

assign tmp_i_fu_980_p17 = m_fu_188[3:0];

assign trunc_ln34_fu_976_p1 = m_fu_188[3:0];

endmodule //multi_radix_hex_loser_radix_sort_hex_batch_19_1_Pipeline_bucket_pointer_initialization
