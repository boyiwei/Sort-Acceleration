// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="sort_top_sort_top,hls_ip_2022_2,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcu280-fsvh2892-2L-e,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=3.366000,HLS_SYN_LAT=17000257,HLS_SYN_TPT=17000258,HLS_SYN_MEM=64,HLS_SYN_DSP=0,HLS_SYN_FF=1366,HLS_SYN_LUT=3084,HLS_VERSION=2022_2}" *)

module sort_top (
        ap_clk,
        ap_rst,
        input_r_address0,
        input_r_ce0,
        input_r_d0,
        input_r_q0,
        input_r_we0,
        input_r_address1,
        input_r_ce1,
        input_r_d1,
        input_r_q1,
        input_r_we1,
        output_r_address0,
        output_r_ce0,
        output_r_d0,
        output_r_q0,
        output_r_we0,
        output_r_address1,
        output_r_ce1,
        output_r_d1,
        output_r_q1,
        output_r_we1,
        ap_start,
        ap_done,
        ap_ready,
        ap_idle
);


input   ap_clk;
input   ap_rst;
output  [19:0] input_r_address0;
output   input_r_ce0;
output  [31:0] input_r_d0;
input  [31:0] input_r_q0;
output   input_r_we0;
output  [19:0] input_r_address1;
output   input_r_ce1;
output  [31:0] input_r_d1;
input  [31:0] input_r_q1;
output   input_r_we1;
output  [19:0] output_r_address0;
output   output_r_ce0;
output  [31:0] output_r_d0;
input  [31:0] output_r_q0;
output   output_r_we0;
output  [19:0] output_r_address1;
output   output_r_ce1;
output  [31:0] output_r_d1;
input  [31:0] output_r_q1;
output   output_r_we1;
input   ap_start;
output   ap_done;
output   ap_ready;
output   ap_idle;

wire   [31:0] half_sorted0_i_q0;
wire   [31:0] half_sorted0_t_q0;
wire   [31:0] half_sorted1_i_q0;
wire   [31:0] half_sorted1_t_q0;
wire    radix_sort_unified_bucket_1_1_U0_ap_start;
wire    radix_sort_unified_bucket_1_1_U0_ap_done;
wire    radix_sort_unified_bucket_1_1_U0_ap_continue;
wire    radix_sort_unified_bucket_1_1_U0_ap_idle;
wire    radix_sort_unified_bucket_1_1_U0_ap_ready;
wire   [19:0] radix_sort_unified_bucket_1_1_U0_input_r_address0;
wire    radix_sort_unified_bucket_1_1_U0_input_r_ce0;
wire   [18:0] radix_sort_unified_bucket_1_1_U0_sorted_data_address0;
wire    radix_sort_unified_bucket_1_1_U0_sorted_data_ce0;
wire    radix_sort_unified_bucket_1_1_U0_sorted_data_we0;
wire   [31:0] radix_sort_unified_bucket_1_1_U0_sorted_data_d0;
wire    radix_sort_unified_bucket_1_2_U0_ap_start;
wire    radix_sort_unified_bucket_1_2_U0_ap_done;
wire    radix_sort_unified_bucket_1_2_U0_ap_continue;
wire    radix_sort_unified_bucket_1_2_U0_ap_idle;
wire    radix_sort_unified_bucket_1_2_U0_ap_ready;
wire   [19:0] radix_sort_unified_bucket_1_2_U0_input_r_address1;
wire    radix_sort_unified_bucket_1_2_U0_input_r_ce1;
wire   [18:0] radix_sort_unified_bucket_1_2_U0_sorted_data_address0;
wire    radix_sort_unified_bucket_1_2_U0_sorted_data_ce0;
wire    radix_sort_unified_bucket_1_2_U0_sorted_data_we0;
wire   [31:0] radix_sort_unified_bucket_1_2_U0_sorted_data_d0;
wire    merge_sort_1_U0_ap_start;
wire    merge_sort_1_U0_ap_done;
wire    merge_sort_1_U0_ap_continue;
wire    merge_sort_1_U0_ap_idle;
wire    merge_sort_1_U0_ap_ready;
wire   [18:0] merge_sort_1_U0_input1_address0;
wire    merge_sort_1_U0_input1_ce0;
wire   [18:0] merge_sort_1_U0_input2_address0;
wire    merge_sort_1_U0_input2_ce0;
wire   [19:0] merge_sort_1_U0_output_r_address0;
wire    merge_sort_1_U0_output_r_ce0;
wire    merge_sort_1_U0_output_r_we0;
wire   [31:0] merge_sort_1_U0_output_r_d0;
wire    half_sorted0_i_full_n;
wire    half_sorted0_t_empty_n;
wire    half_sorted1_i_full_n;
wire    half_sorted1_t_empty_n;
wire    ap_sync_ready;
reg    ap_sync_reg_radix_sort_unified_bucket_1_1_U0_ap_ready;
wire    ap_sync_radix_sort_unified_bucket_1_1_U0_ap_ready;
reg    ap_sync_reg_radix_sort_unified_bucket_1_2_U0_ap_ready;
wire    ap_sync_radix_sort_unified_bucket_1_2_U0_ap_ready;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_sync_reg_radix_sort_unified_bucket_1_1_U0_ap_ready = 1'b0;
#0 ap_sync_reg_radix_sort_unified_bucket_1_2_U0_ap_ready = 1'b0;
end

sort_top_half_sorted0_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 500000 ),
    .AddressWidth( 19 ))
half_sorted0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .i_address0(radix_sort_unified_bucket_1_1_U0_sorted_data_address0),
    .i_ce0(radix_sort_unified_bucket_1_1_U0_sorted_data_ce0),
    .i_we0(radix_sort_unified_bucket_1_1_U0_sorted_data_we0),
    .i_d0(radix_sort_unified_bucket_1_1_U0_sorted_data_d0),
    .i_q0(half_sorted0_i_q0),
    .t_address0(merge_sort_1_U0_input1_address0),
    .t_ce0(merge_sort_1_U0_input1_ce0),
    .t_we0(1'b0),
    .t_d0(32'd0),
    .t_q0(half_sorted0_t_q0),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(half_sorted0_i_full_n),
    .i_write(radix_sort_unified_bucket_1_1_U0_ap_done),
    .t_empty_n(half_sorted0_t_empty_n),
    .t_read(merge_sort_1_U0_ap_ready)
);

sort_top_half_sorted0_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 500000 ),
    .AddressWidth( 19 ))
half_sorted1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .i_address0(radix_sort_unified_bucket_1_2_U0_sorted_data_address0),
    .i_ce0(radix_sort_unified_bucket_1_2_U0_sorted_data_ce0),
    .i_we0(radix_sort_unified_bucket_1_2_U0_sorted_data_we0),
    .i_d0(radix_sort_unified_bucket_1_2_U0_sorted_data_d0),
    .i_q0(half_sorted1_i_q0),
    .t_address0(merge_sort_1_U0_input2_address0),
    .t_ce0(merge_sort_1_U0_input2_ce0),
    .t_we0(1'b0),
    .t_d0(32'd0),
    .t_q0(half_sorted1_t_q0),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(half_sorted1_i_full_n),
    .i_write(radix_sort_unified_bucket_1_2_U0_ap_done),
    .t_empty_n(half_sorted1_t_empty_n),
    .t_read(merge_sort_1_U0_ap_ready)
);

sort_top_radix_sort_unified_bucket_1_1 radix_sort_unified_bucket_1_1_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(radix_sort_unified_bucket_1_1_U0_ap_start),
    .ap_done(radix_sort_unified_bucket_1_1_U0_ap_done),
    .ap_continue(radix_sort_unified_bucket_1_1_U0_ap_continue),
    .ap_idle(radix_sort_unified_bucket_1_1_U0_ap_idle),
    .ap_ready(radix_sort_unified_bucket_1_1_U0_ap_ready),
    .input_r_address0(radix_sort_unified_bucket_1_1_U0_input_r_address0),
    .input_r_ce0(radix_sort_unified_bucket_1_1_U0_input_r_ce0),
    .input_r_q0(input_r_q0),
    .sorted_data_address0(radix_sort_unified_bucket_1_1_U0_sorted_data_address0),
    .sorted_data_ce0(radix_sort_unified_bucket_1_1_U0_sorted_data_ce0),
    .sorted_data_we0(radix_sort_unified_bucket_1_1_U0_sorted_data_we0),
    .sorted_data_d0(radix_sort_unified_bucket_1_1_U0_sorted_data_d0),
    .sorted_data_q0(half_sorted0_i_q0)
);

sort_top_radix_sort_unified_bucket_1_2 radix_sort_unified_bucket_1_2_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(radix_sort_unified_bucket_1_2_U0_ap_start),
    .ap_done(radix_sort_unified_bucket_1_2_U0_ap_done),
    .ap_continue(radix_sort_unified_bucket_1_2_U0_ap_continue),
    .ap_idle(radix_sort_unified_bucket_1_2_U0_ap_idle),
    .ap_ready(radix_sort_unified_bucket_1_2_U0_ap_ready),
    .input_r_address1(radix_sort_unified_bucket_1_2_U0_input_r_address1),
    .input_r_ce1(radix_sort_unified_bucket_1_2_U0_input_r_ce1),
    .input_r_q1(input_r_q1),
    .sorted_data_address0(radix_sort_unified_bucket_1_2_U0_sorted_data_address0),
    .sorted_data_ce0(radix_sort_unified_bucket_1_2_U0_sorted_data_ce0),
    .sorted_data_we0(radix_sort_unified_bucket_1_2_U0_sorted_data_we0),
    .sorted_data_d0(radix_sort_unified_bucket_1_2_U0_sorted_data_d0),
    .sorted_data_q0(half_sorted1_i_q0)
);

sort_top_merge_sort_1 merge_sort_1_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(merge_sort_1_U0_ap_start),
    .ap_done(merge_sort_1_U0_ap_done),
    .ap_continue(merge_sort_1_U0_ap_continue),
    .ap_idle(merge_sort_1_U0_ap_idle),
    .ap_ready(merge_sort_1_U0_ap_ready),
    .input1_address0(merge_sort_1_U0_input1_address0),
    .input1_ce0(merge_sort_1_U0_input1_ce0),
    .input1_q0(half_sorted0_t_q0),
    .input2_address0(merge_sort_1_U0_input2_address0),
    .input2_ce0(merge_sort_1_U0_input2_ce0),
    .input2_q0(half_sorted1_t_q0),
    .output_r_address0(merge_sort_1_U0_output_r_address0),
    .output_r_ce0(merge_sort_1_U0_output_r_ce0),
    .output_r_we0(merge_sort_1_U0_output_r_we0),
    .output_r_d0(merge_sort_1_U0_output_r_d0)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_radix_sort_unified_bucket_1_1_U0_ap_ready <= 1'b0;
    end else begin
        if (((ap_sync_ready & ap_start) == 1'b1)) begin
            ap_sync_reg_radix_sort_unified_bucket_1_1_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_radix_sort_unified_bucket_1_1_U0_ap_ready <= ap_sync_radix_sort_unified_bucket_1_1_U0_ap_ready;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_radix_sort_unified_bucket_1_2_U0_ap_ready <= 1'b0;
    end else begin
        if (((ap_sync_ready & ap_start) == 1'b1)) begin
            ap_sync_reg_radix_sort_unified_bucket_1_2_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_radix_sort_unified_bucket_1_2_U0_ap_ready <= ap_sync_radix_sort_unified_bucket_1_2_U0_ap_ready;
        end
    end
end

assign ap_done = merge_sort_1_U0_ap_done;

assign ap_idle = (radix_sort_unified_bucket_1_2_U0_ap_idle & radix_sort_unified_bucket_1_1_U0_ap_idle & merge_sort_1_U0_ap_idle & (half_sorted1_t_empty_n ^ 1'b1) & (half_sorted0_t_empty_n ^ 1'b1));

assign ap_ready = ap_sync_ready;

assign ap_sync_radix_sort_unified_bucket_1_1_U0_ap_ready = (radix_sort_unified_bucket_1_1_U0_ap_ready | ap_sync_reg_radix_sort_unified_bucket_1_1_U0_ap_ready);

assign ap_sync_radix_sort_unified_bucket_1_2_U0_ap_ready = (radix_sort_unified_bucket_1_2_U0_ap_ready | ap_sync_reg_radix_sort_unified_bucket_1_2_U0_ap_ready);

assign ap_sync_ready = (ap_sync_radix_sort_unified_bucket_1_2_U0_ap_ready & ap_sync_radix_sort_unified_bucket_1_1_U0_ap_ready);

assign input_r_address0 = radix_sort_unified_bucket_1_1_U0_input_r_address0;

assign input_r_address1 = radix_sort_unified_bucket_1_2_U0_input_r_address1;

assign input_r_ce0 = radix_sort_unified_bucket_1_1_U0_input_r_ce0;

assign input_r_ce1 = radix_sort_unified_bucket_1_2_U0_input_r_ce1;

assign input_r_d0 = 32'd0;

assign input_r_d1 = 32'd0;

assign input_r_we0 = 1'b0;

assign input_r_we1 = 1'b0;

assign merge_sort_1_U0_ap_continue = 1'b1;

assign merge_sort_1_U0_ap_start = (half_sorted1_t_empty_n & half_sorted0_t_empty_n);

assign output_r_address0 = merge_sort_1_U0_output_r_address0;

assign output_r_address1 = 20'd0;

assign output_r_ce0 = merge_sort_1_U0_output_r_ce0;

assign output_r_ce1 = 1'b0;

assign output_r_d0 = merge_sort_1_U0_output_r_d0;

assign output_r_d1 = 32'd0;

assign output_r_we0 = merge_sort_1_U0_output_r_we0;

assign output_r_we1 = 1'b0;

assign radix_sort_unified_bucket_1_1_U0_ap_continue = half_sorted0_i_full_n;

assign radix_sort_unified_bucket_1_1_U0_ap_start = ((ap_sync_reg_radix_sort_unified_bucket_1_1_U0_ap_ready ^ 1'b1) & ap_start);

assign radix_sort_unified_bucket_1_2_U0_ap_continue = half_sorted1_i_full_n;

assign radix_sort_unified_bucket_1_2_U0_ap_start = ((ap_sync_reg_radix_sort_unified_bucket_1_2_U0_ap_ready ^ 1'b1) & ap_start);

endmodule //sort_top
