// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module multi_radix_hex_kmerge_radix_sort_batch_49_1_Pipeline_bucket_pointer_initialization (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        bucket_sizes_2835,
        bucket_sizes_2834,
        bucket_sizes_2833,
        bucket_sizes_2832,
        bucket_sizes_2831,
        bucket_sizes_2830,
        bucket_sizes_2829,
        bucket_sizes_2828,
        bucket_sizes_2827,
        bucket_sizes_2826,
        bucket_sizes_2825,
        bucket_sizes_2824,
        bucket_sizes_2823,
        bucket_sizes_2822,
        bucket_sizes_2821,
        bucket_sizes_2820,
        bucket_pointer_1250,
        bucket_pointer_1249,
        bucket_pointer_1248,
        bucket_pointer_1247,
        bucket_pointer_1246,
        bucket_pointer_1245,
        bucket_pointer_1244,
        bucket_pointer_1243,
        bucket_pointer_1242,
        bucket_pointer_1241,
        bucket_pointer_1240,
        bucket_pointer_1239,
        bucket_pointer_1238,
        bucket_pointer_1237,
        bucket_pointer_1236,
        bucket_pointer,
        bucket_sizes_2851_out,
        bucket_sizes_2851_out_ap_vld,
        bucket_sizes_2850_out,
        bucket_sizes_2850_out_ap_vld,
        bucket_sizes_2849_out,
        bucket_sizes_2849_out_ap_vld,
        bucket_sizes_2848_out,
        bucket_sizes_2848_out_ap_vld,
        bucket_sizes_2847_out,
        bucket_sizes_2847_out_ap_vld,
        bucket_sizes_2846_out,
        bucket_sizes_2846_out_ap_vld,
        bucket_sizes_2845_out,
        bucket_sizes_2845_out_ap_vld,
        bucket_sizes_2844_out,
        bucket_sizes_2844_out_ap_vld,
        bucket_sizes_2843_out,
        bucket_sizes_2843_out_ap_vld,
        bucket_sizes_2842_out,
        bucket_sizes_2842_out_ap_vld,
        bucket_sizes_2841_out,
        bucket_sizes_2841_out_ap_vld,
        bucket_sizes_2840_out,
        bucket_sizes_2840_out_ap_vld,
        bucket_sizes_2839_out,
        bucket_sizes_2839_out_ap_vld,
        bucket_sizes_2838_out,
        bucket_sizes_2838_out_ap_vld,
        bucket_sizes_2837_out,
        bucket_sizes_2837_out_ap_vld,
        bucket_sizes_2836_out,
        bucket_sizes_2836_out_ap_vld,
        bucket_pointer_1266_out,
        bucket_pointer_1266_out_ap_vld,
        bucket_pointer_1265_out,
        bucket_pointer_1265_out_ap_vld,
        bucket_pointer_1264_out,
        bucket_pointer_1264_out_ap_vld,
        bucket_pointer_1263_out,
        bucket_pointer_1263_out_ap_vld,
        bucket_pointer_1262_out,
        bucket_pointer_1262_out_ap_vld,
        bucket_pointer_1261_out,
        bucket_pointer_1261_out_ap_vld,
        bucket_pointer_1260_out,
        bucket_pointer_1260_out_ap_vld,
        bucket_pointer_1259_out,
        bucket_pointer_1259_out_ap_vld,
        bucket_pointer_1258_out,
        bucket_pointer_1258_out_ap_vld,
        bucket_pointer_1257_out,
        bucket_pointer_1257_out_ap_vld,
        bucket_pointer_1256_out,
        bucket_pointer_1256_out_ap_vld,
        bucket_pointer_1255_out,
        bucket_pointer_1255_out_ap_vld,
        bucket_pointer_1254_out,
        bucket_pointer_1254_out_ap_vld,
        bucket_pointer_1253_out,
        bucket_pointer_1253_out_ap_vld,
        bucket_pointer_1252_out,
        bucket_pointer_1252_out_ap_vld,
        bucket_pointer_1251_out,
        bucket_pointer_1251_out_ap_vld
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] bucket_sizes_2835;
input  [31:0] bucket_sizes_2834;
input  [31:0] bucket_sizes_2833;
input  [31:0] bucket_sizes_2832;
input  [31:0] bucket_sizes_2831;
input  [31:0] bucket_sizes_2830;
input  [31:0] bucket_sizes_2829;
input  [31:0] bucket_sizes_2828;
input  [31:0] bucket_sizes_2827;
input  [31:0] bucket_sizes_2826;
input  [31:0] bucket_sizes_2825;
input  [31:0] bucket_sizes_2824;
input  [31:0] bucket_sizes_2823;
input  [31:0] bucket_sizes_2822;
input  [31:0] bucket_sizes_2821;
input  [31:0] bucket_sizes_2820;
input  [31:0] bucket_pointer_1250;
input  [31:0] bucket_pointer_1249;
input  [31:0] bucket_pointer_1248;
input  [31:0] bucket_pointer_1247;
input  [31:0] bucket_pointer_1246;
input  [31:0] bucket_pointer_1245;
input  [31:0] bucket_pointer_1244;
input  [31:0] bucket_pointer_1243;
input  [31:0] bucket_pointer_1242;
input  [31:0] bucket_pointer_1241;
input  [31:0] bucket_pointer_1240;
input  [31:0] bucket_pointer_1239;
input  [31:0] bucket_pointer_1238;
input  [31:0] bucket_pointer_1237;
input  [31:0] bucket_pointer_1236;
input  [31:0] bucket_pointer;
output  [31:0] bucket_sizes_2851_out;
output   bucket_sizes_2851_out_ap_vld;
output  [31:0] bucket_sizes_2850_out;
output   bucket_sizes_2850_out_ap_vld;
output  [31:0] bucket_sizes_2849_out;
output   bucket_sizes_2849_out_ap_vld;
output  [31:0] bucket_sizes_2848_out;
output   bucket_sizes_2848_out_ap_vld;
output  [31:0] bucket_sizes_2847_out;
output   bucket_sizes_2847_out_ap_vld;
output  [31:0] bucket_sizes_2846_out;
output   bucket_sizes_2846_out_ap_vld;
output  [31:0] bucket_sizes_2845_out;
output   bucket_sizes_2845_out_ap_vld;
output  [31:0] bucket_sizes_2844_out;
output   bucket_sizes_2844_out_ap_vld;
output  [31:0] bucket_sizes_2843_out;
output   bucket_sizes_2843_out_ap_vld;
output  [31:0] bucket_sizes_2842_out;
output   bucket_sizes_2842_out_ap_vld;
output  [31:0] bucket_sizes_2841_out;
output   bucket_sizes_2841_out_ap_vld;
output  [31:0] bucket_sizes_2840_out;
output   bucket_sizes_2840_out_ap_vld;
output  [31:0] bucket_sizes_2839_out;
output   bucket_sizes_2839_out_ap_vld;
output  [31:0] bucket_sizes_2838_out;
output   bucket_sizes_2838_out_ap_vld;
output  [31:0] bucket_sizes_2837_out;
output   bucket_sizes_2837_out_ap_vld;
output  [31:0] bucket_sizes_2836_out;
output   bucket_sizes_2836_out_ap_vld;
output  [31:0] bucket_pointer_1266_out;
output   bucket_pointer_1266_out_ap_vld;
output  [31:0] bucket_pointer_1265_out;
output   bucket_pointer_1265_out_ap_vld;
output  [31:0] bucket_pointer_1264_out;
output   bucket_pointer_1264_out_ap_vld;
output  [31:0] bucket_pointer_1263_out;
output   bucket_pointer_1263_out_ap_vld;
output  [31:0] bucket_pointer_1262_out;
output   bucket_pointer_1262_out_ap_vld;
output  [31:0] bucket_pointer_1261_out;
output   bucket_pointer_1261_out_ap_vld;
output  [31:0] bucket_pointer_1260_out;
output   bucket_pointer_1260_out_ap_vld;
output  [31:0] bucket_pointer_1259_out;
output   bucket_pointer_1259_out_ap_vld;
output  [31:0] bucket_pointer_1258_out;
output   bucket_pointer_1258_out_ap_vld;
output  [31:0] bucket_pointer_1257_out;
output   bucket_pointer_1257_out_ap_vld;
output  [31:0] bucket_pointer_1256_out;
output   bucket_pointer_1256_out_ap_vld;
output  [31:0] bucket_pointer_1255_out;
output   bucket_pointer_1255_out_ap_vld;
output  [31:0] bucket_pointer_1254_out;
output   bucket_pointer_1254_out_ap_vld;
output  [31:0] bucket_pointer_1253_out;
output   bucket_pointer_1253_out_ap_vld;
output  [31:0] bucket_pointer_1252_out;
output   bucket_pointer_1252_out_ap_vld;
output  [31:0] bucket_pointer_1251_out;
output   bucket_pointer_1251_out_ap_vld;

reg ap_idle;
reg bucket_sizes_2851_out_ap_vld;
reg bucket_sizes_2850_out_ap_vld;
reg bucket_sizes_2849_out_ap_vld;
reg bucket_sizes_2848_out_ap_vld;
reg bucket_sizes_2847_out_ap_vld;
reg bucket_sizes_2846_out_ap_vld;
reg bucket_sizes_2845_out_ap_vld;
reg bucket_sizes_2844_out_ap_vld;
reg bucket_sizes_2843_out_ap_vld;
reg bucket_sizes_2842_out_ap_vld;
reg bucket_sizes_2841_out_ap_vld;
reg bucket_sizes_2840_out_ap_vld;
reg bucket_sizes_2839_out_ap_vld;
reg bucket_sizes_2838_out_ap_vld;
reg bucket_sizes_2837_out_ap_vld;
reg bucket_sizes_2836_out_ap_vld;
reg bucket_pointer_1266_out_ap_vld;
reg bucket_pointer_1265_out_ap_vld;
reg bucket_pointer_1264_out_ap_vld;
reg bucket_pointer_1263_out_ap_vld;
reg bucket_pointer_1262_out_ap_vld;
reg bucket_pointer_1261_out_ap_vld;
reg bucket_pointer_1260_out_ap_vld;
reg bucket_pointer_1259_out_ap_vld;
reg bucket_pointer_1258_out_ap_vld;
reg bucket_pointer_1257_out_ap_vld;
reg bucket_pointer_1256_out_ap_vld;
reg bucket_pointer_1255_out_ap_vld;
reg bucket_pointer_1254_out_ap_vld;
reg bucket_pointer_1253_out_ap_vld;
reg bucket_pointer_1252_out_ap_vld;
reg bucket_pointer_1251_out_ap_vld;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln33_fu_916_p2;
reg    ap_condition_exit_pp0_iter1_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg   [4:0] m_fu_188;
wire   [4:0] add_ln33_fu_922_p2;
wire    ap_block_pp0_stage0_11001;
wire    ap_loop_init;
wire    ap_block_pp0_stage0;
reg   [31:0] bucket_pointer_647_fu_192;
wire   [3:0] trunc_ln34_fu_976_p1;
reg   [31:0] bucket_pointer_648_fu_196;
reg   [31:0] bucket_pointer_649_fu_200;
reg   [31:0] bucket_pointer_650_fu_204;
reg   [31:0] bucket_pointer_651_fu_208;
reg   [31:0] bucket_pointer_652_fu_212;
reg   [31:0] bucket_pointer_653_fu_216;
reg   [31:0] bucket_pointer_654_fu_220;
reg   [31:0] bucket_pointer_655_fu_224;
reg   [31:0] bucket_pointer_656_fu_228;
reg   [31:0] bucket_pointer_657_fu_232;
reg   [31:0] bucket_pointer_658_fu_236;
reg   [31:0] bucket_pointer_659_fu_240;
reg   [31:0] bucket_pointer_660_fu_244;
reg   [31:0] bucket_pointer_661_fu_248;
wire   [31:0] next_bucket_pointer_fu_1018_p2;
reg   [31:0] bucket_pointer_662_fu_252;
reg   [31:0] bucket_pointer_663_fu_256;
reg   [31:0] bucket_sizes_fu_260;
reg   [31:0] bucket_sizes_841_fu_264;
reg   [31:0] bucket_sizes_842_fu_268;
reg   [31:0] bucket_sizes_843_fu_272;
reg   [31:0] bucket_sizes_844_fu_276;
reg   [31:0] bucket_sizes_845_fu_280;
reg   [31:0] bucket_sizes_846_fu_284;
reg   [31:0] bucket_sizes_847_fu_288;
reg   [31:0] bucket_sizes_848_fu_292;
reg   [31:0] bucket_sizes_849_fu_296;
reg   [31:0] bucket_sizes_850_fu_300;
reg   [31:0] bucket_sizes_851_fu_304;
reg   [31:0] bucket_sizes_852_fu_308;
reg   [31:0] bucket_sizes_853_fu_312;
reg   [31:0] bucket_sizes_854_fu_316;
reg   [31:0] bucket_sizes_855_fu_320;
wire    ap_block_pp0_stage0_01001;
wire   [3:0] tmp_i_fu_980_p17;
wire   [31:0] tmp_i_fu_980_p18;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
reg    ap_condition_505;
reg    ap_condition_508;
reg    ap_condition_511;
reg    ap_condition_514;
reg    ap_condition_517;
reg    ap_condition_520;
reg    ap_condition_523;
reg    ap_condition_526;
reg    ap_condition_529;
reg    ap_condition_532;
reg    ap_condition_535;
reg    ap_condition_538;
reg    ap_condition_541;
reg    ap_condition_544;
reg    ap_condition_547;
reg    ap_condition_550;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_done_reg = 1'b0;
end

multi_radix_hex_kmerge_mux_164_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_164_32_1_1_U9318(
    .din0(bucket_sizes_fu_260),
    .din1(bucket_sizes_841_fu_264),
    .din2(bucket_sizes_842_fu_268),
    .din3(bucket_sizes_843_fu_272),
    .din4(bucket_sizes_844_fu_276),
    .din5(bucket_sizes_845_fu_280),
    .din6(bucket_sizes_846_fu_284),
    .din7(bucket_sizes_847_fu_288),
    .din8(bucket_sizes_848_fu_292),
    .din9(bucket_sizes_849_fu_296),
    .din10(bucket_sizes_850_fu_300),
    .din11(bucket_sizes_851_fu_304),
    .din12(bucket_sizes_852_fu_308),
    .din13(bucket_sizes_853_fu_312),
    .din14(bucket_sizes_854_fu_316),
    .din15(bucket_sizes_855_fu_320),
    .din16(tmp_i_fu_980_p17),
    .dout(tmp_i_fu_980_p18)
);

multi_radix_hex_kmerge_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter1_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter1_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            bucket_pointer_647_fu_192 <= bucket_pointer;
        end else if ((1'b1 == ap_condition_505)) begin
            bucket_pointer_647_fu_192 <= bucket_pointer_661_fu_248;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            bucket_pointer_648_fu_196 <= bucket_pointer_1236;
        end else if ((1'b1 == ap_condition_508)) begin
            bucket_pointer_648_fu_196 <= bucket_pointer_661_fu_248;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            bucket_pointer_649_fu_200 <= bucket_pointer_1237;
        end else if ((1'b1 == ap_condition_511)) begin
            bucket_pointer_649_fu_200 <= bucket_pointer_661_fu_248;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            bucket_pointer_650_fu_204 <= bucket_pointer_1238;
        end else if ((1'b1 == ap_condition_514)) begin
            bucket_pointer_650_fu_204 <= bucket_pointer_661_fu_248;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            bucket_pointer_651_fu_208 <= bucket_pointer_1239;
        end else if ((1'b1 == ap_condition_517)) begin
            bucket_pointer_651_fu_208 <= bucket_pointer_661_fu_248;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            bucket_pointer_652_fu_212 <= bucket_pointer_1240;
        end else if ((1'b1 == ap_condition_520)) begin
            bucket_pointer_652_fu_212 <= bucket_pointer_661_fu_248;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            bucket_pointer_653_fu_216 <= bucket_pointer_1241;
        end else if ((1'b1 == ap_condition_523)) begin
            bucket_pointer_653_fu_216 <= bucket_pointer_661_fu_248;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            bucket_pointer_654_fu_220 <= bucket_pointer_1242;
        end else if ((1'b1 == ap_condition_526)) begin
            bucket_pointer_654_fu_220 <= bucket_pointer_661_fu_248;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            bucket_pointer_655_fu_224 <= bucket_pointer_1243;
        end else if ((1'b1 == ap_condition_529)) begin
            bucket_pointer_655_fu_224 <= bucket_pointer_661_fu_248;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            bucket_pointer_656_fu_228 <= bucket_pointer_1244;
        end else if ((1'b1 == ap_condition_532)) begin
            bucket_pointer_656_fu_228 <= bucket_pointer_661_fu_248;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            bucket_pointer_657_fu_232 <= bucket_pointer_1245;
        end else if ((1'b1 == ap_condition_535)) begin
            bucket_pointer_657_fu_232 <= bucket_pointer_661_fu_248;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            bucket_pointer_658_fu_236 <= bucket_pointer_1246;
        end else if ((1'b1 == ap_condition_538)) begin
            bucket_pointer_658_fu_236 <= bucket_pointer_661_fu_248;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            bucket_pointer_659_fu_240 <= bucket_pointer_1247;
        end else if ((1'b1 == ap_condition_541)) begin
            bucket_pointer_659_fu_240 <= bucket_pointer_661_fu_248;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            bucket_pointer_660_fu_244 <= bucket_pointer_1248;
        end else if ((1'b1 == ap_condition_544)) begin
            bucket_pointer_660_fu_244 <= bucket_pointer_661_fu_248;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            bucket_pointer_661_fu_248 <= 32'd0;
        end else if (((icmp_ln33_fu_916_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            bucket_pointer_661_fu_248 <= next_bucket_pointer_fu_1018_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            bucket_pointer_662_fu_252 <= bucket_pointer_1249;
        end else if ((1'b1 == ap_condition_547)) begin
            bucket_pointer_662_fu_252 <= bucket_pointer_661_fu_248;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            bucket_pointer_663_fu_256 <= bucket_pointer_1250;
        end else if ((1'b1 == ap_condition_550)) begin
            bucket_pointer_663_fu_256 <= bucket_pointer_661_fu_248;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            bucket_sizes_841_fu_264 <= bucket_sizes_2821;
        end else if ((1'b1 == ap_condition_508)) begin
            bucket_sizes_841_fu_264 <= 32'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            bucket_sizes_842_fu_268 <= bucket_sizes_2822;
        end else if ((1'b1 == ap_condition_511)) begin
            bucket_sizes_842_fu_268 <= 32'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            bucket_sizes_843_fu_272 <= bucket_sizes_2823;
        end else if ((1'b1 == ap_condition_514)) begin
            bucket_sizes_843_fu_272 <= 32'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            bucket_sizes_844_fu_276 <= bucket_sizes_2824;
        end else if ((1'b1 == ap_condition_517)) begin
            bucket_sizes_844_fu_276 <= 32'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            bucket_sizes_845_fu_280 <= bucket_sizes_2825;
        end else if ((1'b1 == ap_condition_520)) begin
            bucket_sizes_845_fu_280 <= 32'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            bucket_sizes_846_fu_284 <= bucket_sizes_2826;
        end else if ((1'b1 == ap_condition_523)) begin
            bucket_sizes_846_fu_284 <= 32'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            bucket_sizes_847_fu_288 <= bucket_sizes_2827;
        end else if ((1'b1 == ap_condition_526)) begin
            bucket_sizes_847_fu_288 <= 32'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            bucket_sizes_848_fu_292 <= bucket_sizes_2828;
        end else if ((1'b1 == ap_condition_529)) begin
            bucket_sizes_848_fu_292 <= 32'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            bucket_sizes_849_fu_296 <= bucket_sizes_2829;
        end else if ((1'b1 == ap_condition_532)) begin
            bucket_sizes_849_fu_296 <= 32'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            bucket_sizes_850_fu_300 <= bucket_sizes_2830;
        end else if ((1'b1 == ap_condition_535)) begin
            bucket_sizes_850_fu_300 <= 32'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            bucket_sizes_851_fu_304 <= bucket_sizes_2831;
        end else if ((1'b1 == ap_condition_538)) begin
            bucket_sizes_851_fu_304 <= 32'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            bucket_sizes_852_fu_308 <= bucket_sizes_2832;
        end else if ((1'b1 == ap_condition_541)) begin
            bucket_sizes_852_fu_308 <= 32'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            bucket_sizes_853_fu_312 <= bucket_sizes_2833;
        end else if ((1'b1 == ap_condition_544)) begin
            bucket_sizes_853_fu_312 <= 32'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            bucket_sizes_854_fu_316 <= bucket_sizes_2834;
        end else if ((1'b1 == ap_condition_547)) begin
            bucket_sizes_854_fu_316 <= 32'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            bucket_sizes_855_fu_320 <= bucket_sizes_2835;
        end else if ((1'b1 == ap_condition_550)) begin
            bucket_sizes_855_fu_320 <= 32'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            bucket_sizes_fu_260 <= bucket_sizes_2820;
        end else if ((1'b1 == ap_condition_505)) begin
            bucket_sizes_fu_260 <= 32'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            m_fu_188 <= 5'd0;
        end else if (((icmp_ln33_fu_916_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            m_fu_188 <= add_ln33_fu_922_p2;
        end
    end
end

always @ (*) begin
    if (((icmp_ln33_fu_916_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln33_fu_916_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bucket_pointer_1251_out_ap_vld = 1'b1;
    end else begin
        bucket_pointer_1251_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln33_fu_916_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bucket_pointer_1252_out_ap_vld = 1'b1;
    end else begin
        bucket_pointer_1252_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln33_fu_916_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bucket_pointer_1253_out_ap_vld = 1'b1;
    end else begin
        bucket_pointer_1253_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln33_fu_916_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bucket_pointer_1254_out_ap_vld = 1'b1;
    end else begin
        bucket_pointer_1254_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln33_fu_916_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bucket_pointer_1255_out_ap_vld = 1'b1;
    end else begin
        bucket_pointer_1255_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln33_fu_916_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bucket_pointer_1256_out_ap_vld = 1'b1;
    end else begin
        bucket_pointer_1256_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln33_fu_916_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bucket_pointer_1257_out_ap_vld = 1'b1;
    end else begin
        bucket_pointer_1257_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln33_fu_916_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bucket_pointer_1258_out_ap_vld = 1'b1;
    end else begin
        bucket_pointer_1258_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln33_fu_916_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bucket_pointer_1259_out_ap_vld = 1'b1;
    end else begin
        bucket_pointer_1259_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln33_fu_916_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bucket_pointer_1260_out_ap_vld = 1'b1;
    end else begin
        bucket_pointer_1260_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln33_fu_916_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bucket_pointer_1261_out_ap_vld = 1'b1;
    end else begin
        bucket_pointer_1261_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln33_fu_916_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bucket_pointer_1262_out_ap_vld = 1'b1;
    end else begin
        bucket_pointer_1262_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln33_fu_916_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bucket_pointer_1263_out_ap_vld = 1'b1;
    end else begin
        bucket_pointer_1263_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln33_fu_916_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bucket_pointer_1264_out_ap_vld = 1'b1;
    end else begin
        bucket_pointer_1264_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln33_fu_916_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bucket_pointer_1265_out_ap_vld = 1'b1;
    end else begin
        bucket_pointer_1265_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln33_fu_916_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bucket_pointer_1266_out_ap_vld = 1'b1;
    end else begin
        bucket_pointer_1266_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln33_fu_916_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bucket_sizes_2836_out_ap_vld = 1'b1;
    end else begin
        bucket_sizes_2836_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln33_fu_916_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bucket_sizes_2837_out_ap_vld = 1'b1;
    end else begin
        bucket_sizes_2837_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln33_fu_916_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bucket_sizes_2838_out_ap_vld = 1'b1;
    end else begin
        bucket_sizes_2838_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln33_fu_916_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bucket_sizes_2839_out_ap_vld = 1'b1;
    end else begin
        bucket_sizes_2839_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln33_fu_916_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bucket_sizes_2840_out_ap_vld = 1'b1;
    end else begin
        bucket_sizes_2840_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln33_fu_916_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bucket_sizes_2841_out_ap_vld = 1'b1;
    end else begin
        bucket_sizes_2841_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln33_fu_916_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bucket_sizes_2842_out_ap_vld = 1'b1;
    end else begin
        bucket_sizes_2842_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln33_fu_916_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bucket_sizes_2843_out_ap_vld = 1'b1;
    end else begin
        bucket_sizes_2843_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln33_fu_916_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bucket_sizes_2844_out_ap_vld = 1'b1;
    end else begin
        bucket_sizes_2844_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln33_fu_916_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bucket_sizes_2845_out_ap_vld = 1'b1;
    end else begin
        bucket_sizes_2845_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln33_fu_916_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bucket_sizes_2846_out_ap_vld = 1'b1;
    end else begin
        bucket_sizes_2846_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln33_fu_916_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bucket_sizes_2847_out_ap_vld = 1'b1;
    end else begin
        bucket_sizes_2847_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln33_fu_916_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bucket_sizes_2848_out_ap_vld = 1'b1;
    end else begin
        bucket_sizes_2848_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln33_fu_916_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bucket_sizes_2849_out_ap_vld = 1'b1;
    end else begin
        bucket_sizes_2849_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln33_fu_916_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bucket_sizes_2850_out_ap_vld = 1'b1;
    end else begin
        bucket_sizes_2850_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln33_fu_916_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bucket_sizes_2851_out_ap_vld = 1'b1;
    end else begin
        bucket_sizes_2851_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln33_fu_922_p2 = (m_fu_188 + 5'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_01001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_505 = ((icmp_ln33_fu_916_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (trunc_ln34_fu_976_p1 == 4'd0));
end

always @ (*) begin
    ap_condition_508 = ((icmp_ln33_fu_916_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (trunc_ln34_fu_976_p1 == 4'd1));
end

always @ (*) begin
    ap_condition_511 = ((icmp_ln33_fu_916_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (trunc_ln34_fu_976_p1 == 4'd2));
end

always @ (*) begin
    ap_condition_514 = ((icmp_ln33_fu_916_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (trunc_ln34_fu_976_p1 == 4'd3));
end

always @ (*) begin
    ap_condition_517 = ((icmp_ln33_fu_916_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (trunc_ln34_fu_976_p1 == 4'd4));
end

always @ (*) begin
    ap_condition_520 = ((icmp_ln33_fu_916_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (trunc_ln34_fu_976_p1 == 4'd5));
end

always @ (*) begin
    ap_condition_523 = ((icmp_ln33_fu_916_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (trunc_ln34_fu_976_p1 == 4'd6));
end

always @ (*) begin
    ap_condition_526 = ((icmp_ln33_fu_916_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (trunc_ln34_fu_976_p1 == 4'd7));
end

always @ (*) begin
    ap_condition_529 = ((icmp_ln33_fu_916_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (trunc_ln34_fu_976_p1 == 4'd8));
end

always @ (*) begin
    ap_condition_532 = ((icmp_ln33_fu_916_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (trunc_ln34_fu_976_p1 == 4'd9));
end

always @ (*) begin
    ap_condition_535 = ((icmp_ln33_fu_916_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (trunc_ln34_fu_976_p1 == 4'd10));
end

always @ (*) begin
    ap_condition_538 = ((icmp_ln33_fu_916_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (trunc_ln34_fu_976_p1 == 4'd11));
end

always @ (*) begin
    ap_condition_541 = ((icmp_ln33_fu_916_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (trunc_ln34_fu_976_p1 == 4'd12));
end

always @ (*) begin
    ap_condition_544 = ((icmp_ln33_fu_916_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (trunc_ln34_fu_976_p1 == 4'd13));
end

always @ (*) begin
    ap_condition_547 = ((icmp_ln33_fu_916_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (trunc_ln34_fu_976_p1 == 4'd14));
end

always @ (*) begin
    ap_condition_550 = ((icmp_ln33_fu_916_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (trunc_ln34_fu_976_p1 == 4'd15));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter1_stage0;

assign bucket_pointer_1251_out = bucket_pointer_647_fu_192;

assign bucket_pointer_1252_out = bucket_pointer_648_fu_196;

assign bucket_pointer_1253_out = bucket_pointer_649_fu_200;

assign bucket_pointer_1254_out = bucket_pointer_650_fu_204;

assign bucket_pointer_1255_out = bucket_pointer_651_fu_208;

assign bucket_pointer_1256_out = bucket_pointer_652_fu_212;

assign bucket_pointer_1257_out = bucket_pointer_653_fu_216;

assign bucket_pointer_1258_out = bucket_pointer_654_fu_220;

assign bucket_pointer_1259_out = bucket_pointer_655_fu_224;

assign bucket_pointer_1260_out = bucket_pointer_656_fu_228;

assign bucket_pointer_1261_out = bucket_pointer_657_fu_232;

assign bucket_pointer_1262_out = bucket_pointer_658_fu_236;

assign bucket_pointer_1263_out = bucket_pointer_659_fu_240;

assign bucket_pointer_1264_out = bucket_pointer_660_fu_244;

assign bucket_pointer_1265_out = bucket_pointer_662_fu_252;

assign bucket_pointer_1266_out = bucket_pointer_663_fu_256;

assign bucket_sizes_2836_out = bucket_sizes_fu_260;

assign bucket_sizes_2837_out = bucket_sizes_841_fu_264;

assign bucket_sizes_2838_out = bucket_sizes_842_fu_268;

assign bucket_sizes_2839_out = bucket_sizes_843_fu_272;

assign bucket_sizes_2840_out = bucket_sizes_844_fu_276;

assign bucket_sizes_2841_out = bucket_sizes_845_fu_280;

assign bucket_sizes_2842_out = bucket_sizes_846_fu_284;

assign bucket_sizes_2843_out = bucket_sizes_847_fu_288;

assign bucket_sizes_2844_out = bucket_sizes_848_fu_292;

assign bucket_sizes_2845_out = bucket_sizes_849_fu_296;

assign bucket_sizes_2846_out = bucket_sizes_850_fu_300;

assign bucket_sizes_2847_out = bucket_sizes_851_fu_304;

assign bucket_sizes_2848_out = bucket_sizes_852_fu_308;

assign bucket_sizes_2849_out = bucket_sizes_853_fu_312;

assign bucket_sizes_2850_out = bucket_sizes_854_fu_316;

assign bucket_sizes_2851_out = bucket_sizes_855_fu_320;

assign icmp_ln33_fu_916_p2 = ((m_fu_188 == 5'd16) ? 1'b1 : 1'b0);

assign next_bucket_pointer_fu_1018_p2 = (tmp_i_fu_980_p18 + bucket_pointer_661_fu_248);

assign tmp_i_fu_980_p17 = m_fu_188[3:0];

assign trunc_ln34_fu_976_p1 = m_fu_188[3:0];

endmodule //multi_radix_hex_kmerge_radix_sort_batch_49_1_Pipeline_bucket_pointer_initialization
