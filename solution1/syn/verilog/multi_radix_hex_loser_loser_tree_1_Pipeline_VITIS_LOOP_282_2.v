// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module multi_radix_hex_loser_loser_tree_1_Pipeline_VITIS_LOOP_282_2 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        loser_tree_data_63,
        loser_tree_data_62,
        loser_tree_data_61,
        loser_tree_data_60,
        loser_tree_data_59,
        loser_tree_data_58,
        loser_tree_data_57,
        loser_tree_data_56,
        loser_tree_data_55,
        loser_tree_data_54,
        loser_tree_data_53,
        loser_tree_data_52,
        loser_tree_data_51,
        loser_tree_data_50,
        loser_tree_data_49,
        loser_tree_data_48,
        loser_tree_data_47,
        loser_tree_data_46,
        loser_tree_data_45,
        loser_tree_data_44,
        loser_tree_data_43,
        loser_tree_data_42,
        loser_tree_data_41,
        loser_tree_data_40,
        loser_tree_data_39,
        loser_tree_data_38,
        loser_tree_data_37,
        loser_tree_data_36,
        loser_tree_data_35,
        loser_tree_data_34,
        loser_tree_data_33,
        loser_tree_data_32,
        loser_tree_data_31,
        loser_tree_data_30,
        loser_tree_data_29,
        loser_tree_data_28,
        loser_tree_data_27,
        loser_tree_data_26,
        loser_tree_data_25,
        loser_tree_data_24,
        loser_tree_data_23,
        loser_tree_data_22,
        loser_tree_data_21,
        loser_tree_data_20,
        loser_tree_data_19,
        loser_tree_data_18,
        loser_tree_data_17,
        loser_tree_data_16,
        loser_tree_data_15,
        loser_tree_data_14,
        loser_tree_data_13,
        loser_tree_data_12,
        loser_tree_data_11,
        loser_tree_data_10,
        loser_tree_data_9,
        loser_tree_data_8,
        loser_tree_data_7,
        loser_tree_data_6,
        loser_tree_data_5,
        loser_tree_data_4,
        loser_tree_data_3,
        loser_tree_data_2,
        loser_tree_data_1,
        loser_tree_data,
        multi_radix_hex_loser_temp0_0_address0,
        multi_radix_hex_loser_temp0_0_ce0,
        multi_radix_hex_loser_temp0_0_q0,
        multi_radix_hex_loser_temp0_1_address0,
        multi_radix_hex_loser_temp0_1_ce0,
        multi_radix_hex_loser_temp0_1_q0,
        multi_radix_hex_loser_temp0_2_address0,
        multi_radix_hex_loser_temp0_2_ce0,
        multi_radix_hex_loser_temp0_2_q0,
        multi_radix_hex_loser_temp0_3_address0,
        multi_radix_hex_loser_temp0_3_ce0,
        multi_radix_hex_loser_temp0_3_q0,
        multi_radix_hex_loser_temp0_4_address0,
        multi_radix_hex_loser_temp0_4_ce0,
        multi_radix_hex_loser_temp0_4_q0,
        multi_radix_hex_loser_temp0_5_address0,
        multi_radix_hex_loser_temp0_5_ce0,
        multi_radix_hex_loser_temp0_5_q0,
        multi_radix_hex_loser_temp0_6_address0,
        multi_radix_hex_loser_temp0_6_ce0,
        multi_radix_hex_loser_temp0_6_q0,
        multi_radix_hex_loser_temp0_7_address0,
        multi_radix_hex_loser_temp0_7_ce0,
        multi_radix_hex_loser_temp0_7_q0,
        multi_radix_hex_loser_temp0_8_address0,
        multi_radix_hex_loser_temp0_8_ce0,
        multi_radix_hex_loser_temp0_8_q0,
        multi_radix_hex_loser_temp0_9_address0,
        multi_radix_hex_loser_temp0_9_ce0,
        multi_radix_hex_loser_temp0_9_q0,
        multi_radix_hex_loser_temp0_10_address0,
        multi_radix_hex_loser_temp0_10_ce0,
        multi_radix_hex_loser_temp0_10_q0,
        multi_radix_hex_loser_temp0_11_address0,
        multi_radix_hex_loser_temp0_11_ce0,
        multi_radix_hex_loser_temp0_11_q0,
        multi_radix_hex_loser_temp0_12_address0,
        multi_radix_hex_loser_temp0_12_ce0,
        multi_radix_hex_loser_temp0_12_q0,
        multi_radix_hex_loser_temp0_13_address0,
        multi_radix_hex_loser_temp0_13_ce0,
        multi_radix_hex_loser_temp0_13_q0,
        multi_radix_hex_loser_temp0_14_address0,
        multi_radix_hex_loser_temp0_14_ce0,
        multi_radix_hex_loser_temp0_14_q0,
        multi_radix_hex_loser_temp0_15_address0,
        multi_radix_hex_loser_temp0_15_ce0,
        multi_radix_hex_loser_temp0_15_q0,
        multi_radix_hex_loser_temp0_16_address0,
        multi_radix_hex_loser_temp0_16_ce0,
        multi_radix_hex_loser_temp0_16_q0,
        multi_radix_hex_loser_temp0_17_address0,
        multi_radix_hex_loser_temp0_17_ce0,
        multi_radix_hex_loser_temp0_17_q0,
        multi_radix_hex_loser_temp0_18_address0,
        multi_radix_hex_loser_temp0_18_ce0,
        multi_radix_hex_loser_temp0_18_q0,
        multi_radix_hex_loser_temp0_19_address0,
        multi_radix_hex_loser_temp0_19_ce0,
        multi_radix_hex_loser_temp0_19_q0,
        multi_radix_hex_loser_temp0_20_address0,
        multi_radix_hex_loser_temp0_20_ce0,
        multi_radix_hex_loser_temp0_20_q0,
        multi_radix_hex_loser_temp0_21_address0,
        multi_radix_hex_loser_temp0_21_ce0,
        multi_radix_hex_loser_temp0_21_q0,
        multi_radix_hex_loser_temp0_22_address0,
        multi_radix_hex_loser_temp0_22_ce0,
        multi_radix_hex_loser_temp0_22_q0,
        multi_radix_hex_loser_temp0_23_address0,
        multi_radix_hex_loser_temp0_23_ce0,
        multi_radix_hex_loser_temp0_23_q0,
        multi_radix_hex_loser_temp0_24_address0,
        multi_radix_hex_loser_temp0_24_ce0,
        multi_radix_hex_loser_temp0_24_q0,
        multi_radix_hex_loser_temp0_25_address0,
        multi_radix_hex_loser_temp0_25_ce0,
        multi_radix_hex_loser_temp0_25_q0,
        multi_radix_hex_loser_temp0_26_address0,
        multi_radix_hex_loser_temp0_26_ce0,
        multi_radix_hex_loser_temp0_26_q0,
        multi_radix_hex_loser_temp0_27_address0,
        multi_radix_hex_loser_temp0_27_ce0,
        multi_radix_hex_loser_temp0_27_q0,
        multi_radix_hex_loser_temp0_28_address0,
        multi_radix_hex_loser_temp0_28_ce0,
        multi_radix_hex_loser_temp0_28_q0,
        multi_radix_hex_loser_temp0_29_address0,
        multi_radix_hex_loser_temp0_29_ce0,
        multi_radix_hex_loser_temp0_29_q0,
        multi_radix_hex_loser_temp0_30_address0,
        multi_radix_hex_loser_temp0_30_ce0,
        multi_radix_hex_loser_temp0_30_q0,
        multi_radix_hex_loser_temp0_31_address0,
        multi_radix_hex_loser_temp0_31_ce0,
        multi_radix_hex_loser_temp0_31_q0,
        multi_radix_hex_loser_temp0_32_address0,
        multi_radix_hex_loser_temp0_32_ce0,
        multi_radix_hex_loser_temp0_32_q0,
        multi_radix_hex_loser_temp0_33_address0,
        multi_radix_hex_loser_temp0_33_ce0,
        multi_radix_hex_loser_temp0_33_q0,
        multi_radix_hex_loser_temp0_34_address0,
        multi_radix_hex_loser_temp0_34_ce0,
        multi_radix_hex_loser_temp0_34_q0,
        multi_radix_hex_loser_temp0_35_address0,
        multi_radix_hex_loser_temp0_35_ce0,
        multi_radix_hex_loser_temp0_35_q0,
        multi_radix_hex_loser_temp0_36_address0,
        multi_radix_hex_loser_temp0_36_ce0,
        multi_radix_hex_loser_temp0_36_q0,
        multi_radix_hex_loser_temp0_37_address0,
        multi_radix_hex_loser_temp0_37_ce0,
        multi_radix_hex_loser_temp0_37_q0,
        multi_radix_hex_loser_temp0_38_address0,
        multi_radix_hex_loser_temp0_38_ce0,
        multi_radix_hex_loser_temp0_38_q0,
        multi_radix_hex_loser_temp0_39_address0,
        multi_radix_hex_loser_temp0_39_ce0,
        multi_radix_hex_loser_temp0_39_q0,
        multi_radix_hex_loser_temp0_40_address0,
        multi_radix_hex_loser_temp0_40_ce0,
        multi_radix_hex_loser_temp0_40_q0,
        multi_radix_hex_loser_temp0_41_address0,
        multi_radix_hex_loser_temp0_41_ce0,
        multi_radix_hex_loser_temp0_41_q0,
        multi_radix_hex_loser_temp0_42_address0,
        multi_radix_hex_loser_temp0_42_ce0,
        multi_radix_hex_loser_temp0_42_q0,
        multi_radix_hex_loser_temp0_43_address0,
        multi_radix_hex_loser_temp0_43_ce0,
        multi_radix_hex_loser_temp0_43_q0,
        multi_radix_hex_loser_temp0_44_address0,
        multi_radix_hex_loser_temp0_44_ce0,
        multi_radix_hex_loser_temp0_44_q0,
        multi_radix_hex_loser_temp0_45_address0,
        multi_radix_hex_loser_temp0_45_ce0,
        multi_radix_hex_loser_temp0_45_q0,
        multi_radix_hex_loser_temp0_46_address0,
        multi_radix_hex_loser_temp0_46_ce0,
        multi_radix_hex_loser_temp0_46_q0,
        multi_radix_hex_loser_temp0_47_address0,
        multi_radix_hex_loser_temp0_47_ce0,
        multi_radix_hex_loser_temp0_47_q0,
        multi_radix_hex_loser_temp0_48_address0,
        multi_radix_hex_loser_temp0_48_ce0,
        multi_radix_hex_loser_temp0_48_q0,
        multi_radix_hex_loser_temp0_49_address0,
        multi_radix_hex_loser_temp0_49_ce0,
        multi_radix_hex_loser_temp0_49_q0,
        multi_radix_hex_loser_temp0_50_address0,
        multi_radix_hex_loser_temp0_50_ce0,
        multi_radix_hex_loser_temp0_50_q0,
        multi_radix_hex_loser_temp0_51_address0,
        multi_radix_hex_loser_temp0_51_ce0,
        multi_radix_hex_loser_temp0_51_q0,
        multi_radix_hex_loser_temp0_52_address0,
        multi_radix_hex_loser_temp0_52_ce0,
        multi_radix_hex_loser_temp0_52_q0,
        multi_radix_hex_loser_temp0_53_address0,
        multi_radix_hex_loser_temp0_53_ce0,
        multi_radix_hex_loser_temp0_53_q0,
        multi_radix_hex_loser_temp0_54_address0,
        multi_radix_hex_loser_temp0_54_ce0,
        multi_radix_hex_loser_temp0_54_q0,
        multi_radix_hex_loser_temp0_55_address0,
        multi_radix_hex_loser_temp0_55_ce0,
        multi_radix_hex_loser_temp0_55_q0,
        multi_radix_hex_loser_temp0_56_address0,
        multi_radix_hex_loser_temp0_56_ce0,
        multi_radix_hex_loser_temp0_56_q0,
        multi_radix_hex_loser_temp0_57_address0,
        multi_radix_hex_loser_temp0_57_ce0,
        multi_radix_hex_loser_temp0_57_q0,
        multi_radix_hex_loser_temp0_58_address0,
        multi_radix_hex_loser_temp0_58_ce0,
        multi_radix_hex_loser_temp0_58_q0,
        multi_radix_hex_loser_temp0_59_address0,
        multi_radix_hex_loser_temp0_59_ce0,
        multi_radix_hex_loser_temp0_59_q0,
        multi_radix_hex_loser_temp0_60_address0,
        multi_radix_hex_loser_temp0_60_ce0,
        multi_radix_hex_loser_temp0_60_q0,
        multi_radix_hex_loser_temp0_61_address0,
        multi_radix_hex_loser_temp0_61_ce0,
        multi_radix_hex_loser_temp0_61_q0,
        multi_radix_hex_loser_temp0_62_address0,
        multi_radix_hex_loser_temp0_62_ce0,
        multi_radix_hex_loser_temp0_62_q0,
        multi_radix_hex_loser_temp0_63_address0,
        multi_radix_hex_loser_temp0_63_ce0,
        multi_radix_hex_loser_temp0_63_q0,
        output_r_address0,
        output_r_ce0,
        output_r_we0,
        output_r_d0,
        current_indices_address0,
        current_indices_ce0,
        current_indices_we0,
        current_indices_d0,
        current_indices_q0
);

parameter    ap_ST_fsm_pp0_stage0 = 3'd1;
parameter    ap_ST_fsm_pp0_stage1 = 3'd2;
parameter    ap_ST_fsm_pp0_stage2 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] loser_tree_data_63;
input  [31:0] loser_tree_data_62;
input  [31:0] loser_tree_data_61;
input  [31:0] loser_tree_data_60;
input  [31:0] loser_tree_data_59;
input  [31:0] loser_tree_data_58;
input  [31:0] loser_tree_data_57;
input  [31:0] loser_tree_data_56;
input  [31:0] loser_tree_data_55;
input  [31:0] loser_tree_data_54;
input  [31:0] loser_tree_data_53;
input  [31:0] loser_tree_data_52;
input  [31:0] loser_tree_data_51;
input  [31:0] loser_tree_data_50;
input  [31:0] loser_tree_data_49;
input  [31:0] loser_tree_data_48;
input  [31:0] loser_tree_data_47;
input  [31:0] loser_tree_data_46;
input  [31:0] loser_tree_data_45;
input  [31:0] loser_tree_data_44;
input  [31:0] loser_tree_data_43;
input  [31:0] loser_tree_data_42;
input  [31:0] loser_tree_data_41;
input  [31:0] loser_tree_data_40;
input  [31:0] loser_tree_data_39;
input  [31:0] loser_tree_data_38;
input  [31:0] loser_tree_data_37;
input  [31:0] loser_tree_data_36;
input  [31:0] loser_tree_data_35;
input  [31:0] loser_tree_data_34;
input  [31:0] loser_tree_data_33;
input  [31:0] loser_tree_data_32;
input  [31:0] loser_tree_data_31;
input  [31:0] loser_tree_data_30;
input  [31:0] loser_tree_data_29;
input  [31:0] loser_tree_data_28;
input  [31:0] loser_tree_data_27;
input  [31:0] loser_tree_data_26;
input  [31:0] loser_tree_data_25;
input  [31:0] loser_tree_data_24;
input  [31:0] loser_tree_data_23;
input  [31:0] loser_tree_data_22;
input  [31:0] loser_tree_data_21;
input  [31:0] loser_tree_data_20;
input  [31:0] loser_tree_data_19;
input  [31:0] loser_tree_data_18;
input  [31:0] loser_tree_data_17;
input  [31:0] loser_tree_data_16;
input  [31:0] loser_tree_data_15;
input  [31:0] loser_tree_data_14;
input  [31:0] loser_tree_data_13;
input  [31:0] loser_tree_data_12;
input  [31:0] loser_tree_data_11;
input  [31:0] loser_tree_data_10;
input  [31:0] loser_tree_data_9;
input  [31:0] loser_tree_data_8;
input  [31:0] loser_tree_data_7;
input  [31:0] loser_tree_data_6;
input  [31:0] loser_tree_data_5;
input  [31:0] loser_tree_data_4;
input  [31:0] loser_tree_data_3;
input  [31:0] loser_tree_data_2;
input  [31:0] loser_tree_data_1;
input  [31:0] loser_tree_data;
output  [13:0] multi_radix_hex_loser_temp0_0_address0;
output   multi_radix_hex_loser_temp0_0_ce0;
input  [31:0] multi_radix_hex_loser_temp0_0_q0;
output  [13:0] multi_radix_hex_loser_temp0_1_address0;
output   multi_radix_hex_loser_temp0_1_ce0;
input  [31:0] multi_radix_hex_loser_temp0_1_q0;
output  [13:0] multi_radix_hex_loser_temp0_2_address0;
output   multi_radix_hex_loser_temp0_2_ce0;
input  [31:0] multi_radix_hex_loser_temp0_2_q0;
output  [13:0] multi_radix_hex_loser_temp0_3_address0;
output   multi_radix_hex_loser_temp0_3_ce0;
input  [31:0] multi_radix_hex_loser_temp0_3_q0;
output  [13:0] multi_radix_hex_loser_temp0_4_address0;
output   multi_radix_hex_loser_temp0_4_ce0;
input  [31:0] multi_radix_hex_loser_temp0_4_q0;
output  [13:0] multi_radix_hex_loser_temp0_5_address0;
output   multi_radix_hex_loser_temp0_5_ce0;
input  [31:0] multi_radix_hex_loser_temp0_5_q0;
output  [13:0] multi_radix_hex_loser_temp0_6_address0;
output   multi_radix_hex_loser_temp0_6_ce0;
input  [31:0] multi_radix_hex_loser_temp0_6_q0;
output  [13:0] multi_radix_hex_loser_temp0_7_address0;
output   multi_radix_hex_loser_temp0_7_ce0;
input  [31:0] multi_radix_hex_loser_temp0_7_q0;
output  [13:0] multi_radix_hex_loser_temp0_8_address0;
output   multi_radix_hex_loser_temp0_8_ce0;
input  [31:0] multi_radix_hex_loser_temp0_8_q0;
output  [13:0] multi_radix_hex_loser_temp0_9_address0;
output   multi_radix_hex_loser_temp0_9_ce0;
input  [31:0] multi_radix_hex_loser_temp0_9_q0;
output  [13:0] multi_radix_hex_loser_temp0_10_address0;
output   multi_radix_hex_loser_temp0_10_ce0;
input  [31:0] multi_radix_hex_loser_temp0_10_q0;
output  [13:0] multi_radix_hex_loser_temp0_11_address0;
output   multi_radix_hex_loser_temp0_11_ce0;
input  [31:0] multi_radix_hex_loser_temp0_11_q0;
output  [13:0] multi_radix_hex_loser_temp0_12_address0;
output   multi_radix_hex_loser_temp0_12_ce0;
input  [31:0] multi_radix_hex_loser_temp0_12_q0;
output  [13:0] multi_radix_hex_loser_temp0_13_address0;
output   multi_radix_hex_loser_temp0_13_ce0;
input  [31:0] multi_radix_hex_loser_temp0_13_q0;
output  [13:0] multi_radix_hex_loser_temp0_14_address0;
output   multi_radix_hex_loser_temp0_14_ce0;
input  [31:0] multi_radix_hex_loser_temp0_14_q0;
output  [13:0] multi_radix_hex_loser_temp0_15_address0;
output   multi_radix_hex_loser_temp0_15_ce0;
input  [31:0] multi_radix_hex_loser_temp0_15_q0;
output  [13:0] multi_radix_hex_loser_temp0_16_address0;
output   multi_radix_hex_loser_temp0_16_ce0;
input  [31:0] multi_radix_hex_loser_temp0_16_q0;
output  [13:0] multi_radix_hex_loser_temp0_17_address0;
output   multi_radix_hex_loser_temp0_17_ce0;
input  [31:0] multi_radix_hex_loser_temp0_17_q0;
output  [13:0] multi_radix_hex_loser_temp0_18_address0;
output   multi_radix_hex_loser_temp0_18_ce0;
input  [31:0] multi_radix_hex_loser_temp0_18_q0;
output  [13:0] multi_radix_hex_loser_temp0_19_address0;
output   multi_radix_hex_loser_temp0_19_ce0;
input  [31:0] multi_radix_hex_loser_temp0_19_q0;
output  [13:0] multi_radix_hex_loser_temp0_20_address0;
output   multi_radix_hex_loser_temp0_20_ce0;
input  [31:0] multi_radix_hex_loser_temp0_20_q0;
output  [13:0] multi_radix_hex_loser_temp0_21_address0;
output   multi_radix_hex_loser_temp0_21_ce0;
input  [31:0] multi_radix_hex_loser_temp0_21_q0;
output  [13:0] multi_radix_hex_loser_temp0_22_address0;
output   multi_radix_hex_loser_temp0_22_ce0;
input  [31:0] multi_radix_hex_loser_temp0_22_q0;
output  [13:0] multi_radix_hex_loser_temp0_23_address0;
output   multi_radix_hex_loser_temp0_23_ce0;
input  [31:0] multi_radix_hex_loser_temp0_23_q0;
output  [13:0] multi_radix_hex_loser_temp0_24_address0;
output   multi_radix_hex_loser_temp0_24_ce0;
input  [31:0] multi_radix_hex_loser_temp0_24_q0;
output  [13:0] multi_radix_hex_loser_temp0_25_address0;
output   multi_radix_hex_loser_temp0_25_ce0;
input  [31:0] multi_radix_hex_loser_temp0_25_q0;
output  [13:0] multi_radix_hex_loser_temp0_26_address0;
output   multi_radix_hex_loser_temp0_26_ce0;
input  [31:0] multi_radix_hex_loser_temp0_26_q0;
output  [13:0] multi_radix_hex_loser_temp0_27_address0;
output   multi_radix_hex_loser_temp0_27_ce0;
input  [31:0] multi_radix_hex_loser_temp0_27_q0;
output  [13:0] multi_radix_hex_loser_temp0_28_address0;
output   multi_radix_hex_loser_temp0_28_ce0;
input  [31:0] multi_radix_hex_loser_temp0_28_q0;
output  [13:0] multi_radix_hex_loser_temp0_29_address0;
output   multi_radix_hex_loser_temp0_29_ce0;
input  [31:0] multi_radix_hex_loser_temp0_29_q0;
output  [13:0] multi_radix_hex_loser_temp0_30_address0;
output   multi_radix_hex_loser_temp0_30_ce0;
input  [31:0] multi_radix_hex_loser_temp0_30_q0;
output  [13:0] multi_radix_hex_loser_temp0_31_address0;
output   multi_radix_hex_loser_temp0_31_ce0;
input  [31:0] multi_radix_hex_loser_temp0_31_q0;
output  [13:0] multi_radix_hex_loser_temp0_32_address0;
output   multi_radix_hex_loser_temp0_32_ce0;
input  [31:0] multi_radix_hex_loser_temp0_32_q0;
output  [13:0] multi_radix_hex_loser_temp0_33_address0;
output   multi_radix_hex_loser_temp0_33_ce0;
input  [31:0] multi_radix_hex_loser_temp0_33_q0;
output  [13:0] multi_radix_hex_loser_temp0_34_address0;
output   multi_radix_hex_loser_temp0_34_ce0;
input  [31:0] multi_radix_hex_loser_temp0_34_q0;
output  [13:0] multi_radix_hex_loser_temp0_35_address0;
output   multi_radix_hex_loser_temp0_35_ce0;
input  [31:0] multi_radix_hex_loser_temp0_35_q0;
output  [13:0] multi_radix_hex_loser_temp0_36_address0;
output   multi_radix_hex_loser_temp0_36_ce0;
input  [31:0] multi_radix_hex_loser_temp0_36_q0;
output  [13:0] multi_radix_hex_loser_temp0_37_address0;
output   multi_radix_hex_loser_temp0_37_ce0;
input  [31:0] multi_radix_hex_loser_temp0_37_q0;
output  [13:0] multi_radix_hex_loser_temp0_38_address0;
output   multi_radix_hex_loser_temp0_38_ce0;
input  [31:0] multi_radix_hex_loser_temp0_38_q0;
output  [13:0] multi_radix_hex_loser_temp0_39_address0;
output   multi_radix_hex_loser_temp0_39_ce0;
input  [31:0] multi_radix_hex_loser_temp0_39_q0;
output  [13:0] multi_radix_hex_loser_temp0_40_address0;
output   multi_radix_hex_loser_temp0_40_ce0;
input  [31:0] multi_radix_hex_loser_temp0_40_q0;
output  [13:0] multi_radix_hex_loser_temp0_41_address0;
output   multi_radix_hex_loser_temp0_41_ce0;
input  [31:0] multi_radix_hex_loser_temp0_41_q0;
output  [13:0] multi_radix_hex_loser_temp0_42_address0;
output   multi_radix_hex_loser_temp0_42_ce0;
input  [31:0] multi_radix_hex_loser_temp0_42_q0;
output  [13:0] multi_radix_hex_loser_temp0_43_address0;
output   multi_radix_hex_loser_temp0_43_ce0;
input  [31:0] multi_radix_hex_loser_temp0_43_q0;
output  [13:0] multi_radix_hex_loser_temp0_44_address0;
output   multi_radix_hex_loser_temp0_44_ce0;
input  [31:0] multi_radix_hex_loser_temp0_44_q0;
output  [13:0] multi_radix_hex_loser_temp0_45_address0;
output   multi_radix_hex_loser_temp0_45_ce0;
input  [31:0] multi_radix_hex_loser_temp0_45_q0;
output  [13:0] multi_radix_hex_loser_temp0_46_address0;
output   multi_radix_hex_loser_temp0_46_ce0;
input  [31:0] multi_radix_hex_loser_temp0_46_q0;
output  [13:0] multi_radix_hex_loser_temp0_47_address0;
output   multi_radix_hex_loser_temp0_47_ce0;
input  [31:0] multi_radix_hex_loser_temp0_47_q0;
output  [13:0] multi_radix_hex_loser_temp0_48_address0;
output   multi_radix_hex_loser_temp0_48_ce0;
input  [31:0] multi_radix_hex_loser_temp0_48_q0;
output  [13:0] multi_radix_hex_loser_temp0_49_address0;
output   multi_radix_hex_loser_temp0_49_ce0;
input  [31:0] multi_radix_hex_loser_temp0_49_q0;
output  [13:0] multi_radix_hex_loser_temp0_50_address0;
output   multi_radix_hex_loser_temp0_50_ce0;
input  [31:0] multi_radix_hex_loser_temp0_50_q0;
output  [13:0] multi_radix_hex_loser_temp0_51_address0;
output   multi_radix_hex_loser_temp0_51_ce0;
input  [31:0] multi_radix_hex_loser_temp0_51_q0;
output  [13:0] multi_radix_hex_loser_temp0_52_address0;
output   multi_radix_hex_loser_temp0_52_ce0;
input  [31:0] multi_radix_hex_loser_temp0_52_q0;
output  [13:0] multi_radix_hex_loser_temp0_53_address0;
output   multi_radix_hex_loser_temp0_53_ce0;
input  [31:0] multi_radix_hex_loser_temp0_53_q0;
output  [13:0] multi_radix_hex_loser_temp0_54_address0;
output   multi_radix_hex_loser_temp0_54_ce0;
input  [31:0] multi_radix_hex_loser_temp0_54_q0;
output  [13:0] multi_radix_hex_loser_temp0_55_address0;
output   multi_radix_hex_loser_temp0_55_ce0;
input  [31:0] multi_radix_hex_loser_temp0_55_q0;
output  [13:0] multi_radix_hex_loser_temp0_56_address0;
output   multi_radix_hex_loser_temp0_56_ce0;
input  [31:0] multi_radix_hex_loser_temp0_56_q0;
output  [13:0] multi_radix_hex_loser_temp0_57_address0;
output   multi_radix_hex_loser_temp0_57_ce0;
input  [31:0] multi_radix_hex_loser_temp0_57_q0;
output  [13:0] multi_radix_hex_loser_temp0_58_address0;
output   multi_radix_hex_loser_temp0_58_ce0;
input  [31:0] multi_radix_hex_loser_temp0_58_q0;
output  [13:0] multi_radix_hex_loser_temp0_59_address0;
output   multi_radix_hex_loser_temp0_59_ce0;
input  [31:0] multi_radix_hex_loser_temp0_59_q0;
output  [13:0] multi_radix_hex_loser_temp0_60_address0;
output   multi_radix_hex_loser_temp0_60_ce0;
input  [31:0] multi_radix_hex_loser_temp0_60_q0;
output  [13:0] multi_radix_hex_loser_temp0_61_address0;
output   multi_radix_hex_loser_temp0_61_ce0;
input  [31:0] multi_radix_hex_loser_temp0_61_q0;
output  [13:0] multi_radix_hex_loser_temp0_62_address0;
output   multi_radix_hex_loser_temp0_62_ce0;
input  [31:0] multi_radix_hex_loser_temp0_62_q0;
output  [13:0] multi_radix_hex_loser_temp0_63_address0;
output   multi_radix_hex_loser_temp0_63_ce0;
input  [31:0] multi_radix_hex_loser_temp0_63_q0;
output  [19:0] output_r_address0;
output   output_r_ce0;
output   output_r_we0;
output  [31:0] output_r_d0;
output  [5:0] current_indices_address0;
output   current_indices_ce0;
output   current_indices_we0;
output  [31:0] current_indices_d0;
input  [31:0] current_indices_q0;

reg ap_idle;
reg multi_radix_hex_loser_temp0_0_ce0;
reg multi_radix_hex_loser_temp0_1_ce0;
reg multi_radix_hex_loser_temp0_2_ce0;
reg multi_radix_hex_loser_temp0_3_ce0;
reg multi_radix_hex_loser_temp0_4_ce0;
reg multi_radix_hex_loser_temp0_5_ce0;
reg multi_radix_hex_loser_temp0_6_ce0;
reg multi_radix_hex_loser_temp0_7_ce0;
reg multi_radix_hex_loser_temp0_8_ce0;
reg multi_radix_hex_loser_temp0_9_ce0;
reg multi_radix_hex_loser_temp0_10_ce0;
reg multi_radix_hex_loser_temp0_11_ce0;
reg multi_radix_hex_loser_temp0_12_ce0;
reg multi_radix_hex_loser_temp0_13_ce0;
reg multi_radix_hex_loser_temp0_14_ce0;
reg multi_radix_hex_loser_temp0_15_ce0;
reg multi_radix_hex_loser_temp0_16_ce0;
reg multi_radix_hex_loser_temp0_17_ce0;
reg multi_radix_hex_loser_temp0_18_ce0;
reg multi_radix_hex_loser_temp0_19_ce0;
reg multi_radix_hex_loser_temp0_20_ce0;
reg multi_radix_hex_loser_temp0_21_ce0;
reg multi_radix_hex_loser_temp0_22_ce0;
reg multi_radix_hex_loser_temp0_23_ce0;
reg multi_radix_hex_loser_temp0_24_ce0;
reg multi_radix_hex_loser_temp0_25_ce0;
reg multi_radix_hex_loser_temp0_26_ce0;
reg multi_radix_hex_loser_temp0_27_ce0;
reg multi_radix_hex_loser_temp0_28_ce0;
reg multi_radix_hex_loser_temp0_29_ce0;
reg multi_radix_hex_loser_temp0_30_ce0;
reg multi_radix_hex_loser_temp0_31_ce0;
reg multi_radix_hex_loser_temp0_32_ce0;
reg multi_radix_hex_loser_temp0_33_ce0;
reg multi_radix_hex_loser_temp0_34_ce0;
reg multi_radix_hex_loser_temp0_35_ce0;
reg multi_radix_hex_loser_temp0_36_ce0;
reg multi_radix_hex_loser_temp0_37_ce0;
reg multi_radix_hex_loser_temp0_38_ce0;
reg multi_radix_hex_loser_temp0_39_ce0;
reg multi_radix_hex_loser_temp0_40_ce0;
reg multi_radix_hex_loser_temp0_41_ce0;
reg multi_radix_hex_loser_temp0_42_ce0;
reg multi_radix_hex_loser_temp0_43_ce0;
reg multi_radix_hex_loser_temp0_44_ce0;
reg multi_radix_hex_loser_temp0_45_ce0;
reg multi_radix_hex_loser_temp0_46_ce0;
reg multi_radix_hex_loser_temp0_47_ce0;
reg multi_radix_hex_loser_temp0_48_ce0;
reg multi_radix_hex_loser_temp0_49_ce0;
reg multi_radix_hex_loser_temp0_50_ce0;
reg multi_radix_hex_loser_temp0_51_ce0;
reg multi_radix_hex_loser_temp0_52_ce0;
reg multi_radix_hex_loser_temp0_53_ce0;
reg multi_radix_hex_loser_temp0_54_ce0;
reg multi_radix_hex_loser_temp0_55_ce0;
reg multi_radix_hex_loser_temp0_56_ce0;
reg multi_radix_hex_loser_temp0_57_ce0;
reg multi_radix_hex_loser_temp0_58_ce0;
reg multi_radix_hex_loser_temp0_59_ce0;
reg multi_radix_hex_loser_temp0_60_ce0;
reg multi_radix_hex_loser_temp0_61_ce0;
reg multi_radix_hex_loser_temp0_62_ce0;
reg multi_radix_hex_loser_temp0_63_ce0;
reg output_r_ce0;
reg output_r_we0;
reg[5:0] current_indices_address0;
reg current_indices_ce0;
reg current_indices_we0;

(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state2_pp0_stage1_iter0;
wire    ap_block_state5_pp0_stage1_iter1;
wire    ap_block_pp0_stage1_subdone;
wire   [0:0] icmp_ln282_fu_2351_p2;
reg    ap_condition_exit_pp0_iter0_stage1;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state3_pp0_stage2_iter0;
wire    ap_block_pp0_stage2_subdone;
wire   [5:0] loser_tree_index_address0;
reg    loser_tree_index_ce0;
wire   [5:0] loser_tree_index_q0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state4_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
reg   [19:0] i_129_reg_5572;
wire    ap_block_pp0_stage1_11001;
reg   [0:0] icmp_ln282_reg_5577;
reg   [31:0] winner_value_125_load_reg_5581;
wire   [31:0] winner_value_188_fu_4095_p3;
reg   [31:0] winner_value_188_reg_5586;
wire   [0:0] icmp_ln290_61_fu_4103_p2;
reg   [0:0] icmp_ln290_61_reg_5591;
wire   [5:0] winner_index_31_fu_4123_p3;
reg   [5:0] winner_index_31_reg_5596;
reg   [5:0] input_index_reg_5605;
wire    ap_block_pp0_stage2_11001;
reg   [5:0] current_indices_addr_reg_5610;
wire   [0:0] addr_cmp_fu_4159_p2;
reg   [0:0] addr_cmp_reg_5615;
wire   [0:0] icmp_ln301_fu_4192_p2;
reg   [0:0] icmp_ln301_reg_5620;
reg    ap_enable_reg_pp0_iter0_reg;
wire   [63:0] zext_ln298_fu_4131_p1;
wire    ap_block_pp0_stage1;
wire   [63:0] zext_ln282_fu_4141_p1;
wire    ap_block_pp0_stage2;
wire   [63:0] zext_ln299_fu_4151_p1;
wire   [63:0] zext_ln302_fu_4518_p1;
wire    ap_block_pp0_stage0;
reg   [63:0] reuse_addr_reg_fu_490;
wire    ap_loop_init;
reg   [31:0] reuse_reg_fu_494;
wire   [31:0] add_ln299_fu_4180_p2;
reg   [19:0] i_fu_498;
wire   [19:0] add_ln282_fu_2357_p2;
reg   [31:0] winner_value_fu_502;
wire   [31:0] loser_tree_data_64_fu_4586_p66;
reg   [31:0] ap_sig_allocacmp_winner_value_load;
reg   [31:0] winner_value_1_fu_506;
reg   [31:0] ap_sig_allocacmp_winner_value_1_load;
reg   [31:0] winner_value_3_fu_510;
reg   [31:0] ap_sig_allocacmp_winner_value_3_load;
reg   [31:0] winner_value_5_fu_514;
reg   [31:0] ap_sig_allocacmp_winner_value_5_load;
reg   [31:0] winner_value_7_fu_518;
reg   [31:0] ap_sig_allocacmp_winner_value_7_load;
reg   [31:0] winner_value_9_fu_522;
reg   [31:0] ap_sig_allocacmp_winner_value_9_load;
reg   [31:0] winner_value_11_fu_526;
reg   [31:0] ap_sig_allocacmp_winner_value_11_load;
reg   [31:0] winner_value_13_fu_530;
reg   [31:0] ap_sig_allocacmp_winner_value_13_load;
reg   [31:0] winner_value_15_fu_534;
reg   [31:0] ap_sig_allocacmp_winner_value_15_load;
reg   [31:0] winner_value_17_fu_538;
reg   [31:0] ap_sig_allocacmp_winner_value_17_load;
reg   [31:0] winner_value_19_fu_542;
reg   [31:0] ap_sig_allocacmp_winner_value_19_load;
reg   [31:0] winner_value_21_fu_546;
reg   [31:0] ap_sig_allocacmp_winner_value_21_load;
reg   [31:0] winner_value_23_fu_550;
reg   [31:0] ap_sig_allocacmp_winner_value_23_load;
reg   [31:0] winner_value_25_fu_554;
reg   [31:0] ap_sig_allocacmp_winner_value_25_load;
reg   [31:0] winner_value_27_fu_558;
reg   [31:0] ap_sig_allocacmp_winner_value_27_load;
reg   [31:0] winner_value_29_fu_562;
reg   [31:0] ap_sig_allocacmp_winner_value_29_load;
reg   [31:0] winner_value_31_fu_566;
reg   [31:0] ap_sig_allocacmp_winner_value_31_load;
reg   [31:0] winner_value_33_fu_570;
reg   [31:0] ap_sig_allocacmp_winner_value_33_load;
reg   [31:0] winner_value_35_fu_574;
reg   [31:0] ap_sig_allocacmp_winner_value_35_load;
reg   [31:0] winner_value_37_fu_578;
reg   [31:0] ap_sig_allocacmp_winner_value_37_load;
reg   [31:0] winner_value_39_fu_582;
reg   [31:0] ap_sig_allocacmp_winner_value_39_load;
reg   [31:0] winner_value_41_fu_586;
reg   [31:0] ap_sig_allocacmp_winner_value_41_load;
reg   [31:0] winner_value_43_fu_590;
reg   [31:0] ap_sig_allocacmp_winner_value_43_load;
reg   [31:0] winner_value_45_fu_594;
reg   [31:0] ap_sig_allocacmp_winner_value_45_load;
reg   [31:0] winner_value_47_fu_598;
reg   [31:0] ap_sig_allocacmp_winner_value_47_load;
reg   [31:0] winner_value_49_fu_602;
reg   [31:0] ap_sig_allocacmp_winner_value_49_load;
reg   [31:0] winner_value_51_fu_606;
reg   [31:0] ap_sig_allocacmp_winner_value_51_load;
reg   [31:0] winner_value_53_fu_610;
reg   [31:0] ap_sig_allocacmp_winner_value_53_load;
reg   [31:0] winner_value_55_fu_614;
reg   [31:0] ap_sig_allocacmp_winner_value_55_load;
reg   [31:0] winner_value_57_fu_618;
reg   [31:0] ap_sig_allocacmp_winner_value_57_load;
reg   [31:0] winner_value_59_fu_622;
reg   [31:0] ap_sig_allocacmp_winner_value_59_load;
reg   [31:0] winner_value_61_fu_626;
reg   [31:0] ap_sig_allocacmp_winner_value_61_load;
reg   [31:0] winner_value_63_fu_630;
reg   [31:0] ap_sig_allocacmp_winner_value_63_load;
reg   [31:0] winner_value_65_fu_634;
reg   [31:0] ap_sig_allocacmp_winner_value_65_load;
reg   [31:0] winner_value_67_fu_638;
reg   [31:0] ap_sig_allocacmp_winner_value_67_load;
reg   [31:0] winner_value_69_fu_642;
reg   [31:0] ap_sig_allocacmp_winner_value_69_load;
reg   [31:0] winner_value_71_fu_646;
reg   [31:0] ap_sig_allocacmp_winner_value_71_load;
reg   [31:0] winner_value_73_fu_650;
reg   [31:0] ap_sig_allocacmp_winner_value_73_load;
reg   [31:0] winner_value_75_fu_654;
reg   [31:0] ap_sig_allocacmp_winner_value_75_load;
reg   [31:0] winner_value_77_fu_658;
reg   [31:0] ap_sig_allocacmp_winner_value_77_load;
reg   [31:0] winner_value_79_fu_662;
reg   [31:0] ap_sig_allocacmp_winner_value_79_load;
reg   [31:0] winner_value_81_fu_666;
reg   [31:0] ap_sig_allocacmp_winner_value_81_load;
reg   [31:0] winner_value_83_fu_670;
reg   [31:0] ap_sig_allocacmp_winner_value_83_load;
reg   [31:0] winner_value_85_fu_674;
reg   [31:0] ap_sig_allocacmp_winner_value_85_load;
reg   [31:0] winner_value_87_fu_678;
reg   [31:0] ap_sig_allocacmp_winner_value_87_load;
reg   [31:0] winner_value_89_fu_682;
reg   [31:0] ap_sig_allocacmp_winner_value_89_load;
reg   [31:0] winner_value_91_fu_686;
reg   [31:0] ap_sig_allocacmp_winner_value_91_load;
reg   [31:0] winner_value_93_fu_690;
reg   [31:0] ap_sig_allocacmp_winner_value_93_load;
reg   [31:0] winner_value_95_fu_694;
reg   [31:0] ap_sig_allocacmp_winner_value_95_load;
reg   [31:0] winner_value_97_fu_698;
reg   [31:0] ap_sig_allocacmp_winner_value_97_load;
reg   [31:0] winner_value_99_fu_702;
reg   [31:0] ap_sig_allocacmp_winner_value_99_load;
reg   [31:0] winner_value_101_fu_706;
reg   [31:0] ap_sig_allocacmp_winner_value_101_load;
reg   [31:0] winner_value_103_fu_710;
reg   [31:0] ap_sig_allocacmp_winner_value_103_load;
reg   [31:0] winner_value_105_fu_714;
reg   [31:0] ap_sig_allocacmp_winner_value_105_load;
reg   [31:0] winner_value_107_fu_718;
reg   [31:0] ap_sig_allocacmp_winner_value_107_load;
reg   [31:0] winner_value_109_fu_722;
reg   [31:0] ap_sig_allocacmp_winner_value_109_load;
reg   [31:0] winner_value_111_fu_726;
reg   [31:0] ap_sig_allocacmp_winner_value_111_load;
reg   [31:0] winner_value_113_fu_730;
reg   [31:0] ap_sig_allocacmp_winner_value_113_load;
reg   [31:0] winner_value_115_fu_734;
reg   [31:0] ap_sig_allocacmp_winner_value_115_load;
reg   [31:0] winner_value_117_fu_738;
reg   [31:0] ap_sig_allocacmp_winner_value_117_load;
reg   [31:0] winner_value_119_fu_742;
reg   [31:0] ap_sig_allocacmp_winner_value_119_load;
reg   [31:0] winner_value_121_fu_746;
reg   [31:0] ap_sig_allocacmp_winner_value_121_load;
reg   [31:0] winner_value_123_fu_750;
reg   [31:0] ap_sig_allocacmp_winner_value_123_load;
reg   [31:0] winner_value_125_fu_754;
reg   [31:0] ap_sig_allocacmp_winner_value_125_load;
wire   [0:0] winner_index_fu_2555_p2;
wire   [31:0] winner_value_127_fu_2565_p3;
wire   [0:0] icmp_ln290_fu_2573_p2;
wire   [31:0] winner_value_128_fu_2579_p3;
wire   [0:0] icmp_ln290_1_fu_2587_p2;
wire   [0:0] or_ln290_fu_2601_p2;
wire   [1:0] select_ln290_fu_2593_p3;
wire   [1:0] zext_ln290_fu_2561_p1;
wire   [1:0] winner_index_1_fu_2607_p3;
wire   [31:0] winner_value_129_fu_2619_p3;
wire   [0:0] icmp_ln290_2_fu_2627_p2;
wire   [31:0] winner_value_130_fu_2633_p3;
wire   [0:0] icmp_ln290_3_fu_2641_p2;
wire   [0:0] or_ln290_1_fu_2655_p2;
wire   [2:0] select_ln290_4_fu_2647_p3;
wire   [2:0] zext_ln290_1_fu_2615_p1;
wire   [31:0] winner_value_131_fu_2669_p3;
wire   [0:0] icmp_ln290_4_fu_2677_p2;
wire   [31:0] winner_value_132_fu_2683_p3;
wire   [0:0] icmp_ln290_5_fu_2691_p2;
wire   [0:0] or_ln290_2_fu_2705_p2;
wire   [2:0] select_ln290_10_fu_2697_p3;
wire   [2:0] winner_index_2_fu_2661_p3;
wire   [2:0] winner_index_3_fu_2711_p3;
wire   [31:0] winner_value_133_fu_2723_p3;
wire   [0:0] icmp_ln290_6_fu_2731_p2;
wire   [31:0] winner_value_134_fu_2737_p3;
wire   [0:0] icmp_ln290_7_fu_2745_p2;
wire   [0:0] or_ln290_3_fu_2759_p2;
wire   [3:0] select_ln290_12_fu_2751_p3;
wire   [3:0] zext_ln290_2_fu_2719_p1;
wire   [31:0] winner_value_135_fu_2773_p3;
wire   [0:0] icmp_ln290_8_fu_2781_p2;
wire   [31:0] winner_value_136_fu_2787_p3;
wire   [0:0] icmp_ln290_9_fu_2795_p2;
wire   [0:0] or_ln290_4_fu_2809_p2;
wire   [3:0] select_ln290_16_fu_2801_p3;
wire   [3:0] winner_index_4_fu_2765_p3;
wire   [31:0] winner_value_137_fu_2823_p3;
wire   [0:0] icmp_ln290_10_fu_2831_p2;
wire   [31:0] winner_value_138_fu_2837_p3;
wire   [0:0] icmp_ln290_11_fu_2845_p2;
wire   [0:0] or_ln290_5_fu_2859_p2;
wire   [3:0] select_ln290_22_fu_2851_p3;
wire   [3:0] winner_index_5_fu_2815_p3;
wire   [31:0] winner_value_139_fu_2873_p3;
wire   [0:0] icmp_ln290_12_fu_2881_p2;
wire   [31:0] winner_value_140_fu_2887_p3;
wire   [0:0] icmp_ln290_13_fu_2895_p2;
wire   [0:0] or_ln290_6_fu_2909_p2;
wire   [3:0] select_ln290_26_fu_2901_p3;
wire   [3:0] winner_index_6_fu_2865_p3;
wire   [3:0] winner_index_7_fu_2915_p3;
wire   [31:0] winner_value_141_fu_2927_p3;
wire   [0:0] icmp_ln290_14_fu_2935_p2;
wire   [31:0] winner_value_142_fu_2941_p3;
wire   [0:0] icmp_ln290_15_fu_2949_p2;
wire   [0:0] or_ln290_7_fu_2963_p2;
wire   [4:0] select_ln290_28_fu_2955_p3;
wire   [4:0] zext_ln290_3_fu_2923_p1;
wire   [31:0] winner_value_143_fu_2977_p3;
wire   [0:0] icmp_ln290_16_fu_2985_p2;
wire   [31:0] winner_value_144_fu_2991_p3;
wire   [0:0] icmp_ln290_17_fu_2999_p2;
wire   [0:0] or_ln290_8_fu_3013_p2;
wire   [4:0] select_ln290_32_fu_3005_p3;
wire   [4:0] winner_index_8_fu_2969_p3;
wire   [31:0] winner_value_145_fu_3027_p3;
wire   [0:0] icmp_ln290_18_fu_3035_p2;
wire   [31:0] winner_value_146_fu_3041_p3;
wire   [0:0] icmp_ln290_19_fu_3049_p2;
wire   [0:0] or_ln290_9_fu_3063_p2;
wire   [4:0] select_ln290_36_fu_3055_p3;
wire   [4:0] winner_index_9_fu_3019_p3;
wire   [31:0] winner_value_147_fu_3077_p3;
wire   [0:0] icmp_ln290_20_fu_3085_p2;
wire   [31:0] winner_value_148_fu_3091_p3;
wire   [0:0] icmp_ln290_21_fu_3099_p2;
wire   [0:0] or_ln290_10_fu_3113_p2;
wire   [4:0] select_ln290_40_fu_3105_p3;
wire   [4:0] winner_index_10_fu_3069_p3;
wire   [31:0] winner_value_149_fu_3127_p3;
wire   [0:0] icmp_ln290_22_fu_3135_p2;
wire   [31:0] winner_value_150_fu_3141_p3;
wire   [0:0] icmp_ln290_23_fu_3149_p2;
wire   [0:0] or_ln290_11_fu_3163_p2;
wire   [4:0] select_ln290_46_fu_3155_p3;
wire   [4:0] winner_index_11_fu_3119_p3;
wire   [31:0] winner_value_151_fu_3177_p3;
wire   [0:0] icmp_ln290_24_fu_3185_p2;
wire   [31:0] winner_value_152_fu_3191_p3;
wire   [0:0] icmp_ln290_25_fu_3199_p2;
wire   [0:0] or_ln290_12_fu_3213_p2;
wire   [4:0] select_ln290_50_fu_3205_p3;
wire   [4:0] winner_index_12_fu_3169_p3;
wire   [31:0] winner_value_153_fu_3227_p3;
wire   [0:0] icmp_ln290_26_fu_3235_p2;
wire   [31:0] winner_value_154_fu_3241_p3;
wire   [0:0] icmp_ln290_27_fu_3249_p2;
wire   [0:0] or_ln290_13_fu_3263_p2;
wire   [4:0] select_ln290_54_fu_3255_p3;
wire   [4:0] winner_index_13_fu_3219_p3;
wire   [31:0] winner_value_155_fu_3277_p3;
wire   [0:0] icmp_ln290_28_fu_3285_p2;
wire   [31:0] winner_value_156_fu_3291_p3;
wire   [0:0] icmp_ln290_29_fu_3299_p2;
wire   [0:0] or_ln290_14_fu_3313_p2;
wire   [4:0] select_ln290_58_fu_3305_p3;
wire   [4:0] winner_index_14_fu_3269_p3;
wire   [4:0] winner_index_15_fu_3319_p3;
wire   [31:0] winner_value_157_fu_3331_p3;
wire   [0:0] icmp_ln290_30_fu_3339_p2;
wire   [31:0] winner_value_158_fu_3345_p3;
wire   [0:0] icmp_ln290_31_fu_3353_p2;
wire   [0:0] or_ln290_15_fu_3367_p2;
wire   [5:0] select_ln290_60_fu_3359_p3;
wire   [5:0] zext_ln290_4_fu_3327_p1;
wire   [31:0] winner_value_159_fu_3381_p3;
wire   [0:0] icmp_ln290_32_fu_3389_p2;
wire   [31:0] winner_value_160_fu_3395_p3;
wire   [0:0] icmp_ln290_33_fu_3403_p2;
wire   [0:0] or_ln290_16_fu_3417_p2;
wire   [5:0] select_ln290_64_fu_3409_p3;
wire   [5:0] winner_index_16_fu_3373_p3;
wire   [31:0] winner_value_161_fu_3431_p3;
wire   [0:0] icmp_ln290_34_fu_3439_p2;
wire   [31:0] winner_value_162_fu_3445_p3;
wire   [0:0] icmp_ln290_35_fu_3453_p2;
wire   [0:0] or_ln290_17_fu_3467_p2;
wire   [5:0] select_ln290_68_fu_3459_p3;
wire   [5:0] winner_index_17_fu_3423_p3;
wire   [31:0] winner_value_163_fu_3481_p3;
wire   [0:0] icmp_ln290_36_fu_3489_p2;
wire   [31:0] winner_value_164_fu_3495_p3;
wire   [0:0] icmp_ln290_37_fu_3503_p2;
wire   [0:0] or_ln290_18_fu_3517_p2;
wire   [5:0] select_ln290_72_fu_3509_p3;
wire   [5:0] winner_index_18_fu_3473_p3;
wire   [31:0] winner_value_165_fu_3531_p3;
wire   [0:0] icmp_ln290_38_fu_3539_p2;
wire   [31:0] winner_value_166_fu_3545_p3;
wire   [0:0] icmp_ln290_39_fu_3553_p2;
wire   [0:0] or_ln290_19_fu_3567_p2;
wire   [5:0] select_ln290_76_fu_3559_p3;
wire   [5:0] winner_index_19_fu_3523_p3;
wire   [31:0] winner_value_167_fu_3581_p3;
wire   [0:0] icmp_ln290_40_fu_3589_p2;
wire   [31:0] winner_value_168_fu_3595_p3;
wire   [0:0] icmp_ln290_41_fu_3603_p2;
wire   [0:0] or_ln290_20_fu_3617_p2;
wire   [5:0] select_ln290_80_fu_3609_p3;
wire   [5:0] winner_index_20_fu_3573_p3;
wire   [31:0] winner_value_169_fu_3631_p3;
wire   [0:0] icmp_ln290_42_fu_3639_p2;
wire   [31:0] winner_value_170_fu_3645_p3;
wire   [0:0] icmp_ln290_43_fu_3653_p2;
wire   [0:0] or_ln290_21_fu_3667_p2;
wire   [5:0] select_ln290_84_fu_3659_p3;
wire   [5:0] winner_index_21_fu_3623_p3;
wire   [31:0] winner_value_171_fu_3681_p3;
wire   [0:0] icmp_ln290_44_fu_3689_p2;
wire   [31:0] winner_value_172_fu_3695_p3;
wire   [0:0] icmp_ln290_45_fu_3703_p2;
wire   [0:0] or_ln290_22_fu_3717_p2;
wire   [5:0] select_ln290_88_fu_3709_p3;
wire   [5:0] winner_index_22_fu_3673_p3;
wire   [31:0] winner_value_173_fu_3731_p3;
wire   [0:0] icmp_ln290_46_fu_3739_p2;
wire   [31:0] winner_value_174_fu_3745_p3;
wire   [0:0] icmp_ln290_47_fu_3753_p2;
wire   [0:0] or_ln290_23_fu_3767_p2;
wire   [5:0] select_ln290_94_fu_3759_p3;
wire   [5:0] winner_index_23_fu_3723_p3;
wire   [31:0] winner_value_175_fu_3781_p3;
wire   [0:0] icmp_ln290_48_fu_3789_p2;
wire   [31:0] winner_value_176_fu_3795_p3;
wire   [0:0] icmp_ln290_49_fu_3803_p2;
wire   [0:0] or_ln290_24_fu_3817_p2;
wire   [5:0] select_ln290_98_fu_3809_p3;
wire   [5:0] winner_index_24_fu_3773_p3;
wire   [31:0] winner_value_177_fu_3831_p3;
wire   [0:0] icmp_ln290_50_fu_3839_p2;
wire   [31:0] winner_value_178_fu_3845_p3;
wire   [0:0] icmp_ln290_51_fu_3853_p2;
wire   [0:0] or_ln290_25_fu_3867_p2;
wire   [5:0] select_ln290_102_fu_3859_p3;
wire   [5:0] winner_index_25_fu_3823_p3;
wire   [31:0] winner_value_179_fu_3881_p3;
wire   [0:0] icmp_ln290_52_fu_3889_p2;
wire   [31:0] winner_value_180_fu_3895_p3;
wire   [0:0] icmp_ln290_53_fu_3903_p2;
wire   [0:0] or_ln290_26_fu_3917_p2;
wire   [5:0] select_ln290_106_fu_3909_p3;
wire   [5:0] winner_index_26_fu_3873_p3;
wire   [31:0] winner_value_181_fu_3931_p3;
wire   [0:0] icmp_ln290_54_fu_3939_p2;
wire   [31:0] winner_value_182_fu_3945_p3;
wire   [0:0] icmp_ln290_55_fu_3953_p2;
wire   [0:0] or_ln290_27_fu_3967_p2;
wire   [5:0] select_ln290_110_fu_3959_p3;
wire   [5:0] winner_index_27_fu_3923_p3;
wire   [31:0] winner_value_183_fu_3981_p3;
wire   [0:0] icmp_ln290_56_fu_3989_p2;
wire   [31:0] winner_value_184_fu_3995_p3;
wire   [0:0] icmp_ln290_57_fu_4003_p2;
wire   [0:0] or_ln290_28_fu_4017_p2;
wire   [5:0] select_ln290_114_fu_4009_p3;
wire   [5:0] winner_index_28_fu_3973_p3;
wire   [31:0] winner_value_185_fu_4031_p3;
wire   [0:0] icmp_ln290_58_fu_4039_p2;
wire   [31:0] winner_value_186_fu_4045_p3;
wire   [0:0] icmp_ln290_59_fu_4053_p2;
wire   [0:0] or_ln290_29_fu_4067_p2;
wire   [5:0] select_ln290_118_fu_4059_p3;
wire   [5:0] winner_index_29_fu_4023_p3;
wire   [31:0] winner_value_187_fu_4081_p3;
wire   [0:0] icmp_ln290_60_fu_4089_p2;
wire   [0:0] or_ln290_30_fu_4117_p2;
wire   [5:0] select_ln290_122_fu_4109_p3;
wire   [5:0] winner_index_30_fu_4073_p3;
wire   [31:0] reuse_select_fu_4173_p3;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [2:0] ap_NS_fsm;
wire    ap_block_pp0_stage0_subdone;
reg    ap_idle_pp0_1to1;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 3'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 ap_done_reg = 1'b0;
end

multi_radix_hex_loser_loser_tree_1_Pipeline_VITIS_LOOP_282_2_loser_tree_index_ROM_AUTO_1R #(
    .DataWidth( 6 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
loser_tree_index_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(loser_tree_index_address0),
    .ce0(loser_tree_index_ce0),
    .q0(loser_tree_index_q0)
);

multi_radix_hex_loser_mux_646_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 32 ),
    .din17_WIDTH( 32 ),
    .din18_WIDTH( 32 ),
    .din19_WIDTH( 32 ),
    .din20_WIDTH( 32 ),
    .din21_WIDTH( 32 ),
    .din22_WIDTH( 32 ),
    .din23_WIDTH( 32 ),
    .din24_WIDTH( 32 ),
    .din25_WIDTH( 32 ),
    .din26_WIDTH( 32 ),
    .din27_WIDTH( 32 ),
    .din28_WIDTH( 32 ),
    .din29_WIDTH( 32 ),
    .din30_WIDTH( 32 ),
    .din31_WIDTH( 32 ),
    .din32_WIDTH( 32 ),
    .din33_WIDTH( 32 ),
    .din34_WIDTH( 32 ),
    .din35_WIDTH( 32 ),
    .din36_WIDTH( 32 ),
    .din37_WIDTH( 32 ),
    .din38_WIDTH( 32 ),
    .din39_WIDTH( 32 ),
    .din40_WIDTH( 32 ),
    .din41_WIDTH( 32 ),
    .din42_WIDTH( 32 ),
    .din43_WIDTH( 32 ),
    .din44_WIDTH( 32 ),
    .din45_WIDTH( 32 ),
    .din46_WIDTH( 32 ),
    .din47_WIDTH( 32 ),
    .din48_WIDTH( 32 ),
    .din49_WIDTH( 32 ),
    .din50_WIDTH( 32 ),
    .din51_WIDTH( 32 ),
    .din52_WIDTH( 32 ),
    .din53_WIDTH( 32 ),
    .din54_WIDTH( 32 ),
    .din55_WIDTH( 32 ),
    .din56_WIDTH( 32 ),
    .din57_WIDTH( 32 ),
    .din58_WIDTH( 32 ),
    .din59_WIDTH( 32 ),
    .din60_WIDTH( 32 ),
    .din61_WIDTH( 32 ),
    .din62_WIDTH( 32 ),
    .din63_WIDTH( 32 ),
    .din64_WIDTH( 6 ),
    .dout_WIDTH( 32 ))
mux_646_32_1_1_U12356(
    .din0(multi_radix_hex_loser_temp0_0_q0),
    .din1(multi_radix_hex_loser_temp0_1_q0),
    .din2(multi_radix_hex_loser_temp0_2_q0),
    .din3(multi_radix_hex_loser_temp0_3_q0),
    .din4(multi_radix_hex_loser_temp0_4_q0),
    .din5(multi_radix_hex_loser_temp0_5_q0),
    .din6(multi_radix_hex_loser_temp0_6_q0),
    .din7(multi_radix_hex_loser_temp0_7_q0),
    .din8(multi_radix_hex_loser_temp0_8_q0),
    .din9(multi_radix_hex_loser_temp0_9_q0),
    .din10(multi_radix_hex_loser_temp0_10_q0),
    .din11(multi_radix_hex_loser_temp0_11_q0),
    .din12(multi_radix_hex_loser_temp0_12_q0),
    .din13(multi_radix_hex_loser_temp0_13_q0),
    .din14(multi_radix_hex_loser_temp0_14_q0),
    .din15(multi_radix_hex_loser_temp0_15_q0),
    .din16(multi_radix_hex_loser_temp0_16_q0),
    .din17(multi_radix_hex_loser_temp0_17_q0),
    .din18(multi_radix_hex_loser_temp0_18_q0),
    .din19(multi_radix_hex_loser_temp0_19_q0),
    .din20(multi_radix_hex_loser_temp0_20_q0),
    .din21(multi_radix_hex_loser_temp0_21_q0),
    .din22(multi_radix_hex_loser_temp0_22_q0),
    .din23(multi_radix_hex_loser_temp0_23_q0),
    .din24(multi_radix_hex_loser_temp0_24_q0),
    .din25(multi_radix_hex_loser_temp0_25_q0),
    .din26(multi_radix_hex_loser_temp0_26_q0),
    .din27(multi_radix_hex_loser_temp0_27_q0),
    .din28(multi_radix_hex_loser_temp0_28_q0),
    .din29(multi_radix_hex_loser_temp0_29_q0),
    .din30(multi_radix_hex_loser_temp0_30_q0),
    .din31(multi_radix_hex_loser_temp0_31_q0),
    .din32(multi_radix_hex_loser_temp0_32_q0),
    .din33(multi_radix_hex_loser_temp0_33_q0),
    .din34(multi_radix_hex_loser_temp0_34_q0),
    .din35(multi_radix_hex_loser_temp0_35_q0),
    .din36(multi_radix_hex_loser_temp0_36_q0),
    .din37(multi_radix_hex_loser_temp0_37_q0),
    .din38(multi_radix_hex_loser_temp0_38_q0),
    .din39(multi_radix_hex_loser_temp0_39_q0),
    .din40(multi_radix_hex_loser_temp0_40_q0),
    .din41(multi_radix_hex_loser_temp0_41_q0),
    .din42(multi_radix_hex_loser_temp0_42_q0),
    .din43(multi_radix_hex_loser_temp0_43_q0),
    .din44(multi_radix_hex_loser_temp0_44_q0),
    .din45(multi_radix_hex_loser_temp0_45_q0),
    .din46(multi_radix_hex_loser_temp0_46_q0),
    .din47(multi_radix_hex_loser_temp0_47_q0),
    .din48(multi_radix_hex_loser_temp0_48_q0),
    .din49(multi_radix_hex_loser_temp0_49_q0),
    .din50(multi_radix_hex_loser_temp0_50_q0),
    .din51(multi_radix_hex_loser_temp0_51_q0),
    .din52(multi_radix_hex_loser_temp0_52_q0),
    .din53(multi_radix_hex_loser_temp0_53_q0),
    .din54(multi_radix_hex_loser_temp0_54_q0),
    .din55(multi_radix_hex_loser_temp0_55_q0),
    .din56(multi_radix_hex_loser_temp0_56_q0),
    .din57(multi_radix_hex_loser_temp0_57_q0),
    .din58(multi_radix_hex_loser_temp0_58_q0),
    .din59(multi_radix_hex_loser_temp0_59_q0),
    .din60(multi_radix_hex_loser_temp0_60_q0),
    .din61(multi_radix_hex_loser_temp0_61_q0),
    .din62(multi_radix_hex_loser_temp0_62_q0),
    .din63(multi_radix_hex_loser_temp0_63_q0),
    .din64(input_index_reg_5605),
    .dout(loser_tree_data_64_fu_4586_p66)
);

multi_radix_hex_loser_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage1),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage1)) begin
            ap_enable_reg_pp0_iter0_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_fu_498 <= 20'd0;
    end else if (((icmp_ln282_fu_2351_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        i_fu_498 <= add_ln282_fu_2357_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        reuse_addr_reg_fu_490 <= 64'd18446744073709551615;
    end else if (((icmp_ln282_reg_5577 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        reuse_addr_reg_fu_490 <= zext_ln299_fu_4151_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            reuse_reg_fu_494 <= 32'd0;
        end else if (((icmp_ln282_reg_5577 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            reuse_reg_fu_494 <= add_ln299_fu_4180_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        winner_value_101_fu_706 <= loser_tree_data_51;
    end else if (((icmp_ln301_fu_4192_p2 == 1'd0) & (winner_index_31_reg_5596 == 6'd51) & (icmp_ln282_reg_5577 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        winner_value_101_fu_706 <= 32'd2147483647;
    end else if (((icmp_ln301_reg_5620 == 1'd1) & (winner_index_31_reg_5596 == 6'd51) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        winner_value_101_fu_706 <= loser_tree_data_64_fu_4586_p66;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        winner_value_103_fu_710 <= loser_tree_data_52;
    end else if (((icmp_ln301_fu_4192_p2 == 1'd0) & (winner_index_31_reg_5596 == 6'd52) & (icmp_ln282_reg_5577 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        winner_value_103_fu_710 <= 32'd2147483647;
    end else if (((icmp_ln301_reg_5620 == 1'd1) & (winner_index_31_reg_5596 == 6'd52) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        winner_value_103_fu_710 <= loser_tree_data_64_fu_4586_p66;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        winner_value_105_fu_714 <= loser_tree_data_53;
    end else if (((icmp_ln301_fu_4192_p2 == 1'd0) & (winner_index_31_reg_5596 == 6'd53) & (icmp_ln282_reg_5577 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        winner_value_105_fu_714 <= 32'd2147483647;
    end else if (((icmp_ln301_reg_5620 == 1'd1) & (winner_index_31_reg_5596 == 6'd53) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        winner_value_105_fu_714 <= loser_tree_data_64_fu_4586_p66;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        winner_value_107_fu_718 <= loser_tree_data_54;
    end else if (((icmp_ln301_fu_4192_p2 == 1'd0) & (winner_index_31_reg_5596 == 6'd54) & (icmp_ln282_reg_5577 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        winner_value_107_fu_718 <= 32'd2147483647;
    end else if (((icmp_ln301_reg_5620 == 1'd1) & (winner_index_31_reg_5596 == 6'd54) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        winner_value_107_fu_718 <= loser_tree_data_64_fu_4586_p66;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        winner_value_109_fu_722 <= loser_tree_data_55;
    end else if (((icmp_ln301_fu_4192_p2 == 1'd0) & (winner_index_31_reg_5596 == 6'd55) & (icmp_ln282_reg_5577 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        winner_value_109_fu_722 <= 32'd2147483647;
    end else if (((icmp_ln301_reg_5620 == 1'd1) & (winner_index_31_reg_5596 == 6'd55) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        winner_value_109_fu_722 <= loser_tree_data_64_fu_4586_p66;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        winner_value_111_fu_726 <= loser_tree_data_56;
    end else if (((icmp_ln301_fu_4192_p2 == 1'd0) & (winner_index_31_reg_5596 == 6'd56) & (icmp_ln282_reg_5577 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        winner_value_111_fu_726 <= 32'd2147483647;
    end else if (((icmp_ln301_reg_5620 == 1'd1) & (winner_index_31_reg_5596 == 6'd56) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        winner_value_111_fu_726 <= loser_tree_data_64_fu_4586_p66;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        winner_value_113_fu_730 <= loser_tree_data_57;
    end else if (((icmp_ln301_fu_4192_p2 == 1'd0) & (winner_index_31_reg_5596 == 6'd57) & (icmp_ln282_reg_5577 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        winner_value_113_fu_730 <= 32'd2147483647;
    end else if (((icmp_ln301_reg_5620 == 1'd1) & (winner_index_31_reg_5596 == 6'd57) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        winner_value_113_fu_730 <= loser_tree_data_64_fu_4586_p66;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        winner_value_115_fu_734 <= loser_tree_data_58;
    end else if (((icmp_ln301_fu_4192_p2 == 1'd0) & (winner_index_31_reg_5596 == 6'd58) & (icmp_ln282_reg_5577 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        winner_value_115_fu_734 <= 32'd2147483647;
    end else if (((icmp_ln301_reg_5620 == 1'd1) & (winner_index_31_reg_5596 == 6'd58) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        winner_value_115_fu_734 <= loser_tree_data_64_fu_4586_p66;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        winner_value_117_fu_738 <= loser_tree_data_59;
    end else if (((icmp_ln301_fu_4192_p2 == 1'd0) & (winner_index_31_reg_5596 == 6'd59) & (icmp_ln282_reg_5577 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        winner_value_117_fu_738 <= 32'd2147483647;
    end else if (((icmp_ln301_reg_5620 == 1'd1) & (winner_index_31_reg_5596 == 6'd59) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        winner_value_117_fu_738 <= loser_tree_data_64_fu_4586_p66;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        winner_value_119_fu_742 <= loser_tree_data_60;
    end else if (((icmp_ln301_fu_4192_p2 == 1'd0) & (winner_index_31_reg_5596 == 6'd60) & (icmp_ln282_reg_5577 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        winner_value_119_fu_742 <= 32'd2147483647;
    end else if (((icmp_ln301_reg_5620 == 1'd1) & (winner_index_31_reg_5596 == 6'd60) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        winner_value_119_fu_742 <= loser_tree_data_64_fu_4586_p66;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        winner_value_11_fu_526 <= loser_tree_data_6;
    end else if (((icmp_ln301_fu_4192_p2 == 1'd0) & (winner_index_31_reg_5596 == 6'd6) & (icmp_ln282_reg_5577 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        winner_value_11_fu_526 <= 32'd2147483647;
    end else if (((icmp_ln301_reg_5620 == 1'd1) & (winner_index_31_reg_5596 == 6'd6) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        winner_value_11_fu_526 <= loser_tree_data_64_fu_4586_p66;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        winner_value_121_fu_746 <= loser_tree_data_61;
    end else if (((icmp_ln301_fu_4192_p2 == 1'd0) & (winner_index_31_reg_5596 == 6'd61) & (icmp_ln282_reg_5577 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        winner_value_121_fu_746 <= 32'd2147483647;
    end else if (((icmp_ln301_reg_5620 == 1'd1) & (winner_index_31_reg_5596 == 6'd61) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        winner_value_121_fu_746 <= loser_tree_data_64_fu_4586_p66;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        winner_value_123_fu_750 <= loser_tree_data_62;
    end else if (((icmp_ln301_fu_4192_p2 == 1'd0) & (winner_index_31_reg_5596 == 6'd62) & (icmp_ln282_reg_5577 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        winner_value_123_fu_750 <= 32'd2147483647;
    end else if (((icmp_ln301_reg_5620 == 1'd1) & (winner_index_31_reg_5596 == 6'd62) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        winner_value_123_fu_750 <= loser_tree_data_64_fu_4586_p66;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        winner_value_125_fu_754 <= loser_tree_data_63;
    end else if (((icmp_ln301_fu_4192_p2 == 1'd0) & (winner_index_31_reg_5596 == 6'd63) & (icmp_ln282_reg_5577 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        winner_value_125_fu_754 <= 32'd2147483647;
    end else if (((icmp_ln301_reg_5620 == 1'd1) & (winner_index_31_reg_5596 == 6'd63) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        winner_value_125_fu_754 <= loser_tree_data_64_fu_4586_p66;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        winner_value_13_fu_530 <= loser_tree_data_7;
    end else if (((icmp_ln301_fu_4192_p2 == 1'd0) & (winner_index_31_reg_5596 == 6'd7) & (icmp_ln282_reg_5577 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        winner_value_13_fu_530 <= 32'd2147483647;
    end else if (((icmp_ln301_reg_5620 == 1'd1) & (winner_index_31_reg_5596 == 6'd7) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        winner_value_13_fu_530 <= loser_tree_data_64_fu_4586_p66;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        winner_value_15_fu_534 <= loser_tree_data_8;
    end else if (((icmp_ln301_fu_4192_p2 == 1'd0) & (winner_index_31_reg_5596 == 6'd8) & (icmp_ln282_reg_5577 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        winner_value_15_fu_534 <= 32'd2147483647;
    end else if (((icmp_ln301_reg_5620 == 1'd1) & (winner_index_31_reg_5596 == 6'd8) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        winner_value_15_fu_534 <= loser_tree_data_64_fu_4586_p66;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        winner_value_17_fu_538 <= loser_tree_data_9;
    end else if (((icmp_ln301_fu_4192_p2 == 1'd0) & (winner_index_31_reg_5596 == 6'd9) & (icmp_ln282_reg_5577 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        winner_value_17_fu_538 <= 32'd2147483647;
    end else if (((icmp_ln301_reg_5620 == 1'd1) & (winner_index_31_reg_5596 == 6'd9) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        winner_value_17_fu_538 <= loser_tree_data_64_fu_4586_p66;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        winner_value_19_fu_542 <= loser_tree_data_10;
    end else if (((icmp_ln301_fu_4192_p2 == 1'd0) & (winner_index_31_reg_5596 == 6'd10) & (icmp_ln282_reg_5577 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        winner_value_19_fu_542 <= 32'd2147483647;
    end else if (((icmp_ln301_reg_5620 == 1'd1) & (winner_index_31_reg_5596 == 6'd10) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        winner_value_19_fu_542 <= loser_tree_data_64_fu_4586_p66;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        winner_value_1_fu_506 <= loser_tree_data_1;
    end else if (((icmp_ln301_fu_4192_p2 == 1'd0) & (winner_index_31_reg_5596 == 6'd1) & (icmp_ln282_reg_5577 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        winner_value_1_fu_506 <= 32'd2147483647;
    end else if (((icmp_ln301_reg_5620 == 1'd1) & (winner_index_31_reg_5596 == 6'd1) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        winner_value_1_fu_506 <= loser_tree_data_64_fu_4586_p66;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        winner_value_21_fu_546 <= loser_tree_data_11;
    end else if (((icmp_ln301_fu_4192_p2 == 1'd0) & (winner_index_31_reg_5596 == 6'd11) & (icmp_ln282_reg_5577 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        winner_value_21_fu_546 <= 32'd2147483647;
    end else if (((icmp_ln301_reg_5620 == 1'd1) & (winner_index_31_reg_5596 == 6'd11) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        winner_value_21_fu_546 <= loser_tree_data_64_fu_4586_p66;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        winner_value_23_fu_550 <= loser_tree_data_12;
    end else if (((icmp_ln301_fu_4192_p2 == 1'd0) & (winner_index_31_reg_5596 == 6'd12) & (icmp_ln282_reg_5577 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        winner_value_23_fu_550 <= 32'd2147483647;
    end else if (((icmp_ln301_reg_5620 == 1'd1) & (winner_index_31_reg_5596 == 6'd12) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        winner_value_23_fu_550 <= loser_tree_data_64_fu_4586_p66;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        winner_value_25_fu_554 <= loser_tree_data_13;
    end else if (((icmp_ln301_fu_4192_p2 == 1'd0) & (winner_index_31_reg_5596 == 6'd13) & (icmp_ln282_reg_5577 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        winner_value_25_fu_554 <= 32'd2147483647;
    end else if (((icmp_ln301_reg_5620 == 1'd1) & (winner_index_31_reg_5596 == 6'd13) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        winner_value_25_fu_554 <= loser_tree_data_64_fu_4586_p66;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        winner_value_27_fu_558 <= loser_tree_data_14;
    end else if (((icmp_ln301_fu_4192_p2 == 1'd0) & (winner_index_31_reg_5596 == 6'd14) & (icmp_ln282_reg_5577 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        winner_value_27_fu_558 <= 32'd2147483647;
    end else if (((icmp_ln301_reg_5620 == 1'd1) & (winner_index_31_reg_5596 == 6'd14) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        winner_value_27_fu_558 <= loser_tree_data_64_fu_4586_p66;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        winner_value_29_fu_562 <= loser_tree_data_15;
    end else if (((icmp_ln301_fu_4192_p2 == 1'd0) & (winner_index_31_reg_5596 == 6'd15) & (icmp_ln282_reg_5577 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        winner_value_29_fu_562 <= 32'd2147483647;
    end else if (((icmp_ln301_reg_5620 == 1'd1) & (winner_index_31_reg_5596 == 6'd15) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        winner_value_29_fu_562 <= loser_tree_data_64_fu_4586_p66;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        winner_value_31_fu_566 <= loser_tree_data_16;
    end else if (((icmp_ln301_fu_4192_p2 == 1'd0) & (winner_index_31_reg_5596 == 6'd16) & (icmp_ln282_reg_5577 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        winner_value_31_fu_566 <= 32'd2147483647;
    end else if (((icmp_ln301_reg_5620 == 1'd1) & (winner_index_31_reg_5596 == 6'd16) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        winner_value_31_fu_566 <= loser_tree_data_64_fu_4586_p66;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        winner_value_33_fu_570 <= loser_tree_data_17;
    end else if (((icmp_ln301_fu_4192_p2 == 1'd0) & (winner_index_31_reg_5596 == 6'd17) & (icmp_ln282_reg_5577 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        winner_value_33_fu_570 <= 32'd2147483647;
    end else if (((icmp_ln301_reg_5620 == 1'd1) & (winner_index_31_reg_5596 == 6'd17) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        winner_value_33_fu_570 <= loser_tree_data_64_fu_4586_p66;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        winner_value_35_fu_574 <= loser_tree_data_18;
    end else if (((icmp_ln301_fu_4192_p2 == 1'd0) & (winner_index_31_reg_5596 == 6'd18) & (icmp_ln282_reg_5577 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        winner_value_35_fu_574 <= 32'd2147483647;
    end else if (((icmp_ln301_reg_5620 == 1'd1) & (winner_index_31_reg_5596 == 6'd18) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        winner_value_35_fu_574 <= loser_tree_data_64_fu_4586_p66;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        winner_value_37_fu_578 <= loser_tree_data_19;
    end else if (((icmp_ln301_fu_4192_p2 == 1'd0) & (winner_index_31_reg_5596 == 6'd19) & (icmp_ln282_reg_5577 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        winner_value_37_fu_578 <= 32'd2147483647;
    end else if (((icmp_ln301_reg_5620 == 1'd1) & (winner_index_31_reg_5596 == 6'd19) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        winner_value_37_fu_578 <= loser_tree_data_64_fu_4586_p66;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        winner_value_39_fu_582 <= loser_tree_data_20;
    end else if (((icmp_ln301_fu_4192_p2 == 1'd0) & (winner_index_31_reg_5596 == 6'd20) & (icmp_ln282_reg_5577 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        winner_value_39_fu_582 <= 32'd2147483647;
    end else if (((icmp_ln301_reg_5620 == 1'd1) & (winner_index_31_reg_5596 == 6'd20) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        winner_value_39_fu_582 <= loser_tree_data_64_fu_4586_p66;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        winner_value_3_fu_510 <= loser_tree_data_2;
    end else if (((icmp_ln301_fu_4192_p2 == 1'd0) & (winner_index_31_reg_5596 == 6'd2) & (icmp_ln282_reg_5577 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        winner_value_3_fu_510 <= 32'd2147483647;
    end else if (((icmp_ln301_reg_5620 == 1'd1) & (winner_index_31_reg_5596 == 6'd2) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        winner_value_3_fu_510 <= loser_tree_data_64_fu_4586_p66;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        winner_value_41_fu_586 <= loser_tree_data_21;
    end else if (((icmp_ln301_fu_4192_p2 == 1'd0) & (winner_index_31_reg_5596 == 6'd21) & (icmp_ln282_reg_5577 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        winner_value_41_fu_586 <= 32'd2147483647;
    end else if (((icmp_ln301_reg_5620 == 1'd1) & (winner_index_31_reg_5596 == 6'd21) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        winner_value_41_fu_586 <= loser_tree_data_64_fu_4586_p66;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        winner_value_43_fu_590 <= loser_tree_data_22;
    end else if (((icmp_ln301_fu_4192_p2 == 1'd0) & (winner_index_31_reg_5596 == 6'd22) & (icmp_ln282_reg_5577 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        winner_value_43_fu_590 <= 32'd2147483647;
    end else if (((icmp_ln301_reg_5620 == 1'd1) & (winner_index_31_reg_5596 == 6'd22) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        winner_value_43_fu_590 <= loser_tree_data_64_fu_4586_p66;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        winner_value_45_fu_594 <= loser_tree_data_23;
    end else if (((icmp_ln301_fu_4192_p2 == 1'd0) & (winner_index_31_reg_5596 == 6'd23) & (icmp_ln282_reg_5577 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        winner_value_45_fu_594 <= 32'd2147483647;
    end else if (((icmp_ln301_reg_5620 == 1'd1) & (winner_index_31_reg_5596 == 6'd23) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        winner_value_45_fu_594 <= loser_tree_data_64_fu_4586_p66;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        winner_value_47_fu_598 <= loser_tree_data_24;
    end else if (((icmp_ln301_fu_4192_p2 == 1'd0) & (winner_index_31_reg_5596 == 6'd24) & (icmp_ln282_reg_5577 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        winner_value_47_fu_598 <= 32'd2147483647;
    end else if (((icmp_ln301_reg_5620 == 1'd1) & (winner_index_31_reg_5596 == 6'd24) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        winner_value_47_fu_598 <= loser_tree_data_64_fu_4586_p66;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        winner_value_49_fu_602 <= loser_tree_data_25;
    end else if (((icmp_ln301_fu_4192_p2 == 1'd0) & (winner_index_31_reg_5596 == 6'd25) & (icmp_ln282_reg_5577 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        winner_value_49_fu_602 <= 32'd2147483647;
    end else if (((icmp_ln301_reg_5620 == 1'd1) & (winner_index_31_reg_5596 == 6'd25) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        winner_value_49_fu_602 <= loser_tree_data_64_fu_4586_p66;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        winner_value_51_fu_606 <= loser_tree_data_26;
    end else if (((icmp_ln301_fu_4192_p2 == 1'd0) & (winner_index_31_reg_5596 == 6'd26) & (icmp_ln282_reg_5577 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        winner_value_51_fu_606 <= 32'd2147483647;
    end else if (((icmp_ln301_reg_5620 == 1'd1) & (winner_index_31_reg_5596 == 6'd26) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        winner_value_51_fu_606 <= loser_tree_data_64_fu_4586_p66;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        winner_value_53_fu_610 <= loser_tree_data_27;
    end else if (((icmp_ln301_fu_4192_p2 == 1'd0) & (winner_index_31_reg_5596 == 6'd27) & (icmp_ln282_reg_5577 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        winner_value_53_fu_610 <= 32'd2147483647;
    end else if (((icmp_ln301_reg_5620 == 1'd1) & (winner_index_31_reg_5596 == 6'd27) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        winner_value_53_fu_610 <= loser_tree_data_64_fu_4586_p66;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        winner_value_55_fu_614 <= loser_tree_data_28;
    end else if (((icmp_ln301_fu_4192_p2 == 1'd0) & (winner_index_31_reg_5596 == 6'd28) & (icmp_ln282_reg_5577 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        winner_value_55_fu_614 <= 32'd2147483647;
    end else if (((icmp_ln301_reg_5620 == 1'd1) & (winner_index_31_reg_5596 == 6'd28) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        winner_value_55_fu_614 <= loser_tree_data_64_fu_4586_p66;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        winner_value_57_fu_618 <= loser_tree_data_29;
    end else if (((icmp_ln301_fu_4192_p2 == 1'd0) & (winner_index_31_reg_5596 == 6'd29) & (icmp_ln282_reg_5577 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        winner_value_57_fu_618 <= 32'd2147483647;
    end else if (((icmp_ln301_reg_5620 == 1'd1) & (winner_index_31_reg_5596 == 6'd29) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        winner_value_57_fu_618 <= loser_tree_data_64_fu_4586_p66;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        winner_value_59_fu_622 <= loser_tree_data_30;
    end else if (((icmp_ln301_fu_4192_p2 == 1'd0) & (winner_index_31_reg_5596 == 6'd30) & (icmp_ln282_reg_5577 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        winner_value_59_fu_622 <= 32'd2147483647;
    end else if (((icmp_ln301_reg_5620 == 1'd1) & (winner_index_31_reg_5596 == 6'd30) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        winner_value_59_fu_622 <= loser_tree_data_64_fu_4586_p66;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        winner_value_5_fu_514 <= loser_tree_data_3;
    end else if (((icmp_ln301_fu_4192_p2 == 1'd0) & (winner_index_31_reg_5596 == 6'd3) & (icmp_ln282_reg_5577 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        winner_value_5_fu_514 <= 32'd2147483647;
    end else if (((icmp_ln301_reg_5620 == 1'd1) & (winner_index_31_reg_5596 == 6'd3) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        winner_value_5_fu_514 <= loser_tree_data_64_fu_4586_p66;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        winner_value_61_fu_626 <= loser_tree_data_31;
    end else if (((icmp_ln301_fu_4192_p2 == 1'd0) & (winner_index_31_reg_5596 == 6'd31) & (icmp_ln282_reg_5577 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        winner_value_61_fu_626 <= 32'd2147483647;
    end else if (((icmp_ln301_reg_5620 == 1'd1) & (winner_index_31_reg_5596 == 6'd31) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        winner_value_61_fu_626 <= loser_tree_data_64_fu_4586_p66;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        winner_value_63_fu_630 <= loser_tree_data_32;
    end else if (((icmp_ln301_fu_4192_p2 == 1'd0) & (winner_index_31_reg_5596 == 6'd32) & (icmp_ln282_reg_5577 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        winner_value_63_fu_630 <= 32'd2147483647;
    end else if (((icmp_ln301_reg_5620 == 1'd1) & (winner_index_31_reg_5596 == 6'd32) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        winner_value_63_fu_630 <= loser_tree_data_64_fu_4586_p66;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        winner_value_65_fu_634 <= loser_tree_data_33;
    end else if (((icmp_ln301_fu_4192_p2 == 1'd0) & (winner_index_31_reg_5596 == 6'd33) & (icmp_ln282_reg_5577 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        winner_value_65_fu_634 <= 32'd2147483647;
    end else if (((icmp_ln301_reg_5620 == 1'd1) & (winner_index_31_reg_5596 == 6'd33) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        winner_value_65_fu_634 <= loser_tree_data_64_fu_4586_p66;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        winner_value_67_fu_638 <= loser_tree_data_34;
    end else if (((icmp_ln301_fu_4192_p2 == 1'd0) & (winner_index_31_reg_5596 == 6'd34) & (icmp_ln282_reg_5577 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        winner_value_67_fu_638 <= 32'd2147483647;
    end else if (((icmp_ln301_reg_5620 == 1'd1) & (winner_index_31_reg_5596 == 6'd34) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        winner_value_67_fu_638 <= loser_tree_data_64_fu_4586_p66;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        winner_value_69_fu_642 <= loser_tree_data_35;
    end else if (((icmp_ln301_fu_4192_p2 == 1'd0) & (winner_index_31_reg_5596 == 6'd35) & (icmp_ln282_reg_5577 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        winner_value_69_fu_642 <= 32'd2147483647;
    end else if (((icmp_ln301_reg_5620 == 1'd1) & (winner_index_31_reg_5596 == 6'd35) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        winner_value_69_fu_642 <= loser_tree_data_64_fu_4586_p66;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        winner_value_71_fu_646 <= loser_tree_data_36;
    end else if (((icmp_ln301_fu_4192_p2 == 1'd0) & (winner_index_31_reg_5596 == 6'd36) & (icmp_ln282_reg_5577 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        winner_value_71_fu_646 <= 32'd2147483647;
    end else if (((icmp_ln301_reg_5620 == 1'd1) & (winner_index_31_reg_5596 == 6'd36) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        winner_value_71_fu_646 <= loser_tree_data_64_fu_4586_p66;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        winner_value_73_fu_650 <= loser_tree_data_37;
    end else if (((icmp_ln301_fu_4192_p2 == 1'd0) & (winner_index_31_reg_5596 == 6'd37) & (icmp_ln282_reg_5577 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        winner_value_73_fu_650 <= 32'd2147483647;
    end else if (((icmp_ln301_reg_5620 == 1'd1) & (winner_index_31_reg_5596 == 6'd37) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        winner_value_73_fu_650 <= loser_tree_data_64_fu_4586_p66;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        winner_value_75_fu_654 <= loser_tree_data_38;
    end else if (((icmp_ln301_fu_4192_p2 == 1'd0) & (winner_index_31_reg_5596 == 6'd38) & (icmp_ln282_reg_5577 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        winner_value_75_fu_654 <= 32'd2147483647;
    end else if (((icmp_ln301_reg_5620 == 1'd1) & (winner_index_31_reg_5596 == 6'd38) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        winner_value_75_fu_654 <= loser_tree_data_64_fu_4586_p66;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        winner_value_77_fu_658 <= loser_tree_data_39;
    end else if (((icmp_ln301_fu_4192_p2 == 1'd0) & (winner_index_31_reg_5596 == 6'd39) & (icmp_ln282_reg_5577 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        winner_value_77_fu_658 <= 32'd2147483647;
    end else if (((icmp_ln301_reg_5620 == 1'd1) & (winner_index_31_reg_5596 == 6'd39) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        winner_value_77_fu_658 <= loser_tree_data_64_fu_4586_p66;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        winner_value_79_fu_662 <= loser_tree_data_40;
    end else if (((icmp_ln301_fu_4192_p2 == 1'd0) & (winner_index_31_reg_5596 == 6'd40) & (icmp_ln282_reg_5577 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        winner_value_79_fu_662 <= 32'd2147483647;
    end else if (((icmp_ln301_reg_5620 == 1'd1) & (winner_index_31_reg_5596 == 6'd40) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        winner_value_79_fu_662 <= loser_tree_data_64_fu_4586_p66;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        winner_value_7_fu_518 <= loser_tree_data_4;
    end else if (((icmp_ln301_fu_4192_p2 == 1'd0) & (winner_index_31_reg_5596 == 6'd4) & (icmp_ln282_reg_5577 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        winner_value_7_fu_518 <= 32'd2147483647;
    end else if (((icmp_ln301_reg_5620 == 1'd1) & (winner_index_31_reg_5596 == 6'd4) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        winner_value_7_fu_518 <= loser_tree_data_64_fu_4586_p66;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        winner_value_81_fu_666 <= loser_tree_data_41;
    end else if (((icmp_ln301_fu_4192_p2 == 1'd0) & (winner_index_31_reg_5596 == 6'd41) & (icmp_ln282_reg_5577 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        winner_value_81_fu_666 <= 32'd2147483647;
    end else if (((icmp_ln301_reg_5620 == 1'd1) & (winner_index_31_reg_5596 == 6'd41) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        winner_value_81_fu_666 <= loser_tree_data_64_fu_4586_p66;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        winner_value_83_fu_670 <= loser_tree_data_42;
    end else if (((icmp_ln301_fu_4192_p2 == 1'd0) & (winner_index_31_reg_5596 == 6'd42) & (icmp_ln282_reg_5577 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        winner_value_83_fu_670 <= 32'd2147483647;
    end else if (((icmp_ln301_reg_5620 == 1'd1) & (winner_index_31_reg_5596 == 6'd42) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        winner_value_83_fu_670 <= loser_tree_data_64_fu_4586_p66;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        winner_value_85_fu_674 <= loser_tree_data_43;
    end else if (((icmp_ln301_fu_4192_p2 == 1'd0) & (winner_index_31_reg_5596 == 6'd43) & (icmp_ln282_reg_5577 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        winner_value_85_fu_674 <= 32'd2147483647;
    end else if (((icmp_ln301_reg_5620 == 1'd1) & (winner_index_31_reg_5596 == 6'd43) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        winner_value_85_fu_674 <= loser_tree_data_64_fu_4586_p66;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        winner_value_87_fu_678 <= loser_tree_data_44;
    end else if (((icmp_ln301_fu_4192_p2 == 1'd0) & (winner_index_31_reg_5596 == 6'd44) & (icmp_ln282_reg_5577 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        winner_value_87_fu_678 <= 32'd2147483647;
    end else if (((icmp_ln301_reg_5620 == 1'd1) & (winner_index_31_reg_5596 == 6'd44) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        winner_value_87_fu_678 <= loser_tree_data_64_fu_4586_p66;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        winner_value_89_fu_682 <= loser_tree_data_45;
    end else if (((icmp_ln301_fu_4192_p2 == 1'd0) & (winner_index_31_reg_5596 == 6'd45) & (icmp_ln282_reg_5577 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        winner_value_89_fu_682 <= 32'd2147483647;
    end else if (((icmp_ln301_reg_5620 == 1'd1) & (winner_index_31_reg_5596 == 6'd45) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        winner_value_89_fu_682 <= loser_tree_data_64_fu_4586_p66;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        winner_value_91_fu_686 <= loser_tree_data_46;
    end else if (((icmp_ln301_fu_4192_p2 == 1'd0) & (winner_index_31_reg_5596 == 6'd46) & (icmp_ln282_reg_5577 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        winner_value_91_fu_686 <= 32'd2147483647;
    end else if (((icmp_ln301_reg_5620 == 1'd1) & (winner_index_31_reg_5596 == 6'd46) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        winner_value_91_fu_686 <= loser_tree_data_64_fu_4586_p66;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        winner_value_93_fu_690 <= loser_tree_data_47;
    end else if (((icmp_ln301_fu_4192_p2 == 1'd0) & (winner_index_31_reg_5596 == 6'd47) & (icmp_ln282_reg_5577 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        winner_value_93_fu_690 <= 32'd2147483647;
    end else if (((icmp_ln301_reg_5620 == 1'd1) & (winner_index_31_reg_5596 == 6'd47) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        winner_value_93_fu_690 <= loser_tree_data_64_fu_4586_p66;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        winner_value_95_fu_694 <= loser_tree_data_48;
    end else if (((icmp_ln301_fu_4192_p2 == 1'd0) & (winner_index_31_reg_5596 == 6'd48) & (icmp_ln282_reg_5577 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        winner_value_95_fu_694 <= 32'd2147483647;
    end else if (((icmp_ln301_reg_5620 == 1'd1) & (winner_index_31_reg_5596 == 6'd48) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        winner_value_95_fu_694 <= loser_tree_data_64_fu_4586_p66;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        winner_value_97_fu_698 <= loser_tree_data_49;
    end else if (((icmp_ln301_fu_4192_p2 == 1'd0) & (winner_index_31_reg_5596 == 6'd49) & (icmp_ln282_reg_5577 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        winner_value_97_fu_698 <= 32'd2147483647;
    end else if (((icmp_ln301_reg_5620 == 1'd1) & (winner_index_31_reg_5596 == 6'd49) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        winner_value_97_fu_698 <= loser_tree_data_64_fu_4586_p66;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        winner_value_99_fu_702 <= loser_tree_data_50;
    end else if (((icmp_ln301_fu_4192_p2 == 1'd0) & (winner_index_31_reg_5596 == 6'd50) & (icmp_ln282_reg_5577 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        winner_value_99_fu_702 <= 32'd2147483647;
    end else if (((icmp_ln301_reg_5620 == 1'd1) & (winner_index_31_reg_5596 == 6'd50) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        winner_value_99_fu_702 <= loser_tree_data_64_fu_4586_p66;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        winner_value_9_fu_522 <= loser_tree_data_5;
    end else if (((icmp_ln301_fu_4192_p2 == 1'd0) & (winner_index_31_reg_5596 == 6'd5) & (icmp_ln282_reg_5577 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        winner_value_9_fu_522 <= 32'd2147483647;
    end else if (((icmp_ln301_reg_5620 == 1'd1) & (winner_index_31_reg_5596 == 6'd5) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        winner_value_9_fu_522 <= loser_tree_data_64_fu_4586_p66;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        winner_value_fu_502 <= loser_tree_data;
    end else if (((icmp_ln301_fu_4192_p2 == 1'd0) & (winner_index_31_reg_5596 == 6'd0) & (icmp_ln282_reg_5577 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        winner_value_fu_502 <= 32'd2147483647;
    end else if (((icmp_ln301_reg_5620 == 1'd1) & (winner_index_31_reg_5596 == 6'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        winner_value_fu_502 <= loser_tree_data_64_fu_4586_p66;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln282_reg_5577 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        addr_cmp_reg_5615 <= addr_cmp_fu_4159_p2;
        current_indices_addr_reg_5610 <= zext_ln299_fu_4151_p1;
        input_index_reg_5605 <= loser_tree_index_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        i_129_reg_5572 <= i_fu_498;
        icmp_ln282_reg_5577 <= icmp_ln282_fu_2351_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln282_fu_2351_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        icmp_ln290_61_reg_5591 <= icmp_ln290_61_fu_4103_p2;
        winner_index_31_reg_5596 <= winner_index_31_fu_4123_p3;
        winner_value_125_load_reg_5581 <= ap_sig_allocacmp_winner_value_125_load;
        winner_value_188_reg_5586 <= winner_value_188_fu_4095_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln282_reg_5577 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln301_reg_5620 <= icmp_ln301_fu_4192_p2;
    end
end

always @ (*) begin
    if (((icmp_ln282_fu_2351_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_condition_exit_pp0_iter0_stage1 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b0)) begin
        ap_idle_pp0_1to1 = 1'b1;
    end else begin
        ap_idle_pp0_1to1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln301_reg_5620 == 1'd1) & (winner_index_31_reg_5596 == 6'd51) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_sig_allocacmp_winner_value_101_load = loser_tree_data_64_fu_4586_p66;
    end else begin
        ap_sig_allocacmp_winner_value_101_load = winner_value_101_fu_706;
    end
end

always @ (*) begin
    if (((icmp_ln301_reg_5620 == 1'd1) & (winner_index_31_reg_5596 == 6'd52) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_sig_allocacmp_winner_value_103_load = loser_tree_data_64_fu_4586_p66;
    end else begin
        ap_sig_allocacmp_winner_value_103_load = winner_value_103_fu_710;
    end
end

always @ (*) begin
    if (((icmp_ln301_reg_5620 == 1'd1) & (winner_index_31_reg_5596 == 6'd53) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_sig_allocacmp_winner_value_105_load = loser_tree_data_64_fu_4586_p66;
    end else begin
        ap_sig_allocacmp_winner_value_105_load = winner_value_105_fu_714;
    end
end

always @ (*) begin
    if (((icmp_ln301_reg_5620 == 1'd1) & (winner_index_31_reg_5596 == 6'd54) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_sig_allocacmp_winner_value_107_load = loser_tree_data_64_fu_4586_p66;
    end else begin
        ap_sig_allocacmp_winner_value_107_load = winner_value_107_fu_718;
    end
end

always @ (*) begin
    if (((icmp_ln301_reg_5620 == 1'd1) & (winner_index_31_reg_5596 == 6'd55) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_sig_allocacmp_winner_value_109_load = loser_tree_data_64_fu_4586_p66;
    end else begin
        ap_sig_allocacmp_winner_value_109_load = winner_value_109_fu_722;
    end
end

always @ (*) begin
    if (((icmp_ln301_reg_5620 == 1'd1) & (winner_index_31_reg_5596 == 6'd56) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_sig_allocacmp_winner_value_111_load = loser_tree_data_64_fu_4586_p66;
    end else begin
        ap_sig_allocacmp_winner_value_111_load = winner_value_111_fu_726;
    end
end

always @ (*) begin
    if (((icmp_ln301_reg_5620 == 1'd1) & (winner_index_31_reg_5596 == 6'd57) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_sig_allocacmp_winner_value_113_load = loser_tree_data_64_fu_4586_p66;
    end else begin
        ap_sig_allocacmp_winner_value_113_load = winner_value_113_fu_730;
    end
end

always @ (*) begin
    if (((icmp_ln301_reg_5620 == 1'd1) & (winner_index_31_reg_5596 == 6'd58) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_sig_allocacmp_winner_value_115_load = loser_tree_data_64_fu_4586_p66;
    end else begin
        ap_sig_allocacmp_winner_value_115_load = winner_value_115_fu_734;
    end
end

always @ (*) begin
    if (((icmp_ln301_reg_5620 == 1'd1) & (winner_index_31_reg_5596 == 6'd59) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_sig_allocacmp_winner_value_117_load = loser_tree_data_64_fu_4586_p66;
    end else begin
        ap_sig_allocacmp_winner_value_117_load = winner_value_117_fu_738;
    end
end

always @ (*) begin
    if (((icmp_ln301_reg_5620 == 1'd1) & (winner_index_31_reg_5596 == 6'd60) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_sig_allocacmp_winner_value_119_load = loser_tree_data_64_fu_4586_p66;
    end else begin
        ap_sig_allocacmp_winner_value_119_load = winner_value_119_fu_742;
    end
end

always @ (*) begin
    if (((icmp_ln301_reg_5620 == 1'd1) & (winner_index_31_reg_5596 == 6'd6) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_sig_allocacmp_winner_value_11_load = loser_tree_data_64_fu_4586_p66;
    end else begin
        ap_sig_allocacmp_winner_value_11_load = winner_value_11_fu_526;
    end
end

always @ (*) begin
    if (((icmp_ln301_reg_5620 == 1'd1) & (winner_index_31_reg_5596 == 6'd61) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_sig_allocacmp_winner_value_121_load = loser_tree_data_64_fu_4586_p66;
    end else begin
        ap_sig_allocacmp_winner_value_121_load = winner_value_121_fu_746;
    end
end

always @ (*) begin
    if (((icmp_ln301_reg_5620 == 1'd1) & (winner_index_31_reg_5596 == 6'd62) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_sig_allocacmp_winner_value_123_load = loser_tree_data_64_fu_4586_p66;
    end else begin
        ap_sig_allocacmp_winner_value_123_load = winner_value_123_fu_750;
    end
end

always @ (*) begin
    if (((icmp_ln301_reg_5620 == 1'd1) & (winner_index_31_reg_5596 == 6'd63) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_sig_allocacmp_winner_value_125_load = loser_tree_data_64_fu_4586_p66;
    end else begin
        ap_sig_allocacmp_winner_value_125_load = winner_value_125_fu_754;
    end
end

always @ (*) begin
    if (((icmp_ln301_reg_5620 == 1'd1) & (winner_index_31_reg_5596 == 6'd7) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_sig_allocacmp_winner_value_13_load = loser_tree_data_64_fu_4586_p66;
    end else begin
        ap_sig_allocacmp_winner_value_13_load = winner_value_13_fu_530;
    end
end

always @ (*) begin
    if (((icmp_ln301_reg_5620 == 1'd1) & (winner_index_31_reg_5596 == 6'd8) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_sig_allocacmp_winner_value_15_load = loser_tree_data_64_fu_4586_p66;
    end else begin
        ap_sig_allocacmp_winner_value_15_load = winner_value_15_fu_534;
    end
end

always @ (*) begin
    if (((icmp_ln301_reg_5620 == 1'd1) & (winner_index_31_reg_5596 == 6'd9) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_sig_allocacmp_winner_value_17_load = loser_tree_data_64_fu_4586_p66;
    end else begin
        ap_sig_allocacmp_winner_value_17_load = winner_value_17_fu_538;
    end
end

always @ (*) begin
    if (((icmp_ln301_reg_5620 == 1'd1) & (winner_index_31_reg_5596 == 6'd10) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_sig_allocacmp_winner_value_19_load = loser_tree_data_64_fu_4586_p66;
    end else begin
        ap_sig_allocacmp_winner_value_19_load = winner_value_19_fu_542;
    end
end

always @ (*) begin
    if (((icmp_ln301_reg_5620 == 1'd1) & (winner_index_31_reg_5596 == 6'd1) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_sig_allocacmp_winner_value_1_load = loser_tree_data_64_fu_4586_p66;
    end else begin
        ap_sig_allocacmp_winner_value_1_load = winner_value_1_fu_506;
    end
end

always @ (*) begin
    if (((icmp_ln301_reg_5620 == 1'd1) & (winner_index_31_reg_5596 == 6'd11) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_sig_allocacmp_winner_value_21_load = loser_tree_data_64_fu_4586_p66;
    end else begin
        ap_sig_allocacmp_winner_value_21_load = winner_value_21_fu_546;
    end
end

always @ (*) begin
    if (((icmp_ln301_reg_5620 == 1'd1) & (winner_index_31_reg_5596 == 6'd12) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_sig_allocacmp_winner_value_23_load = loser_tree_data_64_fu_4586_p66;
    end else begin
        ap_sig_allocacmp_winner_value_23_load = winner_value_23_fu_550;
    end
end

always @ (*) begin
    if (((icmp_ln301_reg_5620 == 1'd1) & (winner_index_31_reg_5596 == 6'd13) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_sig_allocacmp_winner_value_25_load = loser_tree_data_64_fu_4586_p66;
    end else begin
        ap_sig_allocacmp_winner_value_25_load = winner_value_25_fu_554;
    end
end

always @ (*) begin
    if (((icmp_ln301_reg_5620 == 1'd1) & (winner_index_31_reg_5596 == 6'd14) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_sig_allocacmp_winner_value_27_load = loser_tree_data_64_fu_4586_p66;
    end else begin
        ap_sig_allocacmp_winner_value_27_load = winner_value_27_fu_558;
    end
end

always @ (*) begin
    if (((icmp_ln301_reg_5620 == 1'd1) & (winner_index_31_reg_5596 == 6'd15) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_sig_allocacmp_winner_value_29_load = loser_tree_data_64_fu_4586_p66;
    end else begin
        ap_sig_allocacmp_winner_value_29_load = winner_value_29_fu_562;
    end
end

always @ (*) begin
    if (((icmp_ln301_reg_5620 == 1'd1) & (winner_index_31_reg_5596 == 6'd16) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_sig_allocacmp_winner_value_31_load = loser_tree_data_64_fu_4586_p66;
    end else begin
        ap_sig_allocacmp_winner_value_31_load = winner_value_31_fu_566;
    end
end

always @ (*) begin
    if (((icmp_ln301_reg_5620 == 1'd1) & (winner_index_31_reg_5596 == 6'd17) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_sig_allocacmp_winner_value_33_load = loser_tree_data_64_fu_4586_p66;
    end else begin
        ap_sig_allocacmp_winner_value_33_load = winner_value_33_fu_570;
    end
end

always @ (*) begin
    if (((icmp_ln301_reg_5620 == 1'd1) & (winner_index_31_reg_5596 == 6'd18) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_sig_allocacmp_winner_value_35_load = loser_tree_data_64_fu_4586_p66;
    end else begin
        ap_sig_allocacmp_winner_value_35_load = winner_value_35_fu_574;
    end
end

always @ (*) begin
    if (((icmp_ln301_reg_5620 == 1'd1) & (winner_index_31_reg_5596 == 6'd19) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_sig_allocacmp_winner_value_37_load = loser_tree_data_64_fu_4586_p66;
    end else begin
        ap_sig_allocacmp_winner_value_37_load = winner_value_37_fu_578;
    end
end

always @ (*) begin
    if (((icmp_ln301_reg_5620 == 1'd1) & (winner_index_31_reg_5596 == 6'd20) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_sig_allocacmp_winner_value_39_load = loser_tree_data_64_fu_4586_p66;
    end else begin
        ap_sig_allocacmp_winner_value_39_load = winner_value_39_fu_582;
    end
end

always @ (*) begin
    if (((icmp_ln301_reg_5620 == 1'd1) & (winner_index_31_reg_5596 == 6'd2) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_sig_allocacmp_winner_value_3_load = loser_tree_data_64_fu_4586_p66;
    end else begin
        ap_sig_allocacmp_winner_value_3_load = winner_value_3_fu_510;
    end
end

always @ (*) begin
    if (((icmp_ln301_reg_5620 == 1'd1) & (winner_index_31_reg_5596 == 6'd21) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_sig_allocacmp_winner_value_41_load = loser_tree_data_64_fu_4586_p66;
    end else begin
        ap_sig_allocacmp_winner_value_41_load = winner_value_41_fu_586;
    end
end

always @ (*) begin
    if (((icmp_ln301_reg_5620 == 1'd1) & (winner_index_31_reg_5596 == 6'd22) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_sig_allocacmp_winner_value_43_load = loser_tree_data_64_fu_4586_p66;
    end else begin
        ap_sig_allocacmp_winner_value_43_load = winner_value_43_fu_590;
    end
end

always @ (*) begin
    if (((icmp_ln301_reg_5620 == 1'd1) & (winner_index_31_reg_5596 == 6'd23) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_sig_allocacmp_winner_value_45_load = loser_tree_data_64_fu_4586_p66;
    end else begin
        ap_sig_allocacmp_winner_value_45_load = winner_value_45_fu_594;
    end
end

always @ (*) begin
    if (((icmp_ln301_reg_5620 == 1'd1) & (winner_index_31_reg_5596 == 6'd24) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_sig_allocacmp_winner_value_47_load = loser_tree_data_64_fu_4586_p66;
    end else begin
        ap_sig_allocacmp_winner_value_47_load = winner_value_47_fu_598;
    end
end

always @ (*) begin
    if (((icmp_ln301_reg_5620 == 1'd1) & (winner_index_31_reg_5596 == 6'd25) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_sig_allocacmp_winner_value_49_load = loser_tree_data_64_fu_4586_p66;
    end else begin
        ap_sig_allocacmp_winner_value_49_load = winner_value_49_fu_602;
    end
end

always @ (*) begin
    if (((icmp_ln301_reg_5620 == 1'd1) & (winner_index_31_reg_5596 == 6'd26) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_sig_allocacmp_winner_value_51_load = loser_tree_data_64_fu_4586_p66;
    end else begin
        ap_sig_allocacmp_winner_value_51_load = winner_value_51_fu_606;
    end
end

always @ (*) begin
    if (((icmp_ln301_reg_5620 == 1'd1) & (winner_index_31_reg_5596 == 6'd27) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_sig_allocacmp_winner_value_53_load = loser_tree_data_64_fu_4586_p66;
    end else begin
        ap_sig_allocacmp_winner_value_53_load = winner_value_53_fu_610;
    end
end

always @ (*) begin
    if (((icmp_ln301_reg_5620 == 1'd1) & (winner_index_31_reg_5596 == 6'd28) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_sig_allocacmp_winner_value_55_load = loser_tree_data_64_fu_4586_p66;
    end else begin
        ap_sig_allocacmp_winner_value_55_load = winner_value_55_fu_614;
    end
end

always @ (*) begin
    if (((icmp_ln301_reg_5620 == 1'd1) & (winner_index_31_reg_5596 == 6'd29) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_sig_allocacmp_winner_value_57_load = loser_tree_data_64_fu_4586_p66;
    end else begin
        ap_sig_allocacmp_winner_value_57_load = winner_value_57_fu_618;
    end
end

always @ (*) begin
    if (((icmp_ln301_reg_5620 == 1'd1) & (winner_index_31_reg_5596 == 6'd30) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_sig_allocacmp_winner_value_59_load = loser_tree_data_64_fu_4586_p66;
    end else begin
        ap_sig_allocacmp_winner_value_59_load = winner_value_59_fu_622;
    end
end

always @ (*) begin
    if (((icmp_ln301_reg_5620 == 1'd1) & (winner_index_31_reg_5596 == 6'd3) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_sig_allocacmp_winner_value_5_load = loser_tree_data_64_fu_4586_p66;
    end else begin
        ap_sig_allocacmp_winner_value_5_load = winner_value_5_fu_514;
    end
end

always @ (*) begin
    if (((icmp_ln301_reg_5620 == 1'd1) & (winner_index_31_reg_5596 == 6'd31) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_sig_allocacmp_winner_value_61_load = loser_tree_data_64_fu_4586_p66;
    end else begin
        ap_sig_allocacmp_winner_value_61_load = winner_value_61_fu_626;
    end
end

always @ (*) begin
    if (((icmp_ln301_reg_5620 == 1'd1) & (winner_index_31_reg_5596 == 6'd32) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_sig_allocacmp_winner_value_63_load = loser_tree_data_64_fu_4586_p66;
    end else begin
        ap_sig_allocacmp_winner_value_63_load = winner_value_63_fu_630;
    end
end

always @ (*) begin
    if (((icmp_ln301_reg_5620 == 1'd1) & (winner_index_31_reg_5596 == 6'd33) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_sig_allocacmp_winner_value_65_load = loser_tree_data_64_fu_4586_p66;
    end else begin
        ap_sig_allocacmp_winner_value_65_load = winner_value_65_fu_634;
    end
end

always @ (*) begin
    if (((icmp_ln301_reg_5620 == 1'd1) & (winner_index_31_reg_5596 == 6'd34) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_sig_allocacmp_winner_value_67_load = loser_tree_data_64_fu_4586_p66;
    end else begin
        ap_sig_allocacmp_winner_value_67_load = winner_value_67_fu_638;
    end
end

always @ (*) begin
    if (((icmp_ln301_reg_5620 == 1'd1) & (winner_index_31_reg_5596 == 6'd35) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_sig_allocacmp_winner_value_69_load = loser_tree_data_64_fu_4586_p66;
    end else begin
        ap_sig_allocacmp_winner_value_69_load = winner_value_69_fu_642;
    end
end

always @ (*) begin
    if (((icmp_ln301_reg_5620 == 1'd1) & (winner_index_31_reg_5596 == 6'd36) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_sig_allocacmp_winner_value_71_load = loser_tree_data_64_fu_4586_p66;
    end else begin
        ap_sig_allocacmp_winner_value_71_load = winner_value_71_fu_646;
    end
end

always @ (*) begin
    if (((icmp_ln301_reg_5620 == 1'd1) & (winner_index_31_reg_5596 == 6'd37) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_sig_allocacmp_winner_value_73_load = loser_tree_data_64_fu_4586_p66;
    end else begin
        ap_sig_allocacmp_winner_value_73_load = winner_value_73_fu_650;
    end
end

always @ (*) begin
    if (((icmp_ln301_reg_5620 == 1'd1) & (winner_index_31_reg_5596 == 6'd38) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_sig_allocacmp_winner_value_75_load = loser_tree_data_64_fu_4586_p66;
    end else begin
        ap_sig_allocacmp_winner_value_75_load = winner_value_75_fu_654;
    end
end

always @ (*) begin
    if (((icmp_ln301_reg_5620 == 1'd1) & (winner_index_31_reg_5596 == 6'd39) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_sig_allocacmp_winner_value_77_load = loser_tree_data_64_fu_4586_p66;
    end else begin
        ap_sig_allocacmp_winner_value_77_load = winner_value_77_fu_658;
    end
end

always @ (*) begin
    if (((icmp_ln301_reg_5620 == 1'd1) & (winner_index_31_reg_5596 == 6'd40) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_sig_allocacmp_winner_value_79_load = loser_tree_data_64_fu_4586_p66;
    end else begin
        ap_sig_allocacmp_winner_value_79_load = winner_value_79_fu_662;
    end
end

always @ (*) begin
    if (((icmp_ln301_reg_5620 == 1'd1) & (winner_index_31_reg_5596 == 6'd4) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_sig_allocacmp_winner_value_7_load = loser_tree_data_64_fu_4586_p66;
    end else begin
        ap_sig_allocacmp_winner_value_7_load = winner_value_7_fu_518;
    end
end

always @ (*) begin
    if (((icmp_ln301_reg_5620 == 1'd1) & (winner_index_31_reg_5596 == 6'd41) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_sig_allocacmp_winner_value_81_load = loser_tree_data_64_fu_4586_p66;
    end else begin
        ap_sig_allocacmp_winner_value_81_load = winner_value_81_fu_666;
    end
end

always @ (*) begin
    if (((icmp_ln301_reg_5620 == 1'd1) & (winner_index_31_reg_5596 == 6'd42) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_sig_allocacmp_winner_value_83_load = loser_tree_data_64_fu_4586_p66;
    end else begin
        ap_sig_allocacmp_winner_value_83_load = winner_value_83_fu_670;
    end
end

always @ (*) begin
    if (((icmp_ln301_reg_5620 == 1'd1) & (winner_index_31_reg_5596 == 6'd43) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_sig_allocacmp_winner_value_85_load = loser_tree_data_64_fu_4586_p66;
    end else begin
        ap_sig_allocacmp_winner_value_85_load = winner_value_85_fu_674;
    end
end

always @ (*) begin
    if (((icmp_ln301_reg_5620 == 1'd1) & (winner_index_31_reg_5596 == 6'd44) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_sig_allocacmp_winner_value_87_load = loser_tree_data_64_fu_4586_p66;
    end else begin
        ap_sig_allocacmp_winner_value_87_load = winner_value_87_fu_678;
    end
end

always @ (*) begin
    if (((icmp_ln301_reg_5620 == 1'd1) & (winner_index_31_reg_5596 == 6'd45) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_sig_allocacmp_winner_value_89_load = loser_tree_data_64_fu_4586_p66;
    end else begin
        ap_sig_allocacmp_winner_value_89_load = winner_value_89_fu_682;
    end
end

always @ (*) begin
    if (((icmp_ln301_reg_5620 == 1'd1) & (winner_index_31_reg_5596 == 6'd46) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_sig_allocacmp_winner_value_91_load = loser_tree_data_64_fu_4586_p66;
    end else begin
        ap_sig_allocacmp_winner_value_91_load = winner_value_91_fu_686;
    end
end

always @ (*) begin
    if (((icmp_ln301_reg_5620 == 1'd1) & (winner_index_31_reg_5596 == 6'd47) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_sig_allocacmp_winner_value_93_load = loser_tree_data_64_fu_4586_p66;
    end else begin
        ap_sig_allocacmp_winner_value_93_load = winner_value_93_fu_690;
    end
end

always @ (*) begin
    if (((icmp_ln301_reg_5620 == 1'd1) & (winner_index_31_reg_5596 == 6'd48) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_sig_allocacmp_winner_value_95_load = loser_tree_data_64_fu_4586_p66;
    end else begin
        ap_sig_allocacmp_winner_value_95_load = winner_value_95_fu_694;
    end
end

always @ (*) begin
    if (((icmp_ln301_reg_5620 == 1'd1) & (winner_index_31_reg_5596 == 6'd49) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_sig_allocacmp_winner_value_97_load = loser_tree_data_64_fu_4586_p66;
    end else begin
        ap_sig_allocacmp_winner_value_97_load = winner_value_97_fu_698;
    end
end

always @ (*) begin
    if (((icmp_ln301_reg_5620 == 1'd1) & (winner_index_31_reg_5596 == 6'd50) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_sig_allocacmp_winner_value_99_load = loser_tree_data_64_fu_4586_p66;
    end else begin
        ap_sig_allocacmp_winner_value_99_load = winner_value_99_fu_702;
    end
end

always @ (*) begin
    if (((icmp_ln301_reg_5620 == 1'd1) & (winner_index_31_reg_5596 == 6'd5) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_sig_allocacmp_winner_value_9_load = loser_tree_data_64_fu_4586_p66;
    end else begin
        ap_sig_allocacmp_winner_value_9_load = winner_value_9_fu_522;
    end
end

always @ (*) begin
    if (((icmp_ln301_reg_5620 == 1'd1) & (winner_index_31_reg_5596 == 6'd0) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_sig_allocacmp_winner_value_load = loser_tree_data_64_fu_4586_p66;
    end else begin
        ap_sig_allocacmp_winner_value_load = winner_value_fu_502;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        current_indices_address0 = current_indices_addr_reg_5610;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        current_indices_address0 = zext_ln299_fu_4151_p1;
    end else begin
        current_indices_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        current_indices_ce0 = 1'b1;
    end else begin
        current_indices_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln282_reg_5577 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        current_indices_we0 = 1'b1;
    end else begin
        current_indices_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        loser_tree_index_ce0 = 1'b1;
    end else begin
        loser_tree_index_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        multi_radix_hex_loser_temp0_0_ce0 = 1'b1;
    end else begin
        multi_radix_hex_loser_temp0_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        multi_radix_hex_loser_temp0_10_ce0 = 1'b1;
    end else begin
        multi_radix_hex_loser_temp0_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        multi_radix_hex_loser_temp0_11_ce0 = 1'b1;
    end else begin
        multi_radix_hex_loser_temp0_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        multi_radix_hex_loser_temp0_12_ce0 = 1'b1;
    end else begin
        multi_radix_hex_loser_temp0_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        multi_radix_hex_loser_temp0_13_ce0 = 1'b1;
    end else begin
        multi_radix_hex_loser_temp0_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        multi_radix_hex_loser_temp0_14_ce0 = 1'b1;
    end else begin
        multi_radix_hex_loser_temp0_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        multi_radix_hex_loser_temp0_15_ce0 = 1'b1;
    end else begin
        multi_radix_hex_loser_temp0_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        multi_radix_hex_loser_temp0_16_ce0 = 1'b1;
    end else begin
        multi_radix_hex_loser_temp0_16_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        multi_radix_hex_loser_temp0_17_ce0 = 1'b1;
    end else begin
        multi_radix_hex_loser_temp0_17_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        multi_radix_hex_loser_temp0_18_ce0 = 1'b1;
    end else begin
        multi_radix_hex_loser_temp0_18_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        multi_radix_hex_loser_temp0_19_ce0 = 1'b1;
    end else begin
        multi_radix_hex_loser_temp0_19_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        multi_radix_hex_loser_temp0_1_ce0 = 1'b1;
    end else begin
        multi_radix_hex_loser_temp0_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        multi_radix_hex_loser_temp0_20_ce0 = 1'b1;
    end else begin
        multi_radix_hex_loser_temp0_20_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        multi_radix_hex_loser_temp0_21_ce0 = 1'b1;
    end else begin
        multi_radix_hex_loser_temp0_21_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        multi_radix_hex_loser_temp0_22_ce0 = 1'b1;
    end else begin
        multi_radix_hex_loser_temp0_22_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        multi_radix_hex_loser_temp0_23_ce0 = 1'b1;
    end else begin
        multi_radix_hex_loser_temp0_23_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        multi_radix_hex_loser_temp0_24_ce0 = 1'b1;
    end else begin
        multi_radix_hex_loser_temp0_24_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        multi_radix_hex_loser_temp0_25_ce0 = 1'b1;
    end else begin
        multi_radix_hex_loser_temp0_25_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        multi_radix_hex_loser_temp0_26_ce0 = 1'b1;
    end else begin
        multi_radix_hex_loser_temp0_26_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        multi_radix_hex_loser_temp0_27_ce0 = 1'b1;
    end else begin
        multi_radix_hex_loser_temp0_27_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        multi_radix_hex_loser_temp0_28_ce0 = 1'b1;
    end else begin
        multi_radix_hex_loser_temp0_28_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        multi_radix_hex_loser_temp0_29_ce0 = 1'b1;
    end else begin
        multi_radix_hex_loser_temp0_29_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        multi_radix_hex_loser_temp0_2_ce0 = 1'b1;
    end else begin
        multi_radix_hex_loser_temp0_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        multi_radix_hex_loser_temp0_30_ce0 = 1'b1;
    end else begin
        multi_radix_hex_loser_temp0_30_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        multi_radix_hex_loser_temp0_31_ce0 = 1'b1;
    end else begin
        multi_radix_hex_loser_temp0_31_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        multi_radix_hex_loser_temp0_32_ce0 = 1'b1;
    end else begin
        multi_radix_hex_loser_temp0_32_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        multi_radix_hex_loser_temp0_33_ce0 = 1'b1;
    end else begin
        multi_radix_hex_loser_temp0_33_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        multi_radix_hex_loser_temp0_34_ce0 = 1'b1;
    end else begin
        multi_radix_hex_loser_temp0_34_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        multi_radix_hex_loser_temp0_35_ce0 = 1'b1;
    end else begin
        multi_radix_hex_loser_temp0_35_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        multi_radix_hex_loser_temp0_36_ce0 = 1'b1;
    end else begin
        multi_radix_hex_loser_temp0_36_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        multi_radix_hex_loser_temp0_37_ce0 = 1'b1;
    end else begin
        multi_radix_hex_loser_temp0_37_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        multi_radix_hex_loser_temp0_38_ce0 = 1'b1;
    end else begin
        multi_radix_hex_loser_temp0_38_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        multi_radix_hex_loser_temp0_39_ce0 = 1'b1;
    end else begin
        multi_radix_hex_loser_temp0_39_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        multi_radix_hex_loser_temp0_3_ce0 = 1'b1;
    end else begin
        multi_radix_hex_loser_temp0_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        multi_radix_hex_loser_temp0_40_ce0 = 1'b1;
    end else begin
        multi_radix_hex_loser_temp0_40_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        multi_radix_hex_loser_temp0_41_ce0 = 1'b1;
    end else begin
        multi_radix_hex_loser_temp0_41_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        multi_radix_hex_loser_temp0_42_ce0 = 1'b1;
    end else begin
        multi_radix_hex_loser_temp0_42_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        multi_radix_hex_loser_temp0_43_ce0 = 1'b1;
    end else begin
        multi_radix_hex_loser_temp0_43_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        multi_radix_hex_loser_temp0_44_ce0 = 1'b1;
    end else begin
        multi_radix_hex_loser_temp0_44_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        multi_radix_hex_loser_temp0_45_ce0 = 1'b1;
    end else begin
        multi_radix_hex_loser_temp0_45_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        multi_radix_hex_loser_temp0_46_ce0 = 1'b1;
    end else begin
        multi_radix_hex_loser_temp0_46_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        multi_radix_hex_loser_temp0_47_ce0 = 1'b1;
    end else begin
        multi_radix_hex_loser_temp0_47_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        multi_radix_hex_loser_temp0_48_ce0 = 1'b1;
    end else begin
        multi_radix_hex_loser_temp0_48_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        multi_radix_hex_loser_temp0_49_ce0 = 1'b1;
    end else begin
        multi_radix_hex_loser_temp0_49_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        multi_radix_hex_loser_temp0_4_ce0 = 1'b1;
    end else begin
        multi_radix_hex_loser_temp0_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        multi_radix_hex_loser_temp0_50_ce0 = 1'b1;
    end else begin
        multi_radix_hex_loser_temp0_50_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        multi_radix_hex_loser_temp0_51_ce0 = 1'b1;
    end else begin
        multi_radix_hex_loser_temp0_51_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        multi_radix_hex_loser_temp0_52_ce0 = 1'b1;
    end else begin
        multi_radix_hex_loser_temp0_52_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        multi_radix_hex_loser_temp0_53_ce0 = 1'b1;
    end else begin
        multi_radix_hex_loser_temp0_53_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        multi_radix_hex_loser_temp0_54_ce0 = 1'b1;
    end else begin
        multi_radix_hex_loser_temp0_54_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        multi_radix_hex_loser_temp0_55_ce0 = 1'b1;
    end else begin
        multi_radix_hex_loser_temp0_55_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        multi_radix_hex_loser_temp0_56_ce0 = 1'b1;
    end else begin
        multi_radix_hex_loser_temp0_56_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        multi_radix_hex_loser_temp0_57_ce0 = 1'b1;
    end else begin
        multi_radix_hex_loser_temp0_57_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        multi_radix_hex_loser_temp0_58_ce0 = 1'b1;
    end else begin
        multi_radix_hex_loser_temp0_58_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        multi_radix_hex_loser_temp0_59_ce0 = 1'b1;
    end else begin
        multi_radix_hex_loser_temp0_59_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        multi_radix_hex_loser_temp0_5_ce0 = 1'b1;
    end else begin
        multi_radix_hex_loser_temp0_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        multi_radix_hex_loser_temp0_60_ce0 = 1'b1;
    end else begin
        multi_radix_hex_loser_temp0_60_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        multi_radix_hex_loser_temp0_61_ce0 = 1'b1;
    end else begin
        multi_radix_hex_loser_temp0_61_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        multi_radix_hex_loser_temp0_62_ce0 = 1'b1;
    end else begin
        multi_radix_hex_loser_temp0_62_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        multi_radix_hex_loser_temp0_63_ce0 = 1'b1;
    end else begin
        multi_radix_hex_loser_temp0_63_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        multi_radix_hex_loser_temp0_6_ce0 = 1'b1;
    end else begin
        multi_radix_hex_loser_temp0_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        multi_radix_hex_loser_temp0_7_ce0 = 1'b1;
    end else begin
        multi_radix_hex_loser_temp0_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        multi_radix_hex_loser_temp0_8_ce0 = 1'b1;
    end else begin
        multi_radix_hex_loser_temp0_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        multi_radix_hex_loser_temp0_9_ce0 = 1'b1;
    end else begin
        multi_radix_hex_loser_temp0_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        output_r_ce0 = 1'b1;
    end else begin
        output_r_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln282_reg_5577 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        output_r_we0 = 1'b1;
    end else begin
        output_r_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to1 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b1 == ap_condition_exit_pp0_iter0_stage1)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln282_fu_2357_p2 = (i_fu_498 + 20'd1);

assign add_ln299_fu_4180_p2 = (reuse_select_fu_4173_p3 + 32'd1);

assign addr_cmp_fu_4159_p2 = ((reuse_addr_reg_fu_490 == zext_ln299_fu_4151_p1) ? 1'b1 : 1'b0);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage1;

assign current_indices_d0 = add_ln299_fu_4180_p2;

assign icmp_ln282_fu_2351_p2 = ((i_fu_498 == 20'd1000000) ? 1'b1 : 1'b0);

assign icmp_ln290_10_fu_2831_p2 = (($signed(ap_sig_allocacmp_winner_value_23_load) < $signed(winner_value_137_fu_2823_p3)) ? 1'b1 : 1'b0);

assign icmp_ln290_11_fu_2845_p2 = (($signed(ap_sig_allocacmp_winner_value_25_load) < $signed(winner_value_138_fu_2837_p3)) ? 1'b1 : 1'b0);

assign icmp_ln290_12_fu_2881_p2 = (($signed(ap_sig_allocacmp_winner_value_27_load) < $signed(winner_value_139_fu_2873_p3)) ? 1'b1 : 1'b0);

assign icmp_ln290_13_fu_2895_p2 = (($signed(ap_sig_allocacmp_winner_value_29_load) < $signed(winner_value_140_fu_2887_p3)) ? 1'b1 : 1'b0);

assign icmp_ln290_14_fu_2935_p2 = (($signed(ap_sig_allocacmp_winner_value_31_load) < $signed(winner_value_141_fu_2927_p3)) ? 1'b1 : 1'b0);

assign icmp_ln290_15_fu_2949_p2 = (($signed(ap_sig_allocacmp_winner_value_33_load) < $signed(winner_value_142_fu_2941_p3)) ? 1'b1 : 1'b0);

assign icmp_ln290_16_fu_2985_p2 = (($signed(ap_sig_allocacmp_winner_value_35_load) < $signed(winner_value_143_fu_2977_p3)) ? 1'b1 : 1'b0);

assign icmp_ln290_17_fu_2999_p2 = (($signed(ap_sig_allocacmp_winner_value_37_load) < $signed(winner_value_144_fu_2991_p3)) ? 1'b1 : 1'b0);

assign icmp_ln290_18_fu_3035_p2 = (($signed(ap_sig_allocacmp_winner_value_39_load) < $signed(winner_value_145_fu_3027_p3)) ? 1'b1 : 1'b0);

assign icmp_ln290_19_fu_3049_p2 = (($signed(ap_sig_allocacmp_winner_value_41_load) < $signed(winner_value_146_fu_3041_p3)) ? 1'b1 : 1'b0);

assign icmp_ln290_1_fu_2587_p2 = (($signed(ap_sig_allocacmp_winner_value_5_load) < $signed(winner_value_128_fu_2579_p3)) ? 1'b1 : 1'b0);

assign icmp_ln290_20_fu_3085_p2 = (($signed(ap_sig_allocacmp_winner_value_43_load) < $signed(winner_value_147_fu_3077_p3)) ? 1'b1 : 1'b0);

assign icmp_ln290_21_fu_3099_p2 = (($signed(ap_sig_allocacmp_winner_value_45_load) < $signed(winner_value_148_fu_3091_p3)) ? 1'b1 : 1'b0);

assign icmp_ln290_22_fu_3135_p2 = (($signed(ap_sig_allocacmp_winner_value_47_load) < $signed(winner_value_149_fu_3127_p3)) ? 1'b1 : 1'b0);

assign icmp_ln290_23_fu_3149_p2 = (($signed(ap_sig_allocacmp_winner_value_49_load) < $signed(winner_value_150_fu_3141_p3)) ? 1'b1 : 1'b0);

assign icmp_ln290_24_fu_3185_p2 = (($signed(ap_sig_allocacmp_winner_value_51_load) < $signed(winner_value_151_fu_3177_p3)) ? 1'b1 : 1'b0);

assign icmp_ln290_25_fu_3199_p2 = (($signed(ap_sig_allocacmp_winner_value_53_load) < $signed(winner_value_152_fu_3191_p3)) ? 1'b1 : 1'b0);

assign icmp_ln290_26_fu_3235_p2 = (($signed(ap_sig_allocacmp_winner_value_55_load) < $signed(winner_value_153_fu_3227_p3)) ? 1'b1 : 1'b0);

assign icmp_ln290_27_fu_3249_p2 = (($signed(ap_sig_allocacmp_winner_value_57_load) < $signed(winner_value_154_fu_3241_p3)) ? 1'b1 : 1'b0);

assign icmp_ln290_28_fu_3285_p2 = (($signed(ap_sig_allocacmp_winner_value_59_load) < $signed(winner_value_155_fu_3277_p3)) ? 1'b1 : 1'b0);

assign icmp_ln290_29_fu_3299_p2 = (($signed(ap_sig_allocacmp_winner_value_61_load) < $signed(winner_value_156_fu_3291_p3)) ? 1'b1 : 1'b0);

assign icmp_ln290_2_fu_2627_p2 = (($signed(ap_sig_allocacmp_winner_value_7_load) < $signed(winner_value_129_fu_2619_p3)) ? 1'b1 : 1'b0);

assign icmp_ln290_30_fu_3339_p2 = (($signed(ap_sig_allocacmp_winner_value_63_load) < $signed(winner_value_157_fu_3331_p3)) ? 1'b1 : 1'b0);

assign icmp_ln290_31_fu_3353_p2 = (($signed(ap_sig_allocacmp_winner_value_65_load) < $signed(winner_value_158_fu_3345_p3)) ? 1'b1 : 1'b0);

assign icmp_ln290_32_fu_3389_p2 = (($signed(ap_sig_allocacmp_winner_value_67_load) < $signed(winner_value_159_fu_3381_p3)) ? 1'b1 : 1'b0);

assign icmp_ln290_33_fu_3403_p2 = (($signed(ap_sig_allocacmp_winner_value_69_load) < $signed(winner_value_160_fu_3395_p3)) ? 1'b1 : 1'b0);

assign icmp_ln290_34_fu_3439_p2 = (($signed(ap_sig_allocacmp_winner_value_71_load) < $signed(winner_value_161_fu_3431_p3)) ? 1'b1 : 1'b0);

assign icmp_ln290_35_fu_3453_p2 = (($signed(ap_sig_allocacmp_winner_value_73_load) < $signed(winner_value_162_fu_3445_p3)) ? 1'b1 : 1'b0);

assign icmp_ln290_36_fu_3489_p2 = (($signed(ap_sig_allocacmp_winner_value_75_load) < $signed(winner_value_163_fu_3481_p3)) ? 1'b1 : 1'b0);

assign icmp_ln290_37_fu_3503_p2 = (($signed(ap_sig_allocacmp_winner_value_77_load) < $signed(winner_value_164_fu_3495_p3)) ? 1'b1 : 1'b0);

assign icmp_ln290_38_fu_3539_p2 = (($signed(ap_sig_allocacmp_winner_value_79_load) < $signed(winner_value_165_fu_3531_p3)) ? 1'b1 : 1'b0);

assign icmp_ln290_39_fu_3553_p2 = (($signed(ap_sig_allocacmp_winner_value_81_load) < $signed(winner_value_166_fu_3545_p3)) ? 1'b1 : 1'b0);

assign icmp_ln290_3_fu_2641_p2 = (($signed(ap_sig_allocacmp_winner_value_9_load) < $signed(winner_value_130_fu_2633_p3)) ? 1'b1 : 1'b0);

assign icmp_ln290_40_fu_3589_p2 = (($signed(ap_sig_allocacmp_winner_value_83_load) < $signed(winner_value_167_fu_3581_p3)) ? 1'b1 : 1'b0);

assign icmp_ln290_41_fu_3603_p2 = (($signed(ap_sig_allocacmp_winner_value_85_load) < $signed(winner_value_168_fu_3595_p3)) ? 1'b1 : 1'b0);

assign icmp_ln290_42_fu_3639_p2 = (($signed(ap_sig_allocacmp_winner_value_87_load) < $signed(winner_value_169_fu_3631_p3)) ? 1'b1 : 1'b0);

assign icmp_ln290_43_fu_3653_p2 = (($signed(ap_sig_allocacmp_winner_value_89_load) < $signed(winner_value_170_fu_3645_p3)) ? 1'b1 : 1'b0);

assign icmp_ln290_44_fu_3689_p2 = (($signed(ap_sig_allocacmp_winner_value_91_load) < $signed(winner_value_171_fu_3681_p3)) ? 1'b1 : 1'b0);

assign icmp_ln290_45_fu_3703_p2 = (($signed(ap_sig_allocacmp_winner_value_93_load) < $signed(winner_value_172_fu_3695_p3)) ? 1'b1 : 1'b0);

assign icmp_ln290_46_fu_3739_p2 = (($signed(ap_sig_allocacmp_winner_value_95_load) < $signed(winner_value_173_fu_3731_p3)) ? 1'b1 : 1'b0);

assign icmp_ln290_47_fu_3753_p2 = (($signed(ap_sig_allocacmp_winner_value_97_load) < $signed(winner_value_174_fu_3745_p3)) ? 1'b1 : 1'b0);

assign icmp_ln290_48_fu_3789_p2 = (($signed(ap_sig_allocacmp_winner_value_99_load) < $signed(winner_value_175_fu_3781_p3)) ? 1'b1 : 1'b0);

assign icmp_ln290_49_fu_3803_p2 = (($signed(ap_sig_allocacmp_winner_value_101_load) < $signed(winner_value_176_fu_3795_p3)) ? 1'b1 : 1'b0);

assign icmp_ln290_4_fu_2677_p2 = (($signed(ap_sig_allocacmp_winner_value_11_load) < $signed(winner_value_131_fu_2669_p3)) ? 1'b1 : 1'b0);

assign icmp_ln290_50_fu_3839_p2 = (($signed(ap_sig_allocacmp_winner_value_103_load) < $signed(winner_value_177_fu_3831_p3)) ? 1'b1 : 1'b0);

assign icmp_ln290_51_fu_3853_p2 = (($signed(ap_sig_allocacmp_winner_value_105_load) < $signed(winner_value_178_fu_3845_p3)) ? 1'b1 : 1'b0);

assign icmp_ln290_52_fu_3889_p2 = (($signed(ap_sig_allocacmp_winner_value_107_load) < $signed(winner_value_179_fu_3881_p3)) ? 1'b1 : 1'b0);

assign icmp_ln290_53_fu_3903_p2 = (($signed(ap_sig_allocacmp_winner_value_109_load) < $signed(winner_value_180_fu_3895_p3)) ? 1'b1 : 1'b0);

assign icmp_ln290_54_fu_3939_p2 = (($signed(ap_sig_allocacmp_winner_value_111_load) < $signed(winner_value_181_fu_3931_p3)) ? 1'b1 : 1'b0);

assign icmp_ln290_55_fu_3953_p2 = (($signed(ap_sig_allocacmp_winner_value_113_load) < $signed(winner_value_182_fu_3945_p3)) ? 1'b1 : 1'b0);

assign icmp_ln290_56_fu_3989_p2 = (($signed(ap_sig_allocacmp_winner_value_115_load) < $signed(winner_value_183_fu_3981_p3)) ? 1'b1 : 1'b0);

assign icmp_ln290_57_fu_4003_p2 = (($signed(ap_sig_allocacmp_winner_value_117_load) < $signed(winner_value_184_fu_3995_p3)) ? 1'b1 : 1'b0);

assign icmp_ln290_58_fu_4039_p2 = (($signed(ap_sig_allocacmp_winner_value_119_load) < $signed(winner_value_185_fu_4031_p3)) ? 1'b1 : 1'b0);

assign icmp_ln290_59_fu_4053_p2 = (($signed(ap_sig_allocacmp_winner_value_121_load) < $signed(winner_value_186_fu_4045_p3)) ? 1'b1 : 1'b0);

assign icmp_ln290_5_fu_2691_p2 = (($signed(ap_sig_allocacmp_winner_value_13_load) < $signed(winner_value_132_fu_2683_p3)) ? 1'b1 : 1'b0);

assign icmp_ln290_60_fu_4089_p2 = (($signed(ap_sig_allocacmp_winner_value_123_load) < $signed(winner_value_187_fu_4081_p3)) ? 1'b1 : 1'b0);

assign icmp_ln290_61_fu_4103_p2 = (($signed(ap_sig_allocacmp_winner_value_125_load) < $signed(winner_value_188_fu_4095_p3)) ? 1'b1 : 1'b0);

assign icmp_ln290_6_fu_2731_p2 = (($signed(ap_sig_allocacmp_winner_value_15_load) < $signed(winner_value_133_fu_2723_p3)) ? 1'b1 : 1'b0);

assign icmp_ln290_7_fu_2745_p2 = (($signed(ap_sig_allocacmp_winner_value_17_load) < $signed(winner_value_134_fu_2737_p3)) ? 1'b1 : 1'b0);

assign icmp_ln290_8_fu_2781_p2 = (($signed(ap_sig_allocacmp_winner_value_19_load) < $signed(winner_value_135_fu_2773_p3)) ? 1'b1 : 1'b0);

assign icmp_ln290_9_fu_2795_p2 = (($signed(ap_sig_allocacmp_winner_value_21_load) < $signed(winner_value_136_fu_2787_p3)) ? 1'b1 : 1'b0);

assign icmp_ln290_fu_2573_p2 = (($signed(ap_sig_allocacmp_winner_value_3_load) < $signed(winner_value_127_fu_2565_p3)) ? 1'b1 : 1'b0);

assign icmp_ln301_fu_4192_p2 = (($signed(add_ln299_fu_4180_p2) < $signed(32'd15625)) ? 1'b1 : 1'b0);

assign loser_tree_index_address0 = zext_ln298_fu_4131_p1;

assign multi_radix_hex_loser_temp0_0_address0 = zext_ln302_fu_4518_p1;

assign multi_radix_hex_loser_temp0_10_address0 = zext_ln302_fu_4518_p1;

assign multi_radix_hex_loser_temp0_11_address0 = zext_ln302_fu_4518_p1;

assign multi_radix_hex_loser_temp0_12_address0 = zext_ln302_fu_4518_p1;

assign multi_radix_hex_loser_temp0_13_address0 = zext_ln302_fu_4518_p1;

assign multi_radix_hex_loser_temp0_14_address0 = zext_ln302_fu_4518_p1;

assign multi_radix_hex_loser_temp0_15_address0 = zext_ln302_fu_4518_p1;

assign multi_radix_hex_loser_temp0_16_address0 = zext_ln302_fu_4518_p1;

assign multi_radix_hex_loser_temp0_17_address0 = zext_ln302_fu_4518_p1;

assign multi_radix_hex_loser_temp0_18_address0 = zext_ln302_fu_4518_p1;

assign multi_radix_hex_loser_temp0_19_address0 = zext_ln302_fu_4518_p1;

assign multi_radix_hex_loser_temp0_1_address0 = zext_ln302_fu_4518_p1;

assign multi_radix_hex_loser_temp0_20_address0 = zext_ln302_fu_4518_p1;

assign multi_radix_hex_loser_temp0_21_address0 = zext_ln302_fu_4518_p1;

assign multi_radix_hex_loser_temp0_22_address0 = zext_ln302_fu_4518_p1;

assign multi_radix_hex_loser_temp0_23_address0 = zext_ln302_fu_4518_p1;

assign multi_radix_hex_loser_temp0_24_address0 = zext_ln302_fu_4518_p1;

assign multi_radix_hex_loser_temp0_25_address0 = zext_ln302_fu_4518_p1;

assign multi_radix_hex_loser_temp0_26_address0 = zext_ln302_fu_4518_p1;

assign multi_radix_hex_loser_temp0_27_address0 = zext_ln302_fu_4518_p1;

assign multi_radix_hex_loser_temp0_28_address0 = zext_ln302_fu_4518_p1;

assign multi_radix_hex_loser_temp0_29_address0 = zext_ln302_fu_4518_p1;

assign multi_radix_hex_loser_temp0_2_address0 = zext_ln302_fu_4518_p1;

assign multi_radix_hex_loser_temp0_30_address0 = zext_ln302_fu_4518_p1;

assign multi_radix_hex_loser_temp0_31_address0 = zext_ln302_fu_4518_p1;

assign multi_radix_hex_loser_temp0_32_address0 = zext_ln302_fu_4518_p1;

assign multi_radix_hex_loser_temp0_33_address0 = zext_ln302_fu_4518_p1;

assign multi_radix_hex_loser_temp0_34_address0 = zext_ln302_fu_4518_p1;

assign multi_radix_hex_loser_temp0_35_address0 = zext_ln302_fu_4518_p1;

assign multi_radix_hex_loser_temp0_36_address0 = zext_ln302_fu_4518_p1;

assign multi_radix_hex_loser_temp0_37_address0 = zext_ln302_fu_4518_p1;

assign multi_radix_hex_loser_temp0_38_address0 = zext_ln302_fu_4518_p1;

assign multi_radix_hex_loser_temp0_39_address0 = zext_ln302_fu_4518_p1;

assign multi_radix_hex_loser_temp0_3_address0 = zext_ln302_fu_4518_p1;

assign multi_radix_hex_loser_temp0_40_address0 = zext_ln302_fu_4518_p1;

assign multi_radix_hex_loser_temp0_41_address0 = zext_ln302_fu_4518_p1;

assign multi_radix_hex_loser_temp0_42_address0 = zext_ln302_fu_4518_p1;

assign multi_radix_hex_loser_temp0_43_address0 = zext_ln302_fu_4518_p1;

assign multi_radix_hex_loser_temp0_44_address0 = zext_ln302_fu_4518_p1;

assign multi_radix_hex_loser_temp0_45_address0 = zext_ln302_fu_4518_p1;

assign multi_radix_hex_loser_temp0_46_address0 = zext_ln302_fu_4518_p1;

assign multi_radix_hex_loser_temp0_47_address0 = zext_ln302_fu_4518_p1;

assign multi_radix_hex_loser_temp0_48_address0 = zext_ln302_fu_4518_p1;

assign multi_radix_hex_loser_temp0_49_address0 = zext_ln302_fu_4518_p1;

assign multi_radix_hex_loser_temp0_4_address0 = zext_ln302_fu_4518_p1;

assign multi_radix_hex_loser_temp0_50_address0 = zext_ln302_fu_4518_p1;

assign multi_radix_hex_loser_temp0_51_address0 = zext_ln302_fu_4518_p1;

assign multi_radix_hex_loser_temp0_52_address0 = zext_ln302_fu_4518_p1;

assign multi_radix_hex_loser_temp0_53_address0 = zext_ln302_fu_4518_p1;

assign multi_radix_hex_loser_temp0_54_address0 = zext_ln302_fu_4518_p1;

assign multi_radix_hex_loser_temp0_55_address0 = zext_ln302_fu_4518_p1;

assign multi_radix_hex_loser_temp0_56_address0 = zext_ln302_fu_4518_p1;

assign multi_radix_hex_loser_temp0_57_address0 = zext_ln302_fu_4518_p1;

assign multi_radix_hex_loser_temp0_58_address0 = zext_ln302_fu_4518_p1;

assign multi_radix_hex_loser_temp0_59_address0 = zext_ln302_fu_4518_p1;

assign multi_radix_hex_loser_temp0_5_address0 = zext_ln302_fu_4518_p1;

assign multi_radix_hex_loser_temp0_60_address0 = zext_ln302_fu_4518_p1;

assign multi_radix_hex_loser_temp0_61_address0 = zext_ln302_fu_4518_p1;

assign multi_radix_hex_loser_temp0_62_address0 = zext_ln302_fu_4518_p1;

assign multi_radix_hex_loser_temp0_63_address0 = zext_ln302_fu_4518_p1;

assign multi_radix_hex_loser_temp0_6_address0 = zext_ln302_fu_4518_p1;

assign multi_radix_hex_loser_temp0_7_address0 = zext_ln302_fu_4518_p1;

assign multi_radix_hex_loser_temp0_8_address0 = zext_ln302_fu_4518_p1;

assign multi_radix_hex_loser_temp0_9_address0 = zext_ln302_fu_4518_p1;

assign or_ln290_10_fu_3113_p2 = (icmp_ln290_21_fu_3099_p2 | icmp_ln290_20_fu_3085_p2);

assign or_ln290_11_fu_3163_p2 = (icmp_ln290_23_fu_3149_p2 | icmp_ln290_22_fu_3135_p2);

assign or_ln290_12_fu_3213_p2 = (icmp_ln290_25_fu_3199_p2 | icmp_ln290_24_fu_3185_p2);

assign or_ln290_13_fu_3263_p2 = (icmp_ln290_27_fu_3249_p2 | icmp_ln290_26_fu_3235_p2);

assign or_ln290_14_fu_3313_p2 = (icmp_ln290_29_fu_3299_p2 | icmp_ln290_28_fu_3285_p2);

assign or_ln290_15_fu_3367_p2 = (icmp_ln290_31_fu_3353_p2 | icmp_ln290_30_fu_3339_p2);

assign or_ln290_16_fu_3417_p2 = (icmp_ln290_33_fu_3403_p2 | icmp_ln290_32_fu_3389_p2);

assign or_ln290_17_fu_3467_p2 = (icmp_ln290_35_fu_3453_p2 | icmp_ln290_34_fu_3439_p2);

assign or_ln290_18_fu_3517_p2 = (icmp_ln290_37_fu_3503_p2 | icmp_ln290_36_fu_3489_p2);

assign or_ln290_19_fu_3567_p2 = (icmp_ln290_39_fu_3553_p2 | icmp_ln290_38_fu_3539_p2);

assign or_ln290_1_fu_2655_p2 = (icmp_ln290_3_fu_2641_p2 | icmp_ln290_2_fu_2627_p2);

assign or_ln290_20_fu_3617_p2 = (icmp_ln290_41_fu_3603_p2 | icmp_ln290_40_fu_3589_p2);

assign or_ln290_21_fu_3667_p2 = (icmp_ln290_43_fu_3653_p2 | icmp_ln290_42_fu_3639_p2);

assign or_ln290_22_fu_3717_p2 = (icmp_ln290_45_fu_3703_p2 | icmp_ln290_44_fu_3689_p2);

assign or_ln290_23_fu_3767_p2 = (icmp_ln290_47_fu_3753_p2 | icmp_ln290_46_fu_3739_p2);

assign or_ln290_24_fu_3817_p2 = (icmp_ln290_49_fu_3803_p2 | icmp_ln290_48_fu_3789_p2);

assign or_ln290_25_fu_3867_p2 = (icmp_ln290_51_fu_3853_p2 | icmp_ln290_50_fu_3839_p2);

assign or_ln290_26_fu_3917_p2 = (icmp_ln290_53_fu_3903_p2 | icmp_ln290_52_fu_3889_p2);

assign or_ln290_27_fu_3967_p2 = (icmp_ln290_55_fu_3953_p2 | icmp_ln290_54_fu_3939_p2);

assign or_ln290_28_fu_4017_p2 = (icmp_ln290_57_fu_4003_p2 | icmp_ln290_56_fu_3989_p2);

assign or_ln290_29_fu_4067_p2 = (icmp_ln290_59_fu_4053_p2 | icmp_ln290_58_fu_4039_p2);

assign or_ln290_2_fu_2705_p2 = (icmp_ln290_5_fu_2691_p2 | icmp_ln290_4_fu_2677_p2);

assign or_ln290_30_fu_4117_p2 = (icmp_ln290_61_fu_4103_p2 | icmp_ln290_60_fu_4089_p2);

assign or_ln290_3_fu_2759_p2 = (icmp_ln290_7_fu_2745_p2 | icmp_ln290_6_fu_2731_p2);

assign or_ln290_4_fu_2809_p2 = (icmp_ln290_9_fu_2795_p2 | icmp_ln290_8_fu_2781_p2);

assign or_ln290_5_fu_2859_p2 = (icmp_ln290_11_fu_2845_p2 | icmp_ln290_10_fu_2831_p2);

assign or_ln290_6_fu_2909_p2 = (icmp_ln290_13_fu_2895_p2 | icmp_ln290_12_fu_2881_p2);

assign or_ln290_7_fu_2963_p2 = (icmp_ln290_15_fu_2949_p2 | icmp_ln290_14_fu_2935_p2);

assign or_ln290_8_fu_3013_p2 = (icmp_ln290_17_fu_2999_p2 | icmp_ln290_16_fu_2985_p2);

assign or_ln290_9_fu_3063_p2 = (icmp_ln290_19_fu_3049_p2 | icmp_ln290_18_fu_3035_p2);

assign or_ln290_fu_2601_p2 = (icmp_ln290_fu_2573_p2 | icmp_ln290_1_fu_2587_p2);

assign output_r_address0 = zext_ln282_fu_4141_p1;

assign output_r_d0 = ((icmp_ln290_61_reg_5591[0:0] == 1'b1) ? winner_value_125_load_reg_5581 : winner_value_188_reg_5586);

assign reuse_select_fu_4173_p3 = ((addr_cmp_reg_5615[0:0] == 1'b1) ? reuse_reg_fu_494 : current_indices_q0);

assign select_ln290_102_fu_3859_p3 = ((icmp_ln290_51_fu_3853_p2[0:0] == 1'b1) ? 6'd53 : 6'd52);

assign select_ln290_106_fu_3909_p3 = ((icmp_ln290_53_fu_3903_p2[0:0] == 1'b1) ? 6'd55 : 6'd54);

assign select_ln290_10_fu_2697_p3 = ((icmp_ln290_5_fu_2691_p2[0:0] == 1'b1) ? 3'd7 : 3'd6);

assign select_ln290_110_fu_3959_p3 = ((icmp_ln290_55_fu_3953_p2[0:0] == 1'b1) ? 6'd57 : 6'd56);

assign select_ln290_114_fu_4009_p3 = ((icmp_ln290_57_fu_4003_p2[0:0] == 1'b1) ? 6'd59 : 6'd58);

assign select_ln290_118_fu_4059_p3 = ((icmp_ln290_59_fu_4053_p2[0:0] == 1'b1) ? 6'd61 : 6'd60);

assign select_ln290_122_fu_4109_p3 = ((icmp_ln290_61_fu_4103_p2[0:0] == 1'b1) ? 6'd63 : 6'd62);

assign select_ln290_12_fu_2751_p3 = ((icmp_ln290_7_fu_2745_p2[0:0] == 1'b1) ? 4'd9 : 4'd8);

assign select_ln290_16_fu_2801_p3 = ((icmp_ln290_9_fu_2795_p2[0:0] == 1'b1) ? 4'd11 : 4'd10);

assign select_ln290_22_fu_2851_p3 = ((icmp_ln290_11_fu_2845_p2[0:0] == 1'b1) ? 4'd13 : 4'd12);

assign select_ln290_26_fu_2901_p3 = ((icmp_ln290_13_fu_2895_p2[0:0] == 1'b1) ? 4'd15 : 4'd14);

assign select_ln290_28_fu_2955_p3 = ((icmp_ln290_15_fu_2949_p2[0:0] == 1'b1) ? 5'd17 : 5'd16);

assign select_ln290_32_fu_3005_p3 = ((icmp_ln290_17_fu_2999_p2[0:0] == 1'b1) ? 5'd19 : 5'd18);

assign select_ln290_36_fu_3055_p3 = ((icmp_ln290_19_fu_3049_p2[0:0] == 1'b1) ? 5'd21 : 5'd20);

assign select_ln290_40_fu_3105_p3 = ((icmp_ln290_21_fu_3099_p2[0:0] == 1'b1) ? 5'd23 : 5'd22);

assign select_ln290_46_fu_3155_p3 = ((icmp_ln290_23_fu_3149_p2[0:0] == 1'b1) ? 5'd25 : 5'd24);

assign select_ln290_4_fu_2647_p3 = ((icmp_ln290_3_fu_2641_p2[0:0] == 1'b1) ? 3'd5 : 3'd4);

assign select_ln290_50_fu_3205_p3 = ((icmp_ln290_25_fu_3199_p2[0:0] == 1'b1) ? 5'd27 : 5'd26);

assign select_ln290_54_fu_3255_p3 = ((icmp_ln290_27_fu_3249_p2[0:0] == 1'b1) ? 5'd29 : 5'd28);

assign select_ln290_58_fu_3305_p3 = ((icmp_ln290_29_fu_3299_p2[0:0] == 1'b1) ? 5'd31 : 5'd30);

assign select_ln290_60_fu_3359_p3 = ((icmp_ln290_31_fu_3353_p2[0:0] == 1'b1) ? 6'd33 : 6'd32);

assign select_ln290_64_fu_3409_p3 = ((icmp_ln290_33_fu_3403_p2[0:0] == 1'b1) ? 6'd35 : 6'd34);

assign select_ln290_68_fu_3459_p3 = ((icmp_ln290_35_fu_3453_p2[0:0] == 1'b1) ? 6'd37 : 6'd36);

assign select_ln290_72_fu_3509_p3 = ((icmp_ln290_37_fu_3503_p2[0:0] == 1'b1) ? 6'd39 : 6'd38);

assign select_ln290_76_fu_3559_p3 = ((icmp_ln290_39_fu_3553_p2[0:0] == 1'b1) ? 6'd41 : 6'd40);

assign select_ln290_80_fu_3609_p3 = ((icmp_ln290_41_fu_3603_p2[0:0] == 1'b1) ? 6'd43 : 6'd42);

assign select_ln290_84_fu_3659_p3 = ((icmp_ln290_43_fu_3653_p2[0:0] == 1'b1) ? 6'd45 : 6'd44);

assign select_ln290_88_fu_3709_p3 = ((icmp_ln290_45_fu_3703_p2[0:0] == 1'b1) ? 6'd47 : 6'd46);

assign select_ln290_94_fu_3759_p3 = ((icmp_ln290_47_fu_3753_p2[0:0] == 1'b1) ? 6'd49 : 6'd48);

assign select_ln290_98_fu_3809_p3 = ((icmp_ln290_49_fu_3803_p2[0:0] == 1'b1) ? 6'd51 : 6'd50);

assign select_ln290_fu_2593_p3 = ((icmp_ln290_1_fu_2587_p2[0:0] == 1'b1) ? 2'd3 : 2'd2);

assign winner_index_10_fu_3069_p3 = ((or_ln290_9_fu_3063_p2[0:0] == 1'b1) ? select_ln290_36_fu_3055_p3 : winner_index_9_fu_3019_p3);

assign winner_index_11_fu_3119_p3 = ((or_ln290_10_fu_3113_p2[0:0] == 1'b1) ? select_ln290_40_fu_3105_p3 : winner_index_10_fu_3069_p3);

assign winner_index_12_fu_3169_p3 = ((or_ln290_11_fu_3163_p2[0:0] == 1'b1) ? select_ln290_46_fu_3155_p3 : winner_index_11_fu_3119_p3);

assign winner_index_13_fu_3219_p3 = ((or_ln290_12_fu_3213_p2[0:0] == 1'b1) ? select_ln290_50_fu_3205_p3 : winner_index_12_fu_3169_p3);

assign winner_index_14_fu_3269_p3 = ((or_ln290_13_fu_3263_p2[0:0] == 1'b1) ? select_ln290_54_fu_3255_p3 : winner_index_13_fu_3219_p3);

assign winner_index_15_fu_3319_p3 = ((or_ln290_14_fu_3313_p2[0:0] == 1'b1) ? select_ln290_58_fu_3305_p3 : winner_index_14_fu_3269_p3);

assign winner_index_16_fu_3373_p3 = ((or_ln290_15_fu_3367_p2[0:0] == 1'b1) ? select_ln290_60_fu_3359_p3 : zext_ln290_4_fu_3327_p1);

assign winner_index_17_fu_3423_p3 = ((or_ln290_16_fu_3417_p2[0:0] == 1'b1) ? select_ln290_64_fu_3409_p3 : winner_index_16_fu_3373_p3);

assign winner_index_18_fu_3473_p3 = ((or_ln290_17_fu_3467_p2[0:0] == 1'b1) ? select_ln290_68_fu_3459_p3 : winner_index_17_fu_3423_p3);

assign winner_index_19_fu_3523_p3 = ((or_ln290_18_fu_3517_p2[0:0] == 1'b1) ? select_ln290_72_fu_3509_p3 : winner_index_18_fu_3473_p3);

assign winner_index_1_fu_2607_p3 = ((or_ln290_fu_2601_p2[0:0] == 1'b1) ? select_ln290_fu_2593_p3 : zext_ln290_fu_2561_p1);

assign winner_index_20_fu_3573_p3 = ((or_ln290_19_fu_3567_p2[0:0] == 1'b1) ? select_ln290_76_fu_3559_p3 : winner_index_19_fu_3523_p3);

assign winner_index_21_fu_3623_p3 = ((or_ln290_20_fu_3617_p2[0:0] == 1'b1) ? select_ln290_80_fu_3609_p3 : winner_index_20_fu_3573_p3);

assign winner_index_22_fu_3673_p3 = ((or_ln290_21_fu_3667_p2[0:0] == 1'b1) ? select_ln290_84_fu_3659_p3 : winner_index_21_fu_3623_p3);

assign winner_index_23_fu_3723_p3 = ((or_ln290_22_fu_3717_p2[0:0] == 1'b1) ? select_ln290_88_fu_3709_p3 : winner_index_22_fu_3673_p3);

assign winner_index_24_fu_3773_p3 = ((or_ln290_23_fu_3767_p2[0:0] == 1'b1) ? select_ln290_94_fu_3759_p3 : winner_index_23_fu_3723_p3);

assign winner_index_25_fu_3823_p3 = ((or_ln290_24_fu_3817_p2[0:0] == 1'b1) ? select_ln290_98_fu_3809_p3 : winner_index_24_fu_3773_p3);

assign winner_index_26_fu_3873_p3 = ((or_ln290_25_fu_3867_p2[0:0] == 1'b1) ? select_ln290_102_fu_3859_p3 : winner_index_25_fu_3823_p3);

assign winner_index_27_fu_3923_p3 = ((or_ln290_26_fu_3917_p2[0:0] == 1'b1) ? select_ln290_106_fu_3909_p3 : winner_index_26_fu_3873_p3);

assign winner_index_28_fu_3973_p3 = ((or_ln290_27_fu_3967_p2[0:0] == 1'b1) ? select_ln290_110_fu_3959_p3 : winner_index_27_fu_3923_p3);

assign winner_index_29_fu_4023_p3 = ((or_ln290_28_fu_4017_p2[0:0] == 1'b1) ? select_ln290_114_fu_4009_p3 : winner_index_28_fu_3973_p3);

assign winner_index_2_fu_2661_p3 = ((or_ln290_1_fu_2655_p2[0:0] == 1'b1) ? select_ln290_4_fu_2647_p3 : zext_ln290_1_fu_2615_p1);

assign winner_index_30_fu_4073_p3 = ((or_ln290_29_fu_4067_p2[0:0] == 1'b1) ? select_ln290_118_fu_4059_p3 : winner_index_29_fu_4023_p3);

assign winner_index_31_fu_4123_p3 = ((or_ln290_30_fu_4117_p2[0:0] == 1'b1) ? select_ln290_122_fu_4109_p3 : winner_index_30_fu_4073_p3);

assign winner_index_3_fu_2711_p3 = ((or_ln290_2_fu_2705_p2[0:0] == 1'b1) ? select_ln290_10_fu_2697_p3 : winner_index_2_fu_2661_p3);

assign winner_index_4_fu_2765_p3 = ((or_ln290_3_fu_2759_p2[0:0] == 1'b1) ? select_ln290_12_fu_2751_p3 : zext_ln290_2_fu_2719_p1);

assign winner_index_5_fu_2815_p3 = ((or_ln290_4_fu_2809_p2[0:0] == 1'b1) ? select_ln290_16_fu_2801_p3 : winner_index_4_fu_2765_p3);

assign winner_index_6_fu_2865_p3 = ((or_ln290_5_fu_2859_p2[0:0] == 1'b1) ? select_ln290_22_fu_2851_p3 : winner_index_5_fu_2815_p3);

assign winner_index_7_fu_2915_p3 = ((or_ln290_6_fu_2909_p2[0:0] == 1'b1) ? select_ln290_26_fu_2901_p3 : winner_index_6_fu_2865_p3);

assign winner_index_8_fu_2969_p3 = ((or_ln290_7_fu_2963_p2[0:0] == 1'b1) ? select_ln290_28_fu_2955_p3 : zext_ln290_3_fu_2923_p1);

assign winner_index_9_fu_3019_p3 = ((or_ln290_8_fu_3013_p2[0:0] == 1'b1) ? select_ln290_32_fu_3005_p3 : winner_index_8_fu_2969_p3);

assign winner_index_fu_2555_p2 = (($signed(ap_sig_allocacmp_winner_value_1_load) < $signed(ap_sig_allocacmp_winner_value_load)) ? 1'b1 : 1'b0);

assign winner_value_127_fu_2565_p3 = ((winner_index_fu_2555_p2[0:0] == 1'b1) ? ap_sig_allocacmp_winner_value_1_load : ap_sig_allocacmp_winner_value_load);

assign winner_value_128_fu_2579_p3 = ((icmp_ln290_fu_2573_p2[0:0] == 1'b1) ? ap_sig_allocacmp_winner_value_3_load : winner_value_127_fu_2565_p3);

assign winner_value_129_fu_2619_p3 = ((icmp_ln290_1_fu_2587_p2[0:0] == 1'b1) ? ap_sig_allocacmp_winner_value_5_load : winner_value_128_fu_2579_p3);

assign winner_value_130_fu_2633_p3 = ((icmp_ln290_2_fu_2627_p2[0:0] == 1'b1) ? ap_sig_allocacmp_winner_value_7_load : winner_value_129_fu_2619_p3);

assign winner_value_131_fu_2669_p3 = ((icmp_ln290_3_fu_2641_p2[0:0] == 1'b1) ? ap_sig_allocacmp_winner_value_9_load : winner_value_130_fu_2633_p3);

assign winner_value_132_fu_2683_p3 = ((icmp_ln290_4_fu_2677_p2[0:0] == 1'b1) ? ap_sig_allocacmp_winner_value_11_load : winner_value_131_fu_2669_p3);

assign winner_value_133_fu_2723_p3 = ((icmp_ln290_5_fu_2691_p2[0:0] == 1'b1) ? ap_sig_allocacmp_winner_value_13_load : winner_value_132_fu_2683_p3);

assign winner_value_134_fu_2737_p3 = ((icmp_ln290_6_fu_2731_p2[0:0] == 1'b1) ? ap_sig_allocacmp_winner_value_15_load : winner_value_133_fu_2723_p3);

assign winner_value_135_fu_2773_p3 = ((icmp_ln290_7_fu_2745_p2[0:0] == 1'b1) ? ap_sig_allocacmp_winner_value_17_load : winner_value_134_fu_2737_p3);

assign winner_value_136_fu_2787_p3 = ((icmp_ln290_8_fu_2781_p2[0:0] == 1'b1) ? ap_sig_allocacmp_winner_value_19_load : winner_value_135_fu_2773_p3);

assign winner_value_137_fu_2823_p3 = ((icmp_ln290_9_fu_2795_p2[0:0] == 1'b1) ? ap_sig_allocacmp_winner_value_21_load : winner_value_136_fu_2787_p3);

assign winner_value_138_fu_2837_p3 = ((icmp_ln290_10_fu_2831_p2[0:0] == 1'b1) ? ap_sig_allocacmp_winner_value_23_load : winner_value_137_fu_2823_p3);

assign winner_value_139_fu_2873_p3 = ((icmp_ln290_11_fu_2845_p2[0:0] == 1'b1) ? ap_sig_allocacmp_winner_value_25_load : winner_value_138_fu_2837_p3);

assign winner_value_140_fu_2887_p3 = ((icmp_ln290_12_fu_2881_p2[0:0] == 1'b1) ? ap_sig_allocacmp_winner_value_27_load : winner_value_139_fu_2873_p3);

assign winner_value_141_fu_2927_p3 = ((icmp_ln290_13_fu_2895_p2[0:0] == 1'b1) ? ap_sig_allocacmp_winner_value_29_load : winner_value_140_fu_2887_p3);

assign winner_value_142_fu_2941_p3 = ((icmp_ln290_14_fu_2935_p2[0:0] == 1'b1) ? ap_sig_allocacmp_winner_value_31_load : winner_value_141_fu_2927_p3);

assign winner_value_143_fu_2977_p3 = ((icmp_ln290_15_fu_2949_p2[0:0] == 1'b1) ? ap_sig_allocacmp_winner_value_33_load : winner_value_142_fu_2941_p3);

assign winner_value_144_fu_2991_p3 = ((icmp_ln290_16_fu_2985_p2[0:0] == 1'b1) ? ap_sig_allocacmp_winner_value_35_load : winner_value_143_fu_2977_p3);

assign winner_value_145_fu_3027_p3 = ((icmp_ln290_17_fu_2999_p2[0:0] == 1'b1) ? ap_sig_allocacmp_winner_value_37_load : winner_value_144_fu_2991_p3);

assign winner_value_146_fu_3041_p3 = ((icmp_ln290_18_fu_3035_p2[0:0] == 1'b1) ? ap_sig_allocacmp_winner_value_39_load : winner_value_145_fu_3027_p3);

assign winner_value_147_fu_3077_p3 = ((icmp_ln290_19_fu_3049_p2[0:0] == 1'b1) ? ap_sig_allocacmp_winner_value_41_load : winner_value_146_fu_3041_p3);

assign winner_value_148_fu_3091_p3 = ((icmp_ln290_20_fu_3085_p2[0:0] == 1'b1) ? ap_sig_allocacmp_winner_value_43_load : winner_value_147_fu_3077_p3);

assign winner_value_149_fu_3127_p3 = ((icmp_ln290_21_fu_3099_p2[0:0] == 1'b1) ? ap_sig_allocacmp_winner_value_45_load : winner_value_148_fu_3091_p3);

assign winner_value_150_fu_3141_p3 = ((icmp_ln290_22_fu_3135_p2[0:0] == 1'b1) ? ap_sig_allocacmp_winner_value_47_load : winner_value_149_fu_3127_p3);

assign winner_value_151_fu_3177_p3 = ((icmp_ln290_23_fu_3149_p2[0:0] == 1'b1) ? ap_sig_allocacmp_winner_value_49_load : winner_value_150_fu_3141_p3);

assign winner_value_152_fu_3191_p3 = ((icmp_ln290_24_fu_3185_p2[0:0] == 1'b1) ? ap_sig_allocacmp_winner_value_51_load : winner_value_151_fu_3177_p3);

assign winner_value_153_fu_3227_p3 = ((icmp_ln290_25_fu_3199_p2[0:0] == 1'b1) ? ap_sig_allocacmp_winner_value_53_load : winner_value_152_fu_3191_p3);

assign winner_value_154_fu_3241_p3 = ((icmp_ln290_26_fu_3235_p2[0:0] == 1'b1) ? ap_sig_allocacmp_winner_value_55_load : winner_value_153_fu_3227_p3);

assign winner_value_155_fu_3277_p3 = ((icmp_ln290_27_fu_3249_p2[0:0] == 1'b1) ? ap_sig_allocacmp_winner_value_57_load : winner_value_154_fu_3241_p3);

assign winner_value_156_fu_3291_p3 = ((icmp_ln290_28_fu_3285_p2[0:0] == 1'b1) ? ap_sig_allocacmp_winner_value_59_load : winner_value_155_fu_3277_p3);

assign winner_value_157_fu_3331_p3 = ((icmp_ln290_29_fu_3299_p2[0:0] == 1'b1) ? ap_sig_allocacmp_winner_value_61_load : winner_value_156_fu_3291_p3);

assign winner_value_158_fu_3345_p3 = ((icmp_ln290_30_fu_3339_p2[0:0] == 1'b1) ? ap_sig_allocacmp_winner_value_63_load : winner_value_157_fu_3331_p3);

assign winner_value_159_fu_3381_p3 = ((icmp_ln290_31_fu_3353_p2[0:0] == 1'b1) ? ap_sig_allocacmp_winner_value_65_load : winner_value_158_fu_3345_p3);

assign winner_value_160_fu_3395_p3 = ((icmp_ln290_32_fu_3389_p2[0:0] == 1'b1) ? ap_sig_allocacmp_winner_value_67_load : winner_value_159_fu_3381_p3);

assign winner_value_161_fu_3431_p3 = ((icmp_ln290_33_fu_3403_p2[0:0] == 1'b1) ? ap_sig_allocacmp_winner_value_69_load : winner_value_160_fu_3395_p3);

assign winner_value_162_fu_3445_p3 = ((icmp_ln290_34_fu_3439_p2[0:0] == 1'b1) ? ap_sig_allocacmp_winner_value_71_load : winner_value_161_fu_3431_p3);

assign winner_value_163_fu_3481_p3 = ((icmp_ln290_35_fu_3453_p2[0:0] == 1'b1) ? ap_sig_allocacmp_winner_value_73_load : winner_value_162_fu_3445_p3);

assign winner_value_164_fu_3495_p3 = ((icmp_ln290_36_fu_3489_p2[0:0] == 1'b1) ? ap_sig_allocacmp_winner_value_75_load : winner_value_163_fu_3481_p3);

assign winner_value_165_fu_3531_p3 = ((icmp_ln290_37_fu_3503_p2[0:0] == 1'b1) ? ap_sig_allocacmp_winner_value_77_load : winner_value_164_fu_3495_p3);

assign winner_value_166_fu_3545_p3 = ((icmp_ln290_38_fu_3539_p2[0:0] == 1'b1) ? ap_sig_allocacmp_winner_value_79_load : winner_value_165_fu_3531_p3);

assign winner_value_167_fu_3581_p3 = ((icmp_ln290_39_fu_3553_p2[0:0] == 1'b1) ? ap_sig_allocacmp_winner_value_81_load : winner_value_166_fu_3545_p3);

assign winner_value_168_fu_3595_p3 = ((icmp_ln290_40_fu_3589_p2[0:0] == 1'b1) ? ap_sig_allocacmp_winner_value_83_load : winner_value_167_fu_3581_p3);

assign winner_value_169_fu_3631_p3 = ((icmp_ln290_41_fu_3603_p2[0:0] == 1'b1) ? ap_sig_allocacmp_winner_value_85_load : winner_value_168_fu_3595_p3);

assign winner_value_170_fu_3645_p3 = ((icmp_ln290_42_fu_3639_p2[0:0] == 1'b1) ? ap_sig_allocacmp_winner_value_87_load : winner_value_169_fu_3631_p3);

assign winner_value_171_fu_3681_p3 = ((icmp_ln290_43_fu_3653_p2[0:0] == 1'b1) ? ap_sig_allocacmp_winner_value_89_load : winner_value_170_fu_3645_p3);

assign winner_value_172_fu_3695_p3 = ((icmp_ln290_44_fu_3689_p2[0:0] == 1'b1) ? ap_sig_allocacmp_winner_value_91_load : winner_value_171_fu_3681_p3);

assign winner_value_173_fu_3731_p3 = ((icmp_ln290_45_fu_3703_p2[0:0] == 1'b1) ? ap_sig_allocacmp_winner_value_93_load : winner_value_172_fu_3695_p3);

assign winner_value_174_fu_3745_p3 = ((icmp_ln290_46_fu_3739_p2[0:0] == 1'b1) ? ap_sig_allocacmp_winner_value_95_load : winner_value_173_fu_3731_p3);

assign winner_value_175_fu_3781_p3 = ((icmp_ln290_47_fu_3753_p2[0:0] == 1'b1) ? ap_sig_allocacmp_winner_value_97_load : winner_value_174_fu_3745_p3);

assign winner_value_176_fu_3795_p3 = ((icmp_ln290_48_fu_3789_p2[0:0] == 1'b1) ? ap_sig_allocacmp_winner_value_99_load : winner_value_175_fu_3781_p3);

assign winner_value_177_fu_3831_p3 = ((icmp_ln290_49_fu_3803_p2[0:0] == 1'b1) ? ap_sig_allocacmp_winner_value_101_load : winner_value_176_fu_3795_p3);

assign winner_value_178_fu_3845_p3 = ((icmp_ln290_50_fu_3839_p2[0:0] == 1'b1) ? ap_sig_allocacmp_winner_value_103_load : winner_value_177_fu_3831_p3);

assign winner_value_179_fu_3881_p3 = ((icmp_ln290_51_fu_3853_p2[0:0] == 1'b1) ? ap_sig_allocacmp_winner_value_105_load : winner_value_178_fu_3845_p3);

assign winner_value_180_fu_3895_p3 = ((icmp_ln290_52_fu_3889_p2[0:0] == 1'b1) ? ap_sig_allocacmp_winner_value_107_load : winner_value_179_fu_3881_p3);

assign winner_value_181_fu_3931_p3 = ((icmp_ln290_53_fu_3903_p2[0:0] == 1'b1) ? ap_sig_allocacmp_winner_value_109_load : winner_value_180_fu_3895_p3);

assign winner_value_182_fu_3945_p3 = ((icmp_ln290_54_fu_3939_p2[0:0] == 1'b1) ? ap_sig_allocacmp_winner_value_111_load : winner_value_181_fu_3931_p3);

assign winner_value_183_fu_3981_p3 = ((icmp_ln290_55_fu_3953_p2[0:0] == 1'b1) ? ap_sig_allocacmp_winner_value_113_load : winner_value_182_fu_3945_p3);

assign winner_value_184_fu_3995_p3 = ((icmp_ln290_56_fu_3989_p2[0:0] == 1'b1) ? ap_sig_allocacmp_winner_value_115_load : winner_value_183_fu_3981_p3);

assign winner_value_185_fu_4031_p3 = ((icmp_ln290_57_fu_4003_p2[0:0] == 1'b1) ? ap_sig_allocacmp_winner_value_117_load : winner_value_184_fu_3995_p3);

assign winner_value_186_fu_4045_p3 = ((icmp_ln290_58_fu_4039_p2[0:0] == 1'b1) ? ap_sig_allocacmp_winner_value_119_load : winner_value_185_fu_4031_p3);

assign winner_value_187_fu_4081_p3 = ((icmp_ln290_59_fu_4053_p2[0:0] == 1'b1) ? ap_sig_allocacmp_winner_value_121_load : winner_value_186_fu_4045_p3);

assign winner_value_188_fu_4095_p3 = ((icmp_ln290_60_fu_4089_p2[0:0] == 1'b1) ? ap_sig_allocacmp_winner_value_123_load : winner_value_187_fu_4081_p3);

assign zext_ln282_fu_4141_p1 = i_129_reg_5572;

assign zext_ln290_1_fu_2615_p1 = winner_index_1_fu_2607_p3;

assign zext_ln290_2_fu_2719_p1 = winner_index_3_fu_2711_p3;

assign zext_ln290_3_fu_2923_p1 = winner_index_7_fu_2915_p3;

assign zext_ln290_4_fu_3327_p1 = winner_index_15_fu_3319_p3;

assign zext_ln290_fu_2561_p1 = winner_index_fu_2555_p2;

assign zext_ln298_fu_4131_p1 = winner_index_31_fu_4123_p3;

assign zext_ln299_fu_4151_p1 = loser_tree_index_q0;

assign zext_ln302_fu_4518_p1 = add_ln299_fu_4180_p2;

endmodule //multi_radix_hex_loser_loser_tree_1_Pipeline_VITIS_LOOP_282_2
